{"hash":"0e2f75d027ead32de70490a039fa858061a4016c","data":{"post":{"title":"Episode 39 - Relyze Decompiler, jQuery XSS, Sandbox Escaping and 0-Click Mail RCE","path":"/posts/episode-39/","date":"28 April 2020","date_iso":"2020-04-28","description":"Since we forgot to cover it when it came out, we look at Relyze's new decompiler that is available on the free version. There is also some sandbox escaping, some crypto issues (AMD's SME/SEV) and even some IBM 0days.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/_g9cH0A8sQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<hr />\n<p>Since we forgot to cover it when it came out, we look at Relyze's new decompiler that is available on the free version. There is also some sandbox escaping, some crypto issues (AMD's SME/SEV) and even some IBM 0days.</p>\n<p>&nbsp;</p>\n<ul>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=41\">00:00:41</a>] <a href=\"https://www.relyze.com/\">Relyze Decompiler</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=1334\">00:22:14</a>] <a href=\"https://blog.mozilla.org/security/2020/04/23/bug-bounty-2019-and-future/\">Firefox's Bug Bounty in 2019 and into the Future</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=1837\">00:30:37</a>] <a href=\"https://twitter.com/SteamDB/status/1252961862058205184\">Source code for both CS:GO and TF2 Leaked</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=2346\">00:39:06</a>] <a href=\"https://community.sophos.com/kb/en-us/135412\">Fixing SQL injection vulnerability and malicious code execution in XG Firewall/SFOS</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=2682\">00:44:42</a>] <a href=\"https://trioxsecurity.com/msi-truecolor-unquoted-service-path-vulnerability/\">MSI TrueColor Unquoted Service Path Vulnerability</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=2931\">00:48:51</a>] <a href=\"https://www.shielder.it/blog/1-click-rce-on-keybase/\">1-click RCE on Keybase </a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=3364\">00:56:04</a>] <a href=\"https://github.com/marcinguy/jquery-xss-in-html\">jQuery < 3.5 Cross-Site Scripting (XSS) in html()</a><br />\n\t<ul><li><a href=\"https://xss.pwnfunction.com/challenges/ww3/\">https://xss.pwnfunction.com/challenges/ww3/</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=3705\">01:01:45</a>] <a href=\"https://github.com/pedrib/PoC/blob/master/advisories/IBM/ibm_drm/ibm_drm_rce.md\">Multiple 0 day vulnerabilities in IBM Data Risk Manager</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=4652\">01:17:32</a>] <a href=\"https://googleprojectzero.blogspot.com/2020/04/you-wont-believe-what-this-one-line.html\">You Won't Believe what this One Line Change Did to the Chrome Sandbox</a><br />\n\t<ul><li><a href=\"https://docs.microsoft.com/en-us/archive/blogs/david_leblanc/practical-windows-sandboxing-part-1\">https://docs.microsoft.com/en-us/archive/blogs/david_leblanc/practical-windows-sandboxing-part-1</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=5046\">01:24:06</a>] <a href=\"https://blog.zecops.com/vulnerabilities/youve-got-0-click-mail/\">Youâ€™ve Got (0-click) Mail!</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=5497\">01:31:37</a>] <a href=\"https://www.tiraniddo.dev/2020/04/sharing-logon-session-little-too-much.html\">Sharing a Logon Session a Little Too Much</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=5828\">01:37:08</a>] <a href=\"https://www.computer.org/csdl/proceedings-article/sp/2020/349700b746/1j2LgvKzg1q\">SEVurity: No Security Without Integrity - Breaking Integrity-Free Memory Encryption with Minimal Assumptions</a><br />\n\t<ul><li><a href=\"https://0x0539.net/play/fangorn/crypto_cookie\">https://0x0539.net/play/fangorn/crypto_cookie</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=6438\">01:47:18</a>] <a href=\"https://www.computer.org/csdl/proceedings-article/sp/2020/349700b214/1j2LgfBq2fS\">MarkUs: Drop-in Use-After-Free Prevention for Low-Level Languages</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=6885\">01:54:45</a>] <a href=\"https://insinuator.net/2020/04/cve-2020-0022-an-android-8-0-9-0-bluetooth-zero-click-rce-bluefrag/\">Android 8.0-9.0 Bluetooth Zero-Click RCE [CVE-2020-0022]</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=7054\">01:57:34</a>] <a href=\"https://revers.engineering/patchguard-detection-of-hypervisor-based-instrospection-p1/\">Patchguard: Detection of Hypervisor Based Introspection</a><br />\n\t<ul><li><a href=\"https://revers.engineering/patchguard-detection-of-hypervisor-based-instrospection-p2/\">https://revers.engineering/patchguard-detection-of-hypervisor-based-instrospection-p2/</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=_g9cH0A8sQ&t=7185\">01:59:45</a>] <a href=\"https://www.youtube.com/watch?v=krFHJx08dMo\">HITB Lockdown Livestream Day 1</a><br />\n\t<ul></ul></li>\n</ul>\n<p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p>\n<!--TRANSCRIPT\n{\"transcript\": [{\"speaker\": 2, \"line\": \" Hello everyone. Welcome to another episode of the day Zero podcast. I'm Specter with me is zi. So we're just going to jump right into some news. So we have something if you are one of those to cover first and it's something we actually missed a few weeks ago on April 17th realized desktop 3 was released and the big thing that dropped with that was that they actually change the licensing though that the non-commercial use license or the personal license were realized was made free where it wasn't before so we now have Another decompiler out there, that's not $10,000. So that is a pretty big point that we ended up missing especially because we covered Benja last week and we didn't really cover realize much and that's just something we missed somehow. So we definitely wanted to remedy that and\", \"start\": 9.1}, {\"speaker\": 1, \"line\": \" yeah, I think we kind of missed it. I don't know about you. I saw people talking about realized a little bit like saw some chatter, but I'd remembered realized as like I said, I think we've mentioned we have mentioned it before I think we've looked at it not On stream before but just in general and well didn't like it didn't as far as I know didn't have a decompiler that point either either. Yeah, I don't think it did. So when I saw it, I didn't even know they are planning a decompiler. So I saw people talk about the updates like okay, it's just another update and we don't generally tend to just cover, you know, just standard updates. So I didn't even really look into it. So it was until somebody pointed out know there's a decompiler with it that We actually started looking at it and I think talking before stream. You mentioned that you don't really take too much of a look. At the decompiler yet or have you\", \"start\": 54.1}, {\"speaker\": 2, \"line\": \" I haven't really looked at realize I am going to be doing a strain that's going to be looking at it probably tomorrow, but some at some point throughout this week. I'm not setting tomorrow like Hart and stone, but I would like to really like do kind of like what we did with Benja on a stream do that with realize. You know, I think for those of you who is there to shake so for\", \"start\": 109.0}, {\"speaker\": 1, \"line\": \" those of you who didn't catch that also we did do a like for our stream looking at the binge of decompiler. We had want the Ciphertext come in answered some questions. Tell us a little bit about the future like there's a lot of good information in that stream.\", \"start\": 129.6}, {\"speaker\": 2, \"line\": \" Yeah. I think he joined it about 90 minutes in for anybody wants a timestamp for that.\", \"start\": 143.6}, {\"speaker\": 1, \"line\": \" But yeah, so coming on to realize I did take a look at some things mostly things that we noticed Benja did or didn't do so the obvious one was with Binger. We noticed that a lot of are not a lot of but I'll in that bad characters from Rob Emporium. I wasn't doing that. Initialization so I know it's real eyes does have that in there it gets that cracked unsigned local characters gets the type right there. I did find a little bit weird that this fourth line a created it as an array sized one. And yeah did the office like I don't quite get why did it for that one like that?\", \"start\": 149.3}, {\"speaker\": 2, \"line\": \" But many others.\", \"start\": 188.6}, {\"speaker\": 1, \"line\": \" Yeah. And I mean, obviously you tell it the type you tell it's an array it rewrites everything just fine. A few other things I noticed in general. It didn't do for Loops. It would always prefer to Sting the while loop and just having the anti. Yeah similar to what Ghidorah would do which I mean the for Loop is what it was written as prop. Well actually, okay. So in another example that I decompiled, oh is definitely for loop, I would assume this is a for loop from Rob important given what it's doing but I don't technically know that the other thing I noticed here is On line 27 you have the access by index like the array type access but then when its accessing the other array, it just did a pointer calculation added the aqua technically it added the pointer to the offset. So it did that actually most of the time it did intend to create that array index. I just this is another one of those cases where I don't see why saw this one is an array and then wouldn't treat the other one as an\", \"start\": 189.9}, {\"speaker\": 2, \"line\": \" array. Yeah, there must be a very subtle discrepancy in the instructions that like it just\", \"start\": 259.6}, {\"speaker\": 1, \"line\": \" interpreted. Well, I tried looking at that and I couldn't nothing really stood out to me as to why I would do that and you know been Joe would treat this just as the pointer arithmetic it wouldn't even do the array index. So technically I mean realize doing a little bit better on that. So those are kind of a couple things. I know she's just looking at this bad characters loop again. We just need to find the other screenshot I have. I want the other things here. So this was I would have just like a little dummy program that I wrote and we had mentioned on ninja kind of the Annoying size conversions in line 12 on this rotates ring. You see like the cast unsigned and cash\", \"start\": 266.0}, {\"speaker\": 2, \"line\": \" character pointer\", \"start\": 313.7}, {\"speaker\": 1, \"line\": \" and owned. It still seemed a little bit excessive in this case to not as bad or at least definitely a lot more readable than binary ninjas was but still a little bit excessive compared to what probably could be done. Unfortunately. I didn't have G drill went to do comparisons back and forth on this one. I just kind of took what I remembered from Benja. And just apply that on to looking at the realize one here. It did create this variable size and that that's in the in the assembly itself course it it pulls that out as kind of its own little own little thinks. That's fair. Gives a you know, kind of that nice readable name so I gained kind of a fair move there. Once\", \"start\": 316.8}, {\"speaker\": 2, \"line\": \" I will say in general like the samples you've been pulling up. I do find the syntax to be a little bit more readable than binges and I think that might be because it's closer to C code. Yeah, and that's like I kind of prefer that style. You know what I mean? I like it.\", \"start\": 366.2}, {\"speaker\": 1, \"line\": \" I high-level my speaking of compilable. Here's my grape can copy and paste code. I could not find any way to extract this piece. That's why these are all screenshots with Bender. I copied the code. I will put it into my editor. So I had like it's highlighting. Yes, as far as I can tell and I'm sure somebody's going to correct me on this and I hope somebody does but I could not find a way to copy just a line of code out or the whole thing. I could have like save as Oh,\", \"start\": 382.1}, {\"speaker\": 2, \"line\": \" that's like a glaring missing\", \"start\": 418.5}, {\"speaker\": 1, \"line\": \" functionality. It does like nothing. I tried. So on Binger a few if you happen to click on what the key words, it would kind of highlight the line and then sub highlight the key word that he clicked on. If you tried to copy it would just copy the keyword with realized so sorry back on binges. But if you happen to just click the line make sure there are no other highlights are did copy like it would copy the whole line you can drag through. And copy everything with this you could copy keywords out, but you couldn't like drag over to copy multiple keywords. You couldn't just select the whole line. It would copy nothing in that case. So that's actually kind of an issue here. But I do feel like that's more of an oversight or like a bug not an intended feature. Although on that note. I will say and this is something I felt when I first he's realized like it's a really polished UI but I dislike it. I just I wouldn't want to use it. I don't like its UI. But it is fairly polished. I'm not sure exactly what it is. It just it's not it's not my workflow and he can change it kind of how I would normally work. I guess just how would she know some of the tabs? There are some customizations. It's just, you know, definitely kind of a personal preference thing to say. I don't really like it but that is a very personal thing. Like I'm not going to say nobody should use this because I don't like it. I mean obviously they've created something somebody's using yet somebody's paying for it. It's Y'all just personally I didn't really like the UI but it is very polished like it's a nice Cy. but\", \"start\": 419.7}, {\"speaker\": 2, \"line\": \" we got something I'll ask for when you were investigating. Do they have an API for scripting and stuff like that?\", \"start\": 525.7}, {\"speaker\": 1, \"line\": \" You know, I did not look into it. Like I was purely just looking at what? The decompiler was doing okay because last\", \"start\": 534.3}, {\"speaker\": 2, \"line\": \" time I remember with realized they didn't have scripting support and that is something that is a something that a lot of people like for reversing. Right? They'll write their own plugins to\", \"start\": 543.7}, {\"speaker\": 1, \"line\": \" looks like they do or they have some plugins. At least now, I just pulled it up on Google\", \"start\": 554.2}, {\"speaker\": 2, \"line\": \" here that could be interesting to look at to because that is like that is one thing binary Ninja really has going for it is it's a pi. So I'd want to see how that kind of Compares with realize that\", \"start\": 559.6}, {\"speaker\": 1, \"line\": \" That's\", \"start\": 570.3}, {\"speaker\": 2, \"line\": \" fair on thing to check out one thing. I do notice just with your screen shot though. This is like a minor gripe, you know, it's nothing big at if you know the data types, you can probably follow along but what I found interesting is with the parameters it'll actually denote in 64 for like the return types in the parameters. But then for the local variables in the function, they don't use those explicit types. They use like intend long and those can be a little bit. Using because when you start talking about long in Windows and Linux, they mean different things in Windows along is 32 bits and Linux along a 64 bits. So I would prefer if they had some of those more explicit types. So instead of unsigned long size. They had you and 64 size or or keep it consistent underscore underscore in 64 sighs.\", \"start\": 570.7}, {\"speaker\": 1, \"line\": \" Yeah, and that's something that I think Binger gets pretty well is listen. Yeah, just as a general not necessarily. Back to Gap or just generally when they do the code. It's they're very explicit with everything which kind of ends up be making a little bit verbose a little bit unreadable at times but they are very explicit with what's happening.\", \"start\": 621.2}, {\"speaker\": 2, \"line\": \" It can be at times but on other times, you know, if you're looking for bugs you having access to that size right there and not having to think about it. It can be a\", \"start\": 643.8}, {\"speaker\": 1, \"line\": \" oh, yeah, I think it's definitely it's a good thing for Benja to do that. Like I do it's also like their annotations and stuff. off With those annotations, what ends up happening is you have as you're saying like a lot of information just available at your fingertips. That's why I keep going to mentioning it the like signed and unsigned comparisons. It's such a small thing that I didn't notice. I was missing until I saw them actually have that. Yeah,\", \"start\": 653.0}, {\"speaker\": 2, \"line\": \" here's a bit of a fun question. Not one that's really related to decompiling or anything like that. Would you like it if that was actually like a language feature if you had to specify if it was an unsigned or son to compare because I know like currently it's basically to do this by the types unsigned has a higher precedence than sign. So if you have an unsigned argument in the in the like comparison, it's going to be an unsigned compare, but you don't really know that when you're looking at Code you've got to know what happens at the compiler level to know if it's a signed or unsigned to compare or you have to like look through the types. And sometimes you have type definitions and you have to go up like, you know, a bunch of lines to see what the original type was the would you like if like in development you had to specify what kind of comparison you wanted second\", \"start\": 683.9}, {\"speaker\": 1, \"line\": \" question and no I would have liked it but as an optional feature\", \"start\": 731.8}, {\"speaker\": 2, \"line\": \" It could be a cool idea anything like if it would show you, you know, you hover over the conditional Titan showing it.\", \"start\": 740.1}, {\"speaker\": 1, \"line\": \" Like I think it's definitely useful and doing the re writing the code because the way that would mostly be used as just a force one way or the other. Yeah. I know it feels like that.\", \"start\": 746.2}, {\"speaker\": 2, \"line\": \" Adding a little web much for the programmers.\", \"start\": 758.8}, {\"speaker\": 1, \"line\": \" I can understand though if you want to do that as a as an optional\", \"start\": 761.5}, {\"speaker\": 2, \"line\": \" feature Yeah, and that actually brings up something not related to languages. But with the decompiler that I think would be cool here is what you were saying earlier with like the explicitness sometimes being able or leading to like unreadable code what I think would be a really good solution here was if you had an option to show explicit types if you just right click and go, okay, so explicit types or you could use the unsigned enter longer whatever if you wanted the more readable version and you could just switch When you want it to see\", \"start\": 767.2}, {\"speaker\": 1, \"line\": \" you know what? I mean? That's fair. I don't think using like N64 really wouldn't make it unreadable though. I don't think that That's really an unreadable thing. I think with binge I when it does all the size changes, that's where it becomes unreadable. That's where it becomes a little bit provokes\", \"start\": 799.9}, {\"speaker\": 2, \"line\": \" Yeah, but I don't think just\", \"start\": 818.5}, {\"speaker\": 1, \"line\": \" using in 64 is an unreadable thing.\", \"start\": 820.0}, {\"speaker\": 2, \"line\": \" No, but I just think in general with like not just realize with binary ninjas. Well, there are some things that some people really like and other people don't like and they say it causes unreadable code and a lot of that just comes down to just allow people to specify if they Or\", \"start\": 824.2}, {\"speaker\": 1, \"line\": \" not, you know, yeah, I think that could be a\", \"start\": 838.6}, {\"speaker\": 2, \"line\": \" fair feature. Yeah, I think that would be a really Really cool addition in both but yeah, so like jumping back to that not being able to copy code. Hopefully like you said that's just an oversight. Even if there is a way to do it that it should be a lot more intuitive than that. Like the fact that you had to struggle to do. It is a problem in itself. Even if it is possible through some weird obscure UI thing. So that's something that needs to be worked on one thing one other thing. I did want to ask with realized since you were talking about Like the UI and stuff does it allow theming support?\", \"start\": 840.2}, {\"speaker\": 1, \"line\": \" Yeah. So this is a theme in particular. I'm not sure if you can do customized themes but they do have some built-in ones. So I immediately switch to this dark solarize theme\", \"start\": 878.1}, {\"speaker\": 2, \"line\": \" because I know the default is that right? You know? Yeah light theme and I yeah, and I think that should\", \"start\": 887.9}, {\"speaker\": 1, \"line\": \" not not even just like a hughes's white like like it's not just the right thing it is. So yeah, that was one of the first things I look for and I changed it. So this is kind of I like the theme that I had settled on they only had like three. I feel like they probably do allow custom theming I just and look into that. That's it. I do have a couple other comparisons to bring off one of the things I noticed a lot and this is looking at Ready Player one kind of won four challenges on zero X zero, five three nine dotnet. Is you'll notice in this example and the decompiler it does create thread has a return value and then assign the data 0 x 6 5 5 4 bit basically taking the return value and then tossing it into the actual memory location where it ends up being stored. Which I mean is fair, but what binary ninja does there's it'll compress that into just a single line, which is much more readable granted binary ninja has like, you know that Das header which we already talked about soffits constants are a little bit\", \"start\": 893.1}, {\"speaker\": 2, \"line\": \" forced. Yeah, which they're working on\", \"start\": 960.0}, {\"speaker\": 1, \"line\": \" but in terms of how it does that code I far prefer this just saying it's putting it into the memory address and one line rather than not compressing that and in general dereferences what and get I guess compressed like that with realize so just generally result in longer code.\", \"start\": 963.7}, {\"speaker\": 2, \"line\": \" Now one thing I do notice between the two of them is you notice how in the realize on the create thread it does the address of operator on those data variables War but in binary ninja it doesn't do that. I think that might be something I would like and binary ninja because it's more explicit and it tells you it's taking the address it's not just directly and that's referencing that. So I think that that might be something that binary ninja is a bit lacking in that screenshot. Yeah. It's\", \"start\": 983.6}, {\"speaker\": 1, \"line\": \" a\", \"start\": 1013.1}, {\"speaker\": 2, \"line\": \" That might just be on the preference, but I would like the aggressive operator Reserve.\", \"start\": 1013.4}, {\"speaker\": 1, \"line\": \" I apologize for the audio right now for whoever's listening to us. Not sure what the source of that was but But I apologize for that seems so soft. I'm not sure if you were able to hear that Specter. Yeah. Yeah, I heard it.\", \"start\": 1020.6}, {\"speaker\": 2, \"line\": \" Okay. Yeah not if you're sure came from I haven't heard that before coming. Neither have I I've I've actually heard that before but it's usually one like I dropped packets from the server not like and I just checked and I didn't drop any so,\", \"start\": 1038.3}, {\"speaker\": 1, \"line\": \" okay. So I believe it might have been an interaction with my phone and maybe a quarter or something because I moved my phone and I went away anyway coming back one of the last things I do want to point. Out with realized is also when it's doing so in terms of the loops. I found it would also sometimes do it would just miss the conditional completely for the loop. If you notice in this one. It's got the breakdown at the bottom. Rather than so. It's basically that the break can continue their well, it checks a v like this was a for loop again, actually. Yeah, so it just kind of pushes all that to the bomb and I saw a few place where I would do like while one and then some condition towards the end. so Oh, no, I mean it just it ruins kind of flow of reading it rather than having the condition, of course in the loop\", \"start\": 1050.7}, {\"speaker\": 2, \"line\": \" itself. I mean, yeah, it's also technically wrong because it that basically tells you that all that code runs before the condition is checked for is in a for Loop most likely the condition is being checked before the code is being rent. Right like\", \"start\": 1109.1}, {\"speaker\": 1, \"line\": \" I'd have to go and check exactly what\", \"start\": 1124.6}, {\"speaker\": 2, \"line\": \" I'm just I just don't like the stores for this like compiled binary, but I'm guessing but I mean like\", \"start\": 1127.8}, {\"speaker\": 1, \"line\": \" it. Well, it might have thought to optimize. I'll sing a company optimize the something like a Like optimize down to being like a do while or something and then it just toss a while to top has the conditionals at the bottom that caused the\", \"start\": 1133.7}, {\"speaker\": 2, \"line\": \" break. It could be\", \"start\": 1148.1}, {\"speaker\": 1, \"line\": \" but it's still clear that it's it's not combining things into that\", \"start\": 1150.8}, {\"speaker\": 2, \"line\": \" conditional. Yeah, one of the things from that screen shot. I noticed a lot of the content constants are being displayed in the hex, but one of them is Like some of them are in HEX and some of them are in decimal and it doesn't seem to like match up like it's not it doesn't seem to be consistent like that four to nine. I'm guessing that text ffff ffff. But it's not displaying in this context. I don't know. That's a\", \"start\": 1155.1}, {\"speaker\": 1, \"line\": \" very minor. Yeah, that's weird. I didn't notice\", \"start\": 1181.2}, {\"speaker\": 2, \"line\": \" that. Yeah, it's kind of weird. But anyway, like, you know, that's obviously it's the same number. It's just the way it's displayed. That's just a minor thing for me. It's I'm like trying some minor thing but it's a weird thing. Yeah it is. It's a weird Quirk. Yeah, you don't have any other screen shots though, right?\", \"start\": 1183.7}, {\"speaker\": 1, \"line\": \" Oh my no. That was my last screenshot. Okay. I mean overall\", \"start\": 1202.1}, {\"speaker\": 2, \"line\": \" the code does look clean and some of the dereferences and stuff like that look better, you know, there are a lot more readable. I think there is just some of those weird quirks that I guess just haven't been worked out yet that will probably get fixed at some point. But\", \"start\": 1208.2}, {\"speaker\": 1, \"line\": \" yeah, I kind of conclude the same way I did with Ninja it's It's promising. I mean obviously like try and compare with Ida, you know, it's not going to do as well. But I just had plenty of time. This is free. Which is gained another round effect there. It's not that bad definitely some issues, but definitely also workable.\", \"start\": 1222.6}, {\"speaker\": 2, \"line\": \" Yeah, I mean because it's free the biggest comparison there isn't even really binge. It's more Deidre. Yeah compares to kedra the one stipulation though is I think all these examples you've shown have been on x86.\", \"start\": 1248.4}, {\"speaker\": 1, \"line\": \" Yes. I did. It would be a colossal\", \"start\": 1261.7}, {\"speaker\": 2, \"line\": \" piling on other architectures like are mmm, for example. Yeah. The reason I say that is Benja at least on air and it was missing is some lifting it was for x86 as well. But only really on the extended stuff on are M. It was missing some Instructions lifting so it'd be interesting to see if realize has those instructions lifted just because if they are lifted and the decompiler output is probably going to be better on that front too. But we you know, that's something that I want to look at on Scream so I can't speak too much on that right now, but we'll look at that on on the stream.\", \"start\": 1263.7}, {\"speaker\": 1, \"line\": \" Yeah, and it's something that I had meant to kind of take some time to look at but never got around to over the weekend.\", \"start\": 1296.1}, {\"speaker\": 2, \"line\": \" Yeah fair enough, so I don't really have too much more to add there. I don't I don't so if you do but now I'll just cap that off with saying, you know, I'm going to be doing the stream looking at it so well and outside on the Twitter and in the Discord, so anybody who's interested can look at that and we'll see how it shapes up basically. And we'll try to do that tomorrow, but I don't want to give any promises on that. So that being said I think we'll move on to Firefox Firefox is actually updated their Bounty. Now this is this does say in 2019 and into the future so they have some like statistics and stuff in there. But I think the biggest change that they're doing here is they're no longer running a first reporter winds policy. There are now going to be splitting Downey's between all duplicates Within. 72 hours hours. Yeah, which honestly I don't know if I like that but they do do parade of the mounts for higher quality reports as well. They're also going to be raising payouts for higher impact bugs. Sandbox. Escape is going to be 8 to 10 K proxy bypass is going to be three to five k and they've also started a Blog called the the attack and defense blog which might be of interest to like viewers of our stuff like that now I did Kind of want to point out like that first reporter wins versus the you know, Bobby's being split part. How do you feel about that? Because like I said earlier, I don't think I like that\", \"start\": 1302.8}, {\"speaker\": 1, \"line\": \" I met at the same time. Do you like being told you're things that duplicate because somebody magic finish their report a couple hours before you I know you don't like that either so but here's the problem if you're the first to report\", \"start\": 1391.8}, {\"speaker\": 2, \"line\": \" it and then let's say some information somehow gets leaked or something and then somebody else reports it and then you lose money out of your report. That sucks. So it's like I think I would if I had to choose\", \"start\": 1405.3}, {\"speaker\": 1, \"line\": \" one. I feel like 72 hours is a pretty short period though. It is like it's really just because they're trying to encourage people to look at their nicely and find issues that come up right in the nightly builds. I mean and that's you know constantly changing and so people if they're afraid duplicate psycho. He found the same bug everybody else fuzzing nicely did there for you? Just don't get it there for you. Just don't fuzz. Oh, I feel like 72 hours is a sufficiently short amount of time to prevent a lot of guy duplicates from something leaking or whatever. It's 72 hours. Isn't that long in the grand scheme of things?\", \"start\": 1417.5}, {\"speaker\": 2, \"line\": \" I mean, it's a hard issue to solve because like you were saying earlier with the first reporter wins policy anyone who submits it after kind of gets screwed and it's not a great situation for them at the same time. It's unreasonable to expect the vendor to pay. Like, you know a standard payout for all duplicate reports, especially if it's some like trash bug that gets found by everyone fussing it, you know what I mean? But this one is kind of sucks too. Because if it is a trash bag that a lot of people fuzz for then okay before you would have had one person that got a payout and the rest of the people didn't get anything right in this case you could end up with a lot of people reporting it and everyone getting like next to nothing now though.\", \"start\": 1461.9}, {\"speaker\": 1, \"line\": \" They do mention your high quality report to do still gaining you that like the Plus on it. I see you still like if you spend the time to do a good rapport, where's everybody else some myths just like crash. You're still going to be getting more than everybody else. That's that part. If it isn't being split off that also touches on cat 3009 out of chat to mentions, you know, there's some time you spend to you sir. I'll just read you know after you On the back there's some time what you spent analyze that you could spend two days just create a high quality report on the other hand. Someone else can just submit a crash. So Mozilla does trying task that a little bit with this and being one you can update here report after you submit so you submit the trash and then you keep updating it because the payouts being based on kind of the follow-up discussion not on the initial report. So they're trying to tackle that issue. They are splitting. Yes, but if you have a higher quality report, you do still end up with a higher payout. Maybe not as much. But I mean at least they're trying to do something and I think it's fair for them to be trying to do something about this issue because duplicates is one in my life and want the biggest grapes. I hear from people about doing bug bounties is you know, something's just marked as a dual. Can you don't get paid at all for any of the time you spend so I think this is at least positive step is a perfect know. I don't know. What a perfect solution here would be either.\", \"start\": 1507.8}, {\"speaker\": 2, \"line\": \" Well, that one thing that I think would be cool. If they did was, you know, keep the pro rating based on higher quality reports, but also do like a bonus for whoever reports it first. You know what I mean? That way they're still getting like I think being the first to report the issue should still be of value. You know what I mean? Yeah, but they talking about people who\", \"start\": 1604.6}, {\"speaker\": 1, \"line\": \" who end up reporting, you know, they say mere hours after another reporter. We're talking about a few hours. I mean that first find that first Blood really really feels fairly unimportant\", \"start\": 1626.9}, {\"speaker\": 2, \"line\": \" and I just think of First Blood would be like a good step and could make it. Yeah, perfect. But I think it could be better.\", \"start\": 1639.3}, {\"speaker\": 1, \"line\": \" Oh, no, I have to disagree just because we're talking about such a short timeframe. It really comes down to you know, who you know who writes faster than and that's what it is. Now. It's just whoever writes faster kind of gets it. And in this case, at least it's taking into account like yeah, some people maybe spend a little bit more time on the report before they send it in they shouldn't be punished for that. Yeah, I mean, that's\", \"start\": 1647.9}, {\"speaker\": 2, \"line\": \" fine. We can we can agree to disagree a little bit on that. I think it's just how much value you place on that first blood and really what it is what it comes down to overall though. I agree that it is a I think overall excluding just that change like taking all into account like raising the payouts and doing the prorated based on the high quality reports. I think those are really good steps. It's just the one with the you know, splitting the boundary between them is a little bit shaky.\", \"start\": 1677.4}, {\"speaker\": 1, \"line\": \" No, I mean I still think it's better than not splitting yet. Like I Earn, at least you're getting paid for the time you spend on\", \"start\": 1705.9}, {\"speaker\": 2, \"line\": \" it.\", \"start\": 1714.7}, {\"speaker\": 1, \"line\": \" Yeah, I mean, these aren't huge bounties either but I mean people still like I mean bug bounties are still like if you look the time you spend versus what you get paid.\", \"start\": 1716.2}, {\"speaker\": 2, \"line\": \" You're usually not even\", \"start\": 1726.6}, {\"speaker\": 1, \"line\": \" making minimum wage with a lot of\", \"start\": 1727.7}, {\"speaker\": 2, \"line\": \" fum. What would you think about putting a cap on it? So like after X amount of people submit it it can't be submitted anymore. Let's say let's say five like an arbitrary number out of a\", \"start\": 1729.5}, {\"speaker\": 1, \"line\": \" hat. I'd want to know more statistics about what they actually see. I mean they did\", \"start\": 1742.1}, {\"speaker\": 2, \"line\": \" what they do. Look at some more like reasonable number than we could with because they have all the data but I'm just saying like I think it cap might help their just because was it reasonable time reporting at binary like a bounty and then you end up getting like one dollar from your report. It's nobody's going to care about $1, you know, like that's what I mean a cat might help there, but no, that's a really Nifty.\", \"start\": 1748.3}, {\"speaker\": 1, \"line\": \" I think you have you know, 10,000 people reporting an\", \"start\": 1771.3}, {\"speaker\": 2, \"line\": \" issue. You know how much time do they really spend talking about low hanging fruit issues. It can be found by fuzzers. I mean you could end up with tens or hundreds of people reporting the same issue. Yeah, but\", \"start\": 1774.4}, {\"speaker\": 1, \"line\": \" thousands is it mean\", \"start\": 1786.4}, {\"speaker\": 2, \"line\": \" thousands is probably exaggerated when I this is why people doing it. I don't want to\", \"start\": 1789.4}, {\"speaker\": 1, \"line\": \" see the statistics not so much know how many duplicates there are but how often the duplicates\", \"start\": 1793.9}, {\"speaker\": 2, \"line\": \" happen. Yeah, those are good to see like\", \"start\": 1799.4}, {\"speaker\": 1, \"line\": \" just how often is the case just one person reports it is this an edge case or is this a common case like is how much of a problem is this that needs to be solved? That's why I want to see more statistics rather than just knowing like the full numbers. Just how often is this an issue?\", \"start\": 1803.2}, {\"speaker\": 2, \"line\": \" Yeah, that being said I think we can move on. I don't really have much to add on there. We'll move on to one of the bigger stories of the week, which was the source code for csgo and TF2 being leaked from 2017 and 2018. So there was a lot of misinformation going around around this this news. There was a lot of people I saw people saying I never going to launch csgo again. I'm just going to get exploited as soon as I get into a game and that's just that's just ridiculous. Alice just because the source code is out doesn't mean going to be exploited the moment you join a Lobby that's just absurd. I think a lot of information was spread from people who aren't familiar with with development or security or anything like that and they\", \"start\": 1820.0}, {\"speaker\": 1, \"line\": \" just have so there's actually one thing in this chain that I want to find a readout, you know, title their major security risk. This is not a chain message that sound, you know, there's been a huge Source leaked. And effectively they mention here all games running Source are now super vulnerable against the various purposes. And if you play TF2 csgo or any other source game, you're taking a major security risk. We advise all our players to take a break from these games until further updates come out. And for those reasons we're also shutting down our servers later tonight. So it's not like valve knows all of it has valve, right? Yeah. Okay. It's not like valve knows all of the exploits that are in their past code that they haven't yet patched and then you know, these future updates are going magically patch all of them. So just on that little bit where it's saying until further updates come out. It's like, you know any issues that are found here that are going to take a While to be found to use notice and then actually patch so it's not like oh, yeah next update you're going to be good to go that said is you're consenting just because the sources out there. This is several several years old. Well as that one's 30 2018. Yeah. So sir couple years old, then there are few years, whatever. It's not ancient. But it's not these are games that are also update fairly frequently. So there's going to be a lot of turnover.\", \"start\": 1862.8}, {\"speaker\": 2, \"line\": \" I do actually have a Counterpoint to that. I think the networking stack from people I've heard of the or like people I know that deal with Source engine and stuff at least the networking stack. I don't think they really touch that much. It doesn't really change much. Yeah. It\", \"start\": 1960.7}, {\"speaker\": 1, \"line\": \" was just going to get into that you there's going to be a lot of turnover in some areas, but not everywhere. There are going to be some areas that Don't get much out of it. As you said the network stack being one of those. I'm sure there are some core engine areas of probably don't get touched super often either. So there's definitely going to be people that are finding bugs because of this but they also may be bugs that have stuck around for at least a couple of years already, which she does. Go ahead.\", \"start\": 1974.0}, {\"speaker\": 2, \"line\": \" Well, I'm just going to say it'll be easier to find bugs maybe because you have the source code, you know. Like source code auditing is easier than binary auditing typically.\", \"start\": 2005.2}, {\"speaker\": 1, \"line\": \" Yeah. It's just there's going to be that signal to noise ratio. There's going to be a lot of noise because the game like this isn't the current Source.\", \"start\": 2015.8}, {\"speaker\": 2, \"line\": \" Yeah, and the other problem is exploiting sorts engine is actually a lot more difficult than people think and the reason for that is There's one thing that's very hard to do for any rce for anything and that's going to be info leaked to abuse an ASL art environment. You are going to need to bypass address space layout randomization and you're going to need an info lead to do that. And that's very difficult to accomplish within rce. You can find buffer overflows and Source engine fairly easily from what I know. It's not hard to find, you know bugs that lead to memory corruption. The harder part is being able to actually We leverage them because they're in components that are just they're hard to info league in and that's that's basically all there is to it. So even if you find a bug that doesn't necessarily mean it's going to be easy to exploit. It could take you months to be able to try to exploit that bug so, you know just adding on to that point that just because the source code is out doesn't mean there's suddenly going to be exploits flying around for csgo and TF2.\", \"start\": 2023.4}, {\"speaker\": 1, \"line\": \" Yeah. I mean again though like no doubt it helps, but you're not suddenly every Care either any of the bugs that are found have been in there for at least a couple years. So you've been a terrorist for the last couple years all so it's just a little bit easier. Now, I will say that does he'll probably in the sense of just being able to understand the overall architecture of things to getting that big picture from what it used to look like that in the background knowledge. Yeah, like it's definitely useful for people looking for\", \"start\": 2088.0}, {\"speaker\": 2, \"line\": \" issues. Now here's one thing that a lot of people that you know reacted to this didn't even really consider. This isn't the first time that source code is slate. Source engine is leak before I ate soooo pretty old now. I think it's maybe 2007-2008. So it is pretty dated but the source code is leaked before and There hasn't really been an RC e exploit campaign that I'm aware of that is targeted csgo or TF2 there have been exploits that have been used but they're mostly like Dawson's games, you know, crashing games on people. They're not, you know deploying malware or something like\", \"start\": 2120.3}, {\"speaker\": 1, \"line\": \" that. Yeah. I mean, I actually when we talked about the csgo days, I'm like episode like two or three or something like really early. Yeah\", \"start\": 2166.7}, {\"speaker\": 2, \"line\": \" upon it. I don't even think it really affect the csgo. Yeah, it's 1.6.\", \"start\": 2176.3}, {\"speaker\": 1, \"line\": \" I think there was like a minor wait impacted CS csgo. But I mean that's kind of the other thing. I think a lot of the people looking at source engine or looking at it for the Bounty valve has a decent bounty on it and there\", \"start\": 2179.8}, {\"speaker\": 2, \"line\": \" were probably one of the better ones on hacker one.\", \"start\": 2193.9}, {\"speaker\": 1, \"line\": \" Yeah. So I mean, I think a lot of people are looking at for that enough for malicious purposes. I mean, obviously there are malicious things it could be done. But I mean if if you're targeting somebody it's probably not through csgo like I don't know if feels like csgo is a really the normal route. That would be targeted.\", \"start\": 2196.2}, {\"speaker\": 2, \"line\": \" That's not an ideal Vector. Like it's just too much work\", \"start\": 2220.6}, {\"speaker\": 1, \"line\": \" and the denial of service though is you mentioned that like that's something I could definitely see, you know, script kiddies trying to find issues for to you know, daus other players or whatever, but see part of the problem though is a\", \"start\": 2224.5}, {\"speaker\": 2, \"line\": \" lot of the bugs found in csgo and stuff like that are in the map parsing Engine with witches for like custom maps. So people playing on official servers. Is the bugs not going to affect them anyway, so it's one of those things where it also the attack surface is kind of limited and what you're going to look for on official servers. So that's another thing to consider their there's something else I wanted to say. Oh, yeah, so overall I think Four players for csgo players TF2 players this this basically doesn't really mean much to them. I mean cool, you know that it's leaked if you want to check that out. Maybe you can I haven't really gone looking for the league because I'm not really that interested. Maybe it's something you want to know if you're a player and take into consideration. I'm not going to tell people whether to play or not to play, you know, I don't think I should be doing that. But what I will say is I think overall the only person is really hurts is valve. It's a bit embarrassing for them. Now. This this wasn't like somebody hacked into the you know valve and then stole the source code. This was a leak from a Dev who had access to the repo. It was a disgruntled employee that was like laid off or something like that and put it out there though, but you know, it could be I think there were some chat logs and stuff that relate to so it's mostly just a bit of an embarrassment for valve. I don't think in her players and stuff like that or the public at large this even really needs to be considered. I think it was blown bar out of proportion compared to what is actually\", \"start\": 2236.2}, {\"speaker\": 1, \"line\": \" yeah. I definitely agree. I think was blown out of proportion. I mean, it's it's useful but here not like at imminent risk because of it.\", \"start\": 2329.3}, {\"speaker\": 2, \"line\": \" Yeah, exactly. So we'll move into our into our last news topic before doing some exploits and that's fixing SQL injection vulnerabilities and malicious code execution in XG firewall, so, There was a report received on April 22nd about a suspicious field being exposed in the management interface for the XG firewall and they did some this is so\", \"start\": 2337.6}, {\"speaker\": 1, \"line\": \" Folks by the way Friend by listening.\", \"start\": 2363.0}, {\"speaker\": 2, \"line\": \" Yeah, and you know after they did some investigation and they found it was an attack on fire wall units. They basically use day zero day pre authentication SQL injection to hit exposed XG devices. So using that they exfiltrated, you know data from like fire. Hours of data they got local user names. They got hash passwords. They fixed it and sent out an alert to everyone who was affected which I do have like a question on one of their alerts, but I'll get to that in a minute. We I don't think I couldn't really see any information like technical information on exactly why yes, Carol. I\", \"start\": 2365.4}, {\"speaker\": 1, \"line\": \" was that's why this has definitely left as just a news topics. We don't have the technical details about what the SQL injection actually was. Is just it was preauth SQL injection allowed them to get information and it was actively being abused in some campaign that they had noticed. So what they did they had to alerts that went out either the alert went out with that just the hotfix was applied. Their device wasn't compromised or they actually tried to clean up the calm part of the compromise itself and they sent out the alert mention cough fix applied and partially cleaned up.\", \"start\": 2403.6}, {\"speaker\": 2, \"line\": \" And here's my thing. I think it is a little bit sneaky how they did that. I you know, we I think II alert is cut off because it says additional and then there's nothing else but you know, so take it with a grain of salt. Maybe it's just because they left the full alert out of the screenshot but it seems like they're downplaying the alert for people who are actually affected because in the one that were they weren't affected they have not affected in big capital letters and then the second one is just like oh it was partially cleaned. And like unless you look at this page, you might not immediately assume that you were compromised from that alert its\", \"start\": 2443.0}, {\"speaker\": 1, \"line\": \" feel like that's an alert that you're probably going to click on if you see that.\", \"start\": 2478.2}, {\"speaker\": 2, \"line\": \" I don't know. I just feel like it should have been made more obvious than the first sentence that it was the, you know, you were actually affected, you know, or you were compromised now, so I believe they did\", \"start\": 2484.5}, {\"speaker\": 1, \"line\": \" email out customers also.\", \"start\": 2495.7}, {\"speaker\": 2, \"line\": \" Okay, so there is some stipulations there like you're saying maybe they emailed it out and it was more obvious there or that alert has another sentence there that says that makes it more clear because like I said, you can only see that additional work for the second. Sometimes but it's just something I noticed I thought was a little bit weird. It's like I think they should have made it a little bit more obvious in the second alert, but I know I need to\", \"start\": 2499.0}, {\"speaker\": 1, \"line\": \" praise him. Yeah, I don't wanna say they're trying to downplay their I feel like they probably just have a standard way of writing them that did this and then they just tried\", \"start\": 2521.3}, {\"speaker\": 2, \"line\": \" to in about five minutes.\", \"start\": 2532.6}, {\"speaker\": 1, \"line\": \" Apparently. I've got something playing here. Game, sorry for that for anybody listening. That's one for later topics.\", \"start\": 2536.8}, {\"speaker\": 2, \"line\": \" So I will say like I'm willing to give them the benefit of the doubt say it's just because I'm missing information the more I think about it because I will say this report overall. I like it. I like how they provide like a full timeline at the bottom of the page. They quickly investigated fixed and disclosed it. It's one thing you've kind of said over the past in our episode zi is like you care more about how they respond to an attack rather than the fact that the attack happened and I think how they responded here was overall positive, you know, they have the full timeline. They let people know they sent out the email sent out the alerts. They started the investigation as soon as they notice. This is the suspicious field. So it seems overall I think that the right steps were taken. So I think overall I want to give them like props for how they handled it and I am guessing you'd probably agree with\", \"start\": 2545.6}, {\"speaker\": 1, \"line\": \" me. Yeah like they say Tout they notified their community of their initial medications within 24 hours. Just shy like it was so the attack begins at four o'clock on the 22nd and at 3:47 on the 23rd is when they have notified the community about the\", \"start\": 2598.0}, {\"speaker\": 2, \"line\": \" issue. Which is fair like you want to do the investigation and get all the details before you you know, send out those initial emails. I can understand them wanting to take you know that 24 hour period take the time and investigated before sending out an email\", \"start\": 2617.9}, {\"speaker\": 1, \"line\": \" why I'm just saying like that's a good response\", \"start\": 2633.5}, {\"speaker\": 2, \"line\": \" time. Regardless. Yeah. Yeah. Absolutely though overall, you know, we like to like, you know highlight when a company responds. Well, especially because we've highlighted some companies that haven't responded. Well, so I think overall I think this Is this was a good response?\", \"start\": 2635.4}, {\"speaker\": 1, \"line\": \" Yeah, I'd agree with that. And like I said, I don't think there's anything conspiratorial going on with their\", \"start\": 2652.0}, {\"speaker\": 2, \"line\": \" alert. Yeah, it was just something that I noticed initially and I think it's just because like I said, I want to kind of step back on that and say it's just because it's just kind of cut off there and there's probably it's probably more obvious than I would think. You know with that said though, we'll move into some exploits. So our first one is in MSI true color utility, which is used for tweaking color settings and stuff for games from what I could tell\", \"start\": 2657.7}, {\"speaker\": 1, \"line\": \" ya this is, you know, definitely an absolutely unique vulnerabilities. Do that. We've never talked about before seen. Yeah, if you can't hear the sarcasm in my voice here that says and unquoted service path vulnerability yet again, I feel like we've talked about a few of\", \"start\": 2685.6}, {\"speaker\": 2, \"line\": \" these. Yep. Oh, they take an input parameter called IP application name which points to a full path for an executable and they pass it to create process as user a which is a win API function and they don't quote the path. The reason that's an issue is that when API function will try to search in a deterministic order for the the executable.\", \"start\": 2703.2}, {\"speaker\": 1, \"line\": \" Yeah. Well, I kind of think about it like this when you go on a shell and you want execute, you know a particular file, let's say that's in you know C program files like well if you LS isn't good example because that's rarely going to be somewhere that has a space but like every word so the first word it's going to treat as the command in Windows you obviously have a lot of paths that The path has a space. So program files being the classic example. So if they just did that first word is just going a little can try and execute this C program and then there's a space. So the first word is the first argument. It's the Program you want to know? Well, that's not a program. So it'll pain the next thing next word on to I see if that makes proper path and so on and so on until you get it. So, of course if you just have like C program dot exe, it will execute that it'll execute that with high privileges. But the gist of it is, you know, it's just that it's because it's not handling that space But Windows is trying to do the right thing for you. This is does remind me. I think the last time I'm we talked about this issue. I want to say I was in something with apple like maybe iTunes Theory called that one.\", \"start\": 2725.5}, {\"speaker\": 2, \"line\": \" Wasn't a cutie that had a nun quoted after the\", \"start\": 2806.9}, {\"speaker\": 1, \"line\": \" Acuity had the\", \"start\": 2810.5}, {\"speaker\": 2, \"line\": \" herbs at the dll injection\", \"start\": 2813.1}, {\"speaker\": 1, \"line\": \" was yeah that was where you could like at the argument. But what I range call was that I believe it was it was in something with apple might have been iTunes might been something else but there's all this conspiracy around. Oh, you know this you know these The researchers behind this malware because it was being actively used, you know, did all this look and we're using this iTunes O'Day, whereas they very well might have just created that program dot exe for whatever program might end up executing it. Like it didn't need it. Like this is something I you can go and just create program dot exe. Put it in your C drive. And you know, wait a day and see see if it gets executed by something. Like it's a really easy to find this and it doesn't need to be targeted specifically at like the MSI true color\", \"start\": 2814.5}, {\"speaker\": 2, \"line\": \" service. And that's part of what makes it a bit more impactful is not only is it a privilege escalation because you can get to anti Authority or system. It's also persistent right? Because the executable will be rent every time the service is loaded which is by default on restart. So, you know, if you restart the computer, it's going to load that potentially malicious file if you're being attacked with it on reboot, so it's not only an LTE, but it's also a persistent ope though that\", \"start\": 2867.3}, {\"speaker\": 1, \"line\": \" Tiny Fair Factor, it can also like obviously there are cases where this will just be x t as your user to, you know, unquoted path isn't something that only services do like other things do it to just one services do it. It becomes an issue because of\", \"start\": 2899.5}, {\"speaker\": 2, \"line\": \" this. So yeah, I think it's not too much to talk about there because it's literally just unquote a path bug so we'll move on to key base. So this was a last-minute addition. This was just posted today and it's a one-click rce on key base. So from what I can understand this guy basically came across a light really weird Quirk by the steak and managed to exploit it. I'll let you cover it City because yeah, it's a look at it too much because it was just posted today, but It seems to be a kind of interesting it was discovered by mistake there and he kind of\", \"start\": 2914.0}, {\"speaker\": 1, \"line\": \" weaponized. Yeah. Well the gist of this is really simple and some cases when using key base, you know sending messages with key base it all encode your message as Basics T4, or is Jason basic and then basic see for it. They give the example there of the Jason like it would use that for some links for it's like tie if you know male 2, you know, what to display and the actual URL to go to so you can like spoof the URL by changing what to display versus what it actually is. That said they couldn't find a way to actually send this base64 encoded string. They only mentioned using the key base GUI CLI and the mobile client. My assumption is you're just going to have to do kind of like the like the rod Network layer to inject that thing not using the standard interface. So I imagine it's probably possible to just send it that said it may not be they do just mention that when they tried to send a user. Seeing any of the normal means it didn't work. Nonetheless, I mean it has such Jason so they had to find something where they could include that jacent that would get converted. That would be handled by something that would decode the basics for some suggest including a message. It wouldn't be which they looked around for it found in lumens, which apparently I'm not familiar with it integrates into the key based client lets you send this xlm coin through key race like her send payment request in chat. And if you include the message body with that that will get parsed. So as a URL include like see what is it see Windows\", \"start\": 2950.9}, {\"speaker\": 2, \"line\": \" calculator Yeah, they just pop\", \"start\": 3066.0}, {\"speaker\": 1, \"line\": \" calc. Yeah, they're they're oh system 32 C Windows system32 calc as the URL you clicked on and display this something else. Simple easy to understand kind of fun. That's there. Like I said, I have a feeling you might be able to get that a little bit more usable than just with the lumens client. But that's purely speculation on my part. I haven't actually looked into it. It's a fun little bug\", \"start\": 3068.4}, {\"speaker\": 2, \"line\": \" nonetheless. I will say don't know I don't think I know anybody who actually uses cake key base for chat. Actually, I don't really know too many people use key base period anymore. I think it's kind of Fallen at a favor a little\", \"start\": 3095.1}, {\"speaker\": 1, \"line\": \" bunny. Technically. I think I have you on key base now. I don't have my own key base account anymore. I don't know what's happened to it.\", \"start\": 3109.7}, {\"speaker\": 2, \"line\": \" I probably don't know my password, but it's not a really popular chat client. So it's one of those funny shoes is probably not going to have a huge impact. Now this issue\", \"start\": 3118.3}, {\"speaker\": 1, \"line\": \" known ass pretty especially here. I'm not sure if this lumens is also Enabled by default. That's kind of another thing that might limit how easily this is used. Yeah.\", \"start\": 3128.6}, {\"speaker\": 2, \"line\": \" Now this the person who posted this blog post went to report it for the Bounty but found that it was already reported. It was only reported this link spoofing though. It wasn't known in the initial report that it could be used for rce. So they were able to add that additional detail on there. But unfortunately they weren't able to get the Bounty pay out because it was already. Yeah\", \"start\": 3143.9}, {\"speaker\": 1, \"line\": \" to be fair. Are they like the RC requires that you do have the file already on their system with that is the\", \"start\": 3163.3}, {\"speaker\": 2, \"line\": \" Hajj barrier? Yeah\", \"start\": 3169.7}, {\"speaker\": 1, \"line\": \" doable. Definitely, but actually maybe you could do a network share. Because you could do that arbitrary IPS. So maybe something like that. I don't know. If that will work or not that just kind of came to me. That was an option.\", \"start\": 3172.5}, {\"speaker\": 2, \"line\": \" Yeah, but you know another one of those more fun issues that probably will have a ton of impact. I\", \"start\": 3192.8}, {\"speaker\": 1, \"line\": \" will also mention actually that wouldn't work. Well unless somebody ignored the warning from Windows Windows should give you that you're about to run something from the internet. Are you sure you want to do that like that little warning thing whatever it says,\", \"start\": 3197.5}, {\"speaker\": 2, \"line\": \" so does it do that everywhere or is it only in specific there?\", \"start\": 3210.7}, {\"speaker\": 1, \"line\": \" I believe it should do that when you pull something off a network share. I believe you get that\", \"start\": 3214.4}, {\"speaker\": 2, \"line\": \" Mark though. It's attached to the I'll like on the file system. Yeah, okay.\", \"start\": 3219.4}, {\"speaker\": 1, \"line\": \" Yeah the way that works is it adds? Yeah. I mean I keep I always hear about some Mark I'd have to go look look it up. But yeah, it's attached to the\", \"start\": 3224.6}, {\"speaker\": 2, \"line\": \" file. That's interesting. I I didn't know what actually did that. I don't really use a network share. So that's that's cool little bit insightful out there.\", \"start\": 3235.4}, {\"speaker\": 1, \"line\": \" Um, so some dude four five six mentions cranky pass a compromise file in the command line as a parameter. Would what do you mean by that? What's your thought there? Breast follow compressed. I'm still not really sure what you mean. Are you thinking kind of like a data URI? Yeah, so you could link that but I don't think you you could get like xss like that. I don't think you'd get RC like that. For anybody listening he just mentions using basically 40 code. So I'm I'm assuming talking about like the daddy you were eyes with type Basics before. That said kind of continuing on with that Specter Kai mentioned. It was was reported as a duplicate. So no payout unfortunately, but they did reply within 15 minutes. Which is awesome. Yeah, a very quick response time, especially to get it notice that to duplicate. Let them know what to do kids like not just one of those standard responses, but actually having looked at it understood it and found the similar\", \"start\": 3245.4}, {\"speaker\": 2, \"line\": \" report, which I'm not incredibly surprised that just because key base is going to be used by people who are more security aware than early. So I think it's Probably expected that they're going to be better on the security front just because of what\", \"start\": 3328.8}, {\"speaker\": 1, \"line\": \" business Humanity still very quick response.\", \"start\": 3343.9}, {\"speaker\": 2, \"line\": \" Oh for sure. That's all I'm suggesting act. Yeah, it's just I think that is like, you know, not as surprising as it would be for like some other products, for example. Yeah, we'll move on to a more impactful bug which is in jQuery. So it's a jQuery XS through the HTML function and it's in the HTML pre-filter method for jQuery. And that's notable because jQuery is obviously used by like everything. There's a lot of web apps that use jQuery the details on this page. I found a bit weird, but they do link out to a challenge page that has more complete information on what the actual bug is. So that's probably the better page for getting information if you want to look at it essentially, it seems the bug comes down to a discrepancy between how the sanitation treats HTML compared to enter HTML. Ml is a bit of a weird thing going on there when it comes to self-closing tags. So so is hex image for example is a good example of that\", \"start\": 3346.6}, {\"speaker\": 1, \"line\": \" if I can jump in quickly. It's all wood jQuery jQuery will do some extra work that inner HTML just wouldn't do so this particular bug if we actually look at the challenge, which I brought up on stream, but essentially it would take your user input. And it would sanitize it for like using Dom purify putting it right into the HTML that want you so in theory using dompierre Feist anti was like this should be solid it and dumped here if I sanitized is sanitizing it to be included in HTML. So if you took this HTML string tossed it into like, you know, whatever whatever div dot inner HTML inner HTML wouldn't do anything more it would take Just toss it right in and kind of crazy HTML tree, obviously the user inputs being purified so it should be okay. Winds up happening with HTML Specter was saying about this pre-filter with the pre-filter would do. And I'll pull up the solution area. Pre-filter would do is it would take those tags that Specter was just mentioning the self-closing takes that's where you have so they actually do a style as their example, which usually isn't a self-closing tag usually want some content in your style tape, but basically where you just have the opening angle bracket style / closing angle brackets kind of that one tag. So the classic example there BR would be one image is often written like that and what it would do is it would replace All self-closing tags or with a full tank. So the open and close tag. I'm not sure why exactly they do that why they don't just leave them like that said I've never really looked at the pre-filter to know what else they're doing. But with that what ends up happening here is when they do that if you also have a dangling, well, it's not dangling normally. So what they do is they do a style tag. Take a self-closing style tag and then a close style tag and after their self closing the action of some content there. What ends up happening is that replacement ends up being dropped in there with the open and closed style and that's Islands up closing. Sorry about that that's style ends up closing the original style tag and the content that was after it ends up being placed kind of after that being completely uncontained.\", \"start\": 3409.2}, {\"speaker\": 2, \"line\": \" Yeah, basically breaks out. So what you're able to do\", \"start\": 3572.0}, {\"speaker\": 1, \"line\": \" with that is when it's completely uncontained off so you can start including actual HTML there because it's no longer contain like a would be anti for Style. So script alert and Away you go. Now the challenge itself also does little bit dumb clobbering that I don't think still important to cover here. We've talked about that in past episodes. It's an old attack. So I don't think we need to talk about that. The key thing here is in jQuery because that HTML pre-filter just replacing those self-closing tags. You are able to get excess when something was being passed to the HTML object that shouldn't have been exploitable that said I feel like the use case of this one realistically.\", \"start\": 3576.1}, {\"speaker\": 2, \"line\": \" Probably not really going to affect a lot of people using jQuery. It's only really first like\", \"start\": 3626.1}, {\"speaker\": 1, \"line\": \" it's because you're getting user input in an HTML call ready, which is already really sketchy and you just shouldn't do it. Yeah, you should, you know have some inert egg that he then set with text. Something like that. If you want a sad not trying to inject all the HTML itself, but there are definitely websites that don't follow that best practice. So like there's definitely place where this is going to use its interest because it is in the core jQuery\", \"start\": 3631.8}, {\"speaker\": 2, \"line\": \" Library. But yes, not in some like add-on or something like that. It's not a you know, it's in the court\", \"start\": 3661.7}, {\"speaker\": 1, \"line\": \" which it's definitely no State people couldn't\", \"start\": 3669.5}, {\"speaker\": 2, \"line\": \" make that being said, I mean, I think the impact is a bit limited because what we're saying earlier on top of the fact that you know, it's not a zero day anymore. It has been fixed. It was fixed in 3.5 though,\", \"start\": 3671.4}, {\"speaker\": 1, \"line\": \" but unlike who knows how long it's going to take to actually get people to update\", \"start\": 3686.1}, {\"speaker\": 2, \"line\": \" that a lot of people probably don't really update their another their script tags. Probably not but you know, but unlike this one which isn't a zero day or next topic is zero day actually for zero days in the IBM data risk manager. So this is a repo that talks about multiple bugs found in the IBM data risk manager, which is a utility that allows Enterprises to manage business security risks. The reason I mentioned that is it'll it the the repo just says security risks and when I read that I usually think like, you know info a sec security risks, but that's not what it actually is. It's business risks, but what's notable here is obviously like I said, there's zero days and it stated it's it's not patched because IBM rejected the vulnerability report. They said it was yeah, it's cope.\", \"start\": 3690.4}, {\"speaker\": 1, \"line\": \" I think it's worth talking about that after we talked about the vulnerabilities themself. Yep. I agree because yeah, I don't think I can handle this very well, but I think to start off talking about what the actual details, uh, obviously this is something Being run by Enterprises. It's not being sent out as a it's not being advertised. It's like a it's not a consumer level thing. So what they found were as we mentioned for issues. I'm sorry. I'm just trying to find my notes on\", \"start\": 3740.4}, {\"speaker\": 2, \"line\": \" this, you know, bro.\", \"start\": 3773.5}, {\"speaker\": 1, \"line\": \" There we go. So one of them here is this first one the authentication bypass. Really operates very weirdly to me.\", \"start\": 3775.8}, {\"speaker\": 2, \"line\": \" It's more of like a password reset Vector.\", \"start\": 3787.2}, {\"speaker\": 1, \"line\": \" Yeah, it doesn't make sense of why it's a password reset Vector though. So what happens is you've got this Albatross endpoints animal IDP selections selecting, whatever your identity provider is and it takes a username and a session ID in from the URL parameters and without doing anything else really just checks, you know is the username know or have Value the session ID known or not having value gives you an are and those cases. Tries to grab the user based on that username or gives you an error if I can't find it and just a so CH the session ID with the user and then redirects them to what I assumed was the proper sam'l IDP selection page because it basically ends of redirecting you to the outside of the albatross at first first parameter in like the directory structure redirects you outside of that to the same page sam'l IDP selection. Some might guess is a something like some old code or like a use actually do something here. Then they decide to make another page actually do that like not every service had to implement this or something and they just left this code in there. So I don't see why it's even setting the session ID with the user at this\", \"start\": 3790.3}, {\"speaker\": 2, \"line\": \" point. It is a really weird use K like yeah. It's probably old code.\", \"start\": 3868.0}, {\"speaker\": 1, \"line\": \" Yeah. Well, that's kind of my feelings. Anyway, then you've got after that you you can make a call to user slash login still under Albatross and that will take the username and several other possibilities like a password or a session ID. So if you specify your session and the right session ID, it decides that he must be doing some sort of password reset or initial creation because it looks up the user in the user map. If it doesn't find it basically does the same thing though. It generates a new. Well, it grabs a uuid for the user and generates a new password for them in the one case. Basically like you do log in with the session ID and you get a new password out and then you could use that password to actually log in\", \"start\": 3874.3}, {\"speaker\": 2, \"line\": \" it seems like it may be from like servicing like functionality that just wasn't stripped out in production or something. That's that's what it kind of seems like just because like I don't know how do you like that seems like it would be something you'd use for debugging.\", \"start\": 3924.7}, {\"speaker\": 1, \"line\": \" It doesn't feel like password reset though. Just because it's in log n now. I haven't looked at the full code here. only seen these Snippets it just it feels so weird like all the things that's doing\", \"start\": 3938.9}, {\"speaker\": 2, \"line\": \" here. Now one thing I point out with that attack to is it's obviously not going to be a stealthy it pack it will be destructive because it's going to wipe the previous admin password, but it still does allow you know, anybody attacking it to get that initial foothold to get that foot in the door with the\", \"start\": 3952.5}, {\"speaker\": 1, \"line\": \" Authentication. Yeah, and I mean you don't necessarily if you have more into Insider knowledge, you don't have to do the admin account.\", \"start\": 3969.4}, {\"speaker\": 2, \"line\": \" Yeah, you can do any account you can you can get access to because you just need the username. Yeah, it's just admin is a you know, very easy targets like the first one you choose when you're looking for stuff like this.\", \"start\": 3980.9}, {\"speaker\": 1, \"line\": \" Yeah. I'm just saying there are ways that you could maybe make this a little bit quieter. It would still like I don't know it just I don't get why this code is doing this at all. Like I mean if it's going to be a password reset great have a password reset page. Why is this in login?\", \"start\": 3992.0}, {\"speaker\": 2, \"line\": \" It's a weird functionality and our next issue is actually weird functionality to in my opinion because it's a command injection in a different API endpoint which allows users to perform nmap scans and my question here is why it's a business data risk utility. I don't well, I thought running as steps can and Maps fine point.\", \"start\": 4009.6}, {\"speaker\": 1, \"line\": \" I mean, that's that's just like your I mean part of your risk is noticing when you have new hose up or have when you have new. New Services running that shouldn't be running so somebody just does like a bind like binds on one of the ports for their shell. It's going to detect that by having an on May and Maps can that the nmap scan is pretty\", \"start\": 4029.1}, {\"speaker\": 2, \"line\": \" standard for\", \"start\": 4051.7}, {\"speaker\": 1, \"line\": \" a lot of these types of applications nessus being another common thing.\", \"start\": 4054.3}, {\"speaker\": 2, \"line\": \" Okay just seemed weird to me but you know, okay fair enough, but basically they take an IP address and they just pass it directly as a string that runs the Map command add in itself isn't a command injection because they're given the params argument to the exact function. But basically what this allows you to do is pass any parameters you want to end map which can include a script command and there's another endpoint that allows you to upload arbitrary files for patch files. So you put the two together and you can execute arbitrary scripts and this like that boom you have command injection,\", \"start\": 4059.5}, {\"speaker\": 1, \"line\": \" you know, this is authenticated you do need to be authentic. As an admin to do that, but as we just talked about how easily you can get admin doesn't really\", \"start\": 4095.5}, {\"speaker\": 2, \"line\": \" matter. Yeah, the the third one is another like kind of authentication bypass due to hard-coded credentials. There's an admin user called\", \"start\": 4104.2}, {\"speaker\": 1, \"line\": \" three default credentials not hard-coded. Oh, yeah, it can be changed but the default if you want to SSH into it is a three user with the password I\", \"start\": 4114.0}, {\"speaker\": 2, \"line\": \" DRM Another thing that seems to be just a servicing account that just wasn't rubbing removed in production.\", \"start\": 4125.5}, {\"speaker\": 1, \"line\": \" Well, I mean offering SSH access again. This is I mean people are going to probably SSH into it so offering it that said the web interface requires you to change your password on the first login, whereas this doesn't yeah, so that password scorned remain for a while. But I mean, you should kind of get and once your SSH on there you can do sudo. And do a sudo access with that A3 user so it's effectively\", \"start\": 4132.4}, {\"speaker\": 2, \"line\": \" root. The final issue is a bit less impactful. It's maze it's basically a path traversal and the ability to fetch log files. They have like a API endpoint for fetching log files and you know, they it contains a parameter for the like log file. You want to download they don't check or do any restrictions on that. So you can just do a directory traversal and exfil any file. You want\", \"start\": 4159.4}, {\"speaker\": 1, \"line\": \" to know the name you can download it. So The example they use is that zi password pretty classic but\", \"start\": 4188.0}, {\"speaker\": 2, \"line\": \" horse. Yeah, so I mean all of these were like pretty straightforward issues and like I mean, that one\", \"start\": 4193.5}, {\"speaker\": 1, \"line\": \" is if an indicated also, I believe\", \"start\": 4199.7}, {\"speaker\": 2, \"line\": \" yeah, that's good point as well. But like we said chain it with the first issue.\", \"start\": 4201.9}, {\"speaker\": 1, \"line\": \" Yeah, but I mean presumably the first issue will get fixed. So I mean like right now obviously this is still an issue. These are still owe days unless they've updated it since but\", \"start\": 4205.9}, {\"speaker\": 2, \"line\": \" you're saying presumably it It get fixed. But I mean I am did reject the report like maybe it looks like it might not be getting fixed. I think that's part of the part of the thing that we're going to\", \"start\": 4217.9}, {\"speaker\": 1, \"line\": \" probably yeah swell. So, you know, I guess let's talk about that IBM's handling of this. So this guy did not report through their hacker one. I believe he just tried to report directly to IBM about this issue of mentioning that you didn't agree with hacker one the disclosure policies therefore he didn't register for hacker one or tried to submit this through their Bounty program. Yeah fair enough. Wow, yeah, definitely fair, but when his powers don't don't agree with that still one report it, you know, make an attempt another way,\", \"start\": 4231.3}, {\"speaker\": 2, \"line\": \" but the right route I think you know, he could have just dropped it.\", \"start\": 4267.3}, {\"speaker\": 1, \"line\": \" Yeah, I mean he does I find it. So I guess we'll just say this IBM basically rejected this out. There are common we have assessed this report and closed as being out of scope for vulnerability disclosure program since this product is only for enhanced support paid for by our customer. So I actually so it seems like basically it's you know pain. So my first thought actually was that perhaps this was end of life already. As far as I can tell it's not looking at their website. Like there's nothing that indicates to me that they don't support this anymore and you have to pay for the enhanced support for it seems like it's just, you know for their customers that are paying more. They actually kind of get something in there that said the hacker one doesn't seem to actually rule this out as far as I know from their scope. So I'm going to pull that up here. So the otoscope include some of the Stander things but in terms of like actual Products being El scope. It's either just end of support staff. So that's where I do feel like maybe this is like out of out of life because it does mention that IBM software that is reach end of support thus only people paying for the enhanced support.\", \"start\": 4270.6}, {\"speaker\": 2, \"line\": \" Like do you get that? Okay, I can see what you are saying like base\", \"start\": 4351.0}, {\"speaker\": 1, \"line\": \" like with Windows when something goes off life. You can still pay for support and windows will keep maintaining like I think they're still maintaining Windows XP. But only for those people that are paying quite a bit for that support. Yeah, so I think that could be the case that said there's nothing on their website that indicates that you can still get them to purchase this like there's nothing that indicates. It's not supported or anything like that that I could find on the actual website and the only other thing is IBM Cloud support report vulnerabilities found on my bluemix.net to use the IBM Cloud support for that otherwise off the issues are just like actual Who's that? They don't care\", \"start\": 4355.1}, {\"speaker\": 2, \"line\": \" about? Now I have a question about the report itself. I know your views on you know, public disclosure are you know changing and stuff like that? And you're generally you try to add John it should be up to company. Do you think it was like fair that the researcher drop them even though they're zero days just because IBM didn't want them.\", \"start\": 4397.9}, {\"speaker\": 1, \"line\": \" So I've kind of drawn a distinction of times between what I personally do. And just kind of a general rule for others. Like I've kind of personally come down on non-disclosure, but the threat of full disclosure still needs to be there. Like if everybody works do non-disclosure. Just what a whore.\", \"start\": 4422.2}, {\"speaker\": 2, \"line\": \" Do you think in this case? It's Justified going to drop it II think it is.\", \"start\": 4445.2}, {\"speaker\": 1, \"line\": \" Just I mean, yeah, like I kind of agreed with you on one of the other things where report was rejected so they dropped information about some yeah if you reject the report. I do think it should be fair\", \"start\": 4449.4}, {\"speaker\": 2, \"line\": \" game for the size it anymore. Yeah,\", \"start\": 4463.0}, {\"speaker\": 1, \"line\": \" I mean I can understand what maybe finding another route to do this rather than just straight up full disclosure. But I feel like the full disclosure is most likely to get the proper response which is getting this fixed.\", \"start\": 4465.2}, {\"speaker\": 2, \"line\": \" Which may be another question do you think IBM will care and actually fix it?\", \"start\": 4482.4}, {\"speaker\": 1, \"line\": \" I would hope so but I don't know.\", \"start\": 4489.0}, {\"speaker\": 2, \"line\": \" I mean I hope so too. These are really low hanging fruit issues and they're not hard to fix but I just I feel like you know if they initially rejected the report. It kind of indicates that yeah, but security stance that know that they might not even bother ever fixing it. Now one of the\", \"start\": 4491.3}, {\"speaker\": 1, \"line\": \" developers though could see this and think like, oh, yeah, I could go fix that. It's out there. Whereas before it's you know,\", \"start\": 4506.6}, {\"speaker\": 2, \"line\": \" whoever just happened to see it. Yeah. Yeah, I see what you mean there. Yeah, it'll be interesting to see I don't know if we'll actually see if it's fixed, you know, because obviously like you said, it's an Enterprise product. That's not a consumer product though. It might put out like an advisory if they consider something but I\", \"start\": 4514.8}, {\"speaker\": 1, \"line\": \" probably know Felix know if they fix it that said I do also want to mention that the mnsure IBM offers no bounties. On their bug Bounty program just Kudos and then they have this comic from the yolk meal. Hello. Thanks hacker for making that thing. You're welcome. Here's an invoice invoice. Never mind that here doing it for the Kudos. Then I'll say Kudos can be used to pay for anything. I like the comic I like the oatmeal but I don't know. I mean this kind comes down with my view on bounties like you're choosing to spend all that time, you know if they're going to pay or\", \"start\": 4534.1}, {\"speaker\": 2, \"line\": \" not. I think hacker one has like a\", \"start\": 4571.6}, {\"speaker\": 1, \"line\": \" hacker one makes it clear. So well, I think it's absolutely still for a company like IBM to not be paying. Oh a bounty at this point like they should have a mature enough security process to be able to do a bounty. So I think that's kind of stupid at the same time the proper response from everybody else should just be don't give them free\", \"start\": 4576.1}, {\"speaker\": 2, \"line\": \" testing. Yeah, just do some research before you start looking at things and say oh they don't pay anything out. Okay, I'll find something else to do.\", \"start\": 4597.7}, {\"speaker\": 1, \"line\": \" Yeah, I think it would be different if they advertise something or made it seem like they might have a bounty and they actually just give you swag or something like that. I get I don't know. I mean when it comes to not offering a bounty if they make it clear, they're not offering a bounty and you I don't think you should really get to complain that they're not offering a bounty. Or that they didn't offer you a bounty. I should say. Yeah, I think you like we're both kind of complaining that they're not offering a bounty because they should be But for actually reporting something, you know that up\", \"start\": 4607.1}, {\"speaker\": 2, \"line\": \" front. Yeah, so we have yet another project zero posts related to chromium which you know is pretty cool because the project zero guys are really smart and they do some really cool write-ups and this one is about a one-line change that was made in Windows 10 1903 which could allow a Sandbox escape and code execution in the GPU process of chromium. So they gave some really nice. Background to chromium sandboxing on Windows and some of the stuff they do so, you know, they disabled groups. They remove Integrity levels and they advert stricted access tokens or security identifiers or what they call SIDS and that's mainly enforce a few steps. I think the big one like the last line of defense is the colonel restricts what tokens can be assigned to unprivileged users in a new process the sandbox also restricts the ability to get suitable access tokens and they do so much. Our stuff like child process mitigation and stuff like that. But the the colonel enforcing the restriction on access tokens is kind of the critical point of failure here if that's broken, you know, the other ones are easier to get around kind of thing. The the one is like the bottom brick basically of the wall. So I mean you can you can guess what subsystem the vulnerability was introduced in it was in the kernel enforcement of the access tokens. So the one-line change Change they made if we scroll down a\", \"start\": 4640.4}, {\"speaker\": 1, \"line\": \" little so before you actually go with what the issue was. I do want to mention what's really important here. Is that basically when you create a new process so during the sandbox process and they talked a little bit about how their sandboxing works, but you have the access token A specter said they apply some restricted ssids to it. They end up restricting the actual process token itself. So what's to prevent your process from just being a new process that has a more permissive token and that's where this idea of child and sibling tokens come in when you create a token or sir when you create a process you should have its parent token should be like the process creating it then gets assigned as like being a child on the other hand though you could have a sibling token which has the same parent ID as The process creating it and no ID or an auth token is also included in there. So what ends up happening with this bug now is basically made it impossible to create the parent-child token. So would inherit all of those restrictions anymore out of the parent it would be treated as a sibling and that comes simply because rather than in the old case the code was new token the parent token ID field. Old would get the value of the oil token token ID. Basically, you know, the parents token gets tossed in as being the parent open ID exactly. What should be in this new with this one line change it took the old tokens parent token ID and set it as the parent Hogan ID of the new token. So that made it a sibling. It wasn't a child of the process that was creating it. It was a sibling to it which then meant that Basically, you could do everything that sibling could it was a sibling to any other desktop application rather than being a child in the sandbox?\", \"start\": 4728.1}, {\"speaker\": 2, \"line\": \" But you can set it to like a service to get like all the permissions at that service does to I think\", \"start\": 4855.5}, {\"speaker\": 1, \"line\": \" well service to be\", \"start\": 4860.7}, {\"speaker\": 2, \"line\": \" use but I had thought I had it written down but I\", \"start\": 4861.6}, {\"speaker\": 1, \"line\": \" don't yeah, so like the basic will be able to pass that check. So then you could set your token after you created this process to something else. Andy I don't recall offhand which one they did I really only figured that the interesting part here was this one line change. The rest of the article does go into actually doing the full sandbox escape and finding the right token expound to expose the taupe and all of that that they could use it does for if the bugs was just this one this one line change that essentially made it impossible to create the child token. It would always be a\", \"start\": 4864.8}, {\"speaker\": 2, \"line\": \" sibling. I do kind of wonder why they would make a change like that. Like obviously we can't see the full code and see like all the like I'm guessing this must have been a refactor and it was just maybe a bit of a confusion of what this line.\", \"start\": 4903.5}, {\"speaker\": 1, \"line\": \" Somebody probably just ran into a bug was like, oh, you know, I need this to be this value and just kind of edited they're not really think about the consequences. Yeah, I mean, it's such a small change. They probably just thought that was our maybe that was even leading to another\", \"start\": 4917.9}, {\"speaker\": 2, \"line\": \" bug. Yeah, it is a little bit weird, but overall I think what's the most value and this post isn't even the bug or the Escaping The Sandbox part. I think it's more the background information on the chromium sandbox because that's one thing that I found like in the past. I've tried to get a little bit of information about how to sandboxing works and browsers and stuff like that and there's just not a lot of good information out there about that and I think this post gives some good background of how it works at least on the Windows side. So it's going to be different for like Android and stuff like that. But on the window side you get that Insight of how it kind of interacts with Windows to do the sandbox restrictions. And I\", \"start\": 4931.7}, {\"speaker\": 1, \"line\": \" think that some people are kind of interested are interested in that there's actually Kind of fun the windows blog. There's some older posts. This is back from 2007, but it's very similar to what Chrome does it talks about something sandbox that was done for Microsoft Office in particular with like docx processing and stuff. But there's a series of posts here. I think it's yeah 3PO 3PO post bail practical Windows sandboxing goes into even more detail than what project zero does here, but the Chrome Is reasonably or fairly similar to this like it's almost based off of what was being done here. I don't know if there is some other Common Core. That they both derived from also but this is a good good write-up that will be in the documentation or they'll be in the description. Sorry. Yeah,\", \"start\": 4973.5}, {\"speaker\": 2, \"line\": \" I just thought it was a good initial introduction into it. But yeah, so I think we can move on to 0 click mail.\", \"start\": 5033.9}, {\"speaker\": 1, \"line\": \" Yep, and what's your click mail? This made a decent little bit of noise or waves this week. It's 0 click against the default mail application on iOS the bug has been around since at least iOS 6 it's 0 click when the mail application is opened in the background on iOS 13 on iOS 12. You do need to click the mail in order to trigger the attack and they don't include information about the earlier versions and how you might exploit it. Oh, the other thing was on 12 you do get 0 click if you control the mail server, which is a pretty high barrier when you're trying to attack. Somebody probably don't control their mail server. and okay wasn't showing up on my stream of so there are two ways. She's one of them was the one that was actually exploit. That's a remote Heap overflow. But the other one that they also discovered that was being attacked not necessarily. As use though both kind of come out of this MFM you are sorry MF mutable data type in the my library. So application type, you know, MF mutable data. I'm not familiar with it. But you can get an out of bounds right where? Factually, what would end up happening is as it would read data from the email. So if you send your email as as being that are having this mind type as a would read the data out. It would write to a file or write it to an M mapped. Location and so every time it would get a new chunk. It would call F truncate syscall that basically can be used spite the name being drunk Amy think make smaller. It would resize it in general. So with f trunk a it would get called and ideally you'd be adding extra memory onto the end of whatever the buffer was. So whatever size of the chunk add that memory with f truncate and then read and then write to it. What ended up happening though is if F trunk a failed it didn't care just kept going so you can kind of imagine what would happen. It doesn't actually extend the buffer. You keep writing out of bounds right plain and simple they don't talk about the actual exploitation. Mechanism. All they gave is kind of that little detail leading to the out of bounds, right? In a very similar way the MF mutable data the append data or a pain bites. function would also be used for Sorry, I'm getting two of the issues confused. So that's actually it was in the append data function where this one that I just talked about is where it kind of came from after okay would fail it would do the outer bounds, right? The remote Heap overflow was also in this MF mutable area of code in particular MFD a message content consumer. So again, this is downloading the email if you give it that mime type, it creates an NS mutable data, which calls a pen data on it. The NS mutable data has a threshold this time of 200,000 or hex teeth two hundred thousand bytes. So when you get larger than that writes it off to a file on and Maps into memory. What was interesting here rather than being the truncate that fails when it tried to get a large sure thing if you Sent an email that was large enough to exceed the ramp size or the remaining ramp. So basically large enough that it couldn't expand its size any further it would fail and when it would fail it would check for that failure. Actually the some DMF would fail it would check that and it would just do this block invoke which only would do an 8 byte allocation. so any data that you upended after that eight bytes are after larger than 8 bytes would be overwritten in the Heap so that's the exploit that was actually used or at least they were actually seeing me being exploited most often again they don't talk about the fool exploit just what the issues were that they saw\", \"start\": 5044.0}, {\"speaker\": 2, \"line\": \" yes oh that was the most interesting part in What made it blow up right was it the it was found that it was being attacked in the wild yeah it wasn't just like issues they found while they were auditing or something like that and now it's too bad we don't have an t on because I noticed they have a list of some like really interesting targets that were suspected to be hit by this so you got like Fortune 500 organization like an individual's from those VIP from Germany a journalist in Europe. It seems like there are some it's being used. So targeted way that would be used by governments. That's what I see from a list like that. Usually when you're seeing it targeting journalists and Executives from Fortune 500\", \"start\": 5323.4}, {\"speaker\": 1, \"line\": \" companies. Yeah, there's intelligence purposes behind it. It's\", \"start\": 5364.6}, {\"speaker\": 2, \"line\": \" exactly it seems like something that would be used by a nation state. So that's why it would have it would have been cool if we could get anti on for this but unfortunately, he's a he's a busy guy nowadays. So we we can't have them on every episode. We can't be graced with his presence all the time, but it would be cool to kind of see like or maybe even speculate on like Why does Target specifically or being hit I\", \"start\": 5367.8}, {\"speaker\": 1, \"line\": \" mean, they have intelligence value beyond that I it's just pure speculation as to what the intelligence value would be. We can't say. There's no way you can know just from\", \"start\": 5391.1}, {\"speaker\": 2, \"line\": \" that. Yeah. No, absolutely. I just think anti might be able to give some cool insight there. So I don't know if maybe we can get like talk to him a bit and they bring those up on the next podcast or something, but we'll see about that\", \"start\": 5402.5}, {\"speaker\": 1, \"line\": \" one thing. I did find interesting. Was more that it seemed like the and they actually do much we believe these attacks were these and cooperation with at least one nation state? after but they bought the XY from a third-party researcher in a proof-of-concept grade and use it as is so they know that the exploit seems still have like the you know a strings left in it and things like\", \"start\": 5414.3}, {\"speaker\": 2, \"line\": \" that well that's not very that's pretty sloppy for a\", \"start\": 5440.3}, {\"speaker\": 1, \"line\": \" nation yeah well the fact that this basically had so many crashes that they were able to analyze and find definitely indicates that's a bit\", \"start\": 5443.6}, {\"speaker\": 2, \"line\": \" sloppy looks like a failed you know campaign from a nation state in a way\", \"start\": 5452.0}, {\"speaker\": 1, \"line\": \" I move they probably got good information from\", \"start\": 5461.6}, {\"speaker\": 2, \"line\": \" it oh they probably got information but I mean like a lot of nation states they probably don't even want that that Target list being no never you know what I mean\", \"start\": 5464.1}, {\"speaker\": 1, \"line\": \" I mean it's fun to get out when they like I mean every exploits going to be detected at some well maybe not every eventually most of the timing they generally do get burned so that information\", \"start\": 5474.3}, {\"speaker\": 2, \"line\": \" going to be no one yeah that being said though I think we can move away from exploits and move into our research section of the podcast our first one is actually from the same person who did the project zero blog post earlier which is James for Shaw so it's no surprise that this one is talking about more windows token stuff\", \"start\": 5484.8}, {\"speaker\": 1, \"line\": \" so this time it's definitely more research yeah than anything else but go ahead\", \"start\": 5505.2}, {\"speaker\": 2, \"line\": \" yeah so he just talks about how like toe tokens are used for authentication on Those so when you log in normally like from you know from a login screen and authenticated user gets one token, but there's a bit of a discrepancy there when it comes to servicing accounts apparently servicing accounts can have multiple tokens. And\", \"start\": 5511.9}, {\"speaker\": 1, \"line\": \" what's the part if that's because multiple processes multiple services are going to be using that service account. So like the network service account. But I guess you were probably just about to go into that. What ends up happening is that basically the first token that gets used ends up being stored as kind of like that user accounts token. What's it which ends up being reflected as a locally unique identifier during some Network calls to network shares?\", \"start\": 5532.7}, {\"speaker\": 2, \"line\": \" Yeah, so the example they use for that is like SMB the user can provide an authentication ID to use for that token. So I think the the the service they use to get that initial token that you were talking about was our PCS s.\", \"start\": 5569.9}, {\"speaker\": 1, \"line\": \" Yeah. Well, so that will be like your first network service is effectively what they mention is. You have your network service first process on there's going to be our PCS\", \"start\": 5583.8}, {\"speaker\": 2, \"line\": \" s. Well I think they try to invoke it because what what you see if you scroll down a little bit is they initially try? To get the running service for our PCS s and I think it's initially denied. But because it ends up getting access they end up getting that token. So then the next call to it through like, you know SMB or whatever ends up getting granted. I think that's how it works is a little bit confused and how its worded because it's a blog post. It's not like a full research thing. But\", \"start\": 5592.9}, {\"speaker\": 1, \"line\": \" yeah, it's just an idea here. So my understanding was that our CSS is going to be started. Early enough that it becomes the first token and then winds up\", \"start\": 5624.4}, {\"speaker\": 2, \"line\": \" happening is force it to be the first open. That was my understanding. So maybe I'm a little bit that would\", \"start\": 5633.4}, {\"speaker\": 1, \"line\": \" definitely limit the usefulness of this. If you also have to force it to be the first one it's possible. Maybe I am misunderstanding something\", \"start\": 5638.8}, {\"speaker\": 2, \"line\": \" missing. That is the first Powershell command they run so that's why I thought that that was the purpose of it. Maybe it was to show that you couldn't get access to it right away. I'm not entirely sure on that. yeah go ahead\", \"start\": 5646.8}, {\"speaker\": 1, \"line\": \" well I'm just kind of rereading that see it looks like basically try and accept can't get it but then they try and do a network service think over the loopback ventilation so basically creating that local pipe that's also kind of being treated as a share so they get the excellent being sent over that's what happens next\", \"start\": 5661.5}, {\"speaker\": 2, \"line\": \" so the dish I just misunderstand a little bit and they were so demonstrating that it couldn't be done initially yeah\", \"start\": 5681.8}, {\"speaker\": 1, \"line\": \" so the gist of it seems to be centrally if you can run something as the network Cause it to do that callback, you'll get the token for the rcss service since that was kind of like the first one that was used. Now the usefulness of that and once you have that totem you can person and then you can get X any tokens it knows about and it probably knows about some things for getting into system-level token. So that's kind of where the usefulness comes. That's\", \"start\": 5686.6}, {\"speaker\": 2, \"line\": \" Ed\", \"start\": 5717.1}, {\"speaker\": 1, \"line\": \" kind of a Highbury now technically this works with any account. It's just the first process or the first token basically gets saved Network Services interesting and particularly because of the rpcs. token so you can get but you've got other attacks you could do here too I mean they mention odds are you'd go for something like that rotten potato and gives a link out to that in the blog post it's not it's just like an interesting thing that isn't necessarily to useful I can imagine like maybe some sort of CTF scenario where you make this useful but generally speaking it's more like there's something here you're getting information you shouldn't have but there are already other attacks that you could do but it's worth knowing kind of this exists in case you run to that odd scenario that's like huh maybe I could use that\", \"start\": 5718.9}, {\"speaker\": 2, \"line\": \" Here, I think even mentions that Microsoft doesn't wouldn't really consider this Crossing of a security boundary\", \"start\": 5778.9}, {\"speaker\": 1, \"line\": \" know when I mean your network\", \"start\": 5786.6}, {\"speaker\": 2, \"line\": \" service already by passing away. Yeah.\", \"start\": 5788.5}, {\"speaker\": 1, \"line\": \" Yeah, it's just it's just nme. He even mentions not necessarily weird Behavior, you know works for every login session session, but I thought it was worth kind of bringing up as something that it might be worth being\", \"start\": 5792.6}, {\"speaker\": 2, \"line\": \" aware of it. Yeah, it's some new information and you know James for Shaw has always got some cool stuff. I mean, there's people that have been finding many bugs because of that post. He made a few years ago. Yeah. We got\", \"start\": 5804.2}, {\"speaker\": 1, \"line\": \" offered a bunch of space on his A Link to the Past talk.\", \"start\": 5816.0}, {\"speaker\": 2, \"line\": \" Yeah, so we're going to SC SC v r severity. Okay, that's how you say it. They're white paper name is a bit weird severity. So it basically talks about AMD secure encrypted virtualization technology, which is where the STD comes from. And that's a hardware back memory encryption which tries to prevent a malicious hose from being able to you know, steal data from your server. Yes. So control the control flow of it or\", \"start\": 5820.4}, {\"speaker\": 1, \"line\": \" whatever to add in there SME is the secure memory encryption SCV. Is in particular has you're saying they're both the militias are compromised hypervisor trying to get information. So SMA is secure memory encryption that encrypts memory before it's being written to wrap. What SCV does is every VM should be getting its own SME key, so it should have its own encryption. And then also I cves or encrypted state will split kind of the VM State into two parts. So the VM State usually is unencrypted and contain sky like controller or the unencrypted control air contains information like flags that the VM my knee. It's information VM does need but also can contain like registered some information like that. It's the state effectively so though on Krypton they split it into two parts one just being the unencrypted stuff that the VM actually need to that stuff like that. I was mentioning and then that's a very that contains all the other information. A nation that gets encrypted stuff like that. Yeah that gets encrypted in a way that the hypervisor can't see it. or shouldn't be able to see it obviously though some operations do require the hypervisor to know things about the gas and the state and all of that so they introduced is the example one that they use yeah so there's the guest hypervisor communication block effectively it's a shared page at the guests in hypervisor can use and be like hey I need the hypervisor can be like hey I need this information and they guess we'll share it over that So anyway, so SCV is just like that encrypted State part. Talking about the actual attack here you'll notice in the tile. No security without integrity. Basically, so with until you've got a message or with like sgx, you've got a message authentication code that's stored with this encrypted memory so you can temper with it, but it does eat up extra memory because every block of memory you have also needs an auth code attached to it. So you're constantly eating up a little bit of extra memory because of encryption AMD you chose to go away with that and doesn't have a message authentication code. Therefore there's no Integrity guarantee. So even though the hypervisor can't read the data they can modify the data without being with him. Yeah, and so I'm actually going to call out one of our challenges off of zero X zero, five three nine dotnet And the reason why when I call that out is I wrote a challenge called crypto cookies. Yeah and crypto cookies. Its old name was actually a hmac question mark x x left can't talk today but others by the way, well, I'm going to talk about the type of issue that's there. Yes, but the gist of this one. is this of the crypto cookies attack is it's a crypto tact that relies on not having any authentication checks so you can start messing with what's there exactly what these guys kind of do so if you want to play around with this type of crypto attack this is at least an option for you to take a look at if you care to only seven solves so not a lot of people have but it's it's in my opinion of pretty basic crypto issue the SCV one here is a little bit more involved but the core idea is the same in this case and in the challenge case it's using ECB in the actual case here with SCV it's using X or and cryptex or so it has the key xor's the data encrypted xor is the data again man into actually little bit more involved than that yet to but but the gist of this is without the attend ocation existing on the crypto Oh, yeah, if you can know where your dad is going, like let's just say you can get a bunch of A's into memory. You can take that block of A's and you could go place it anywhere you want and memory and you know, that that contains a bunch of A's encrypted that's not very useful but you could say encrypt a string that become some x64 instructions for example, and then you can go in place that somewhere memory and code because this is talking about a compromise hypervisor so they can modify all the memory. They want that is important. They the hypervisor can change everything it just they don't have access to read anything to know what's actually there.\", \"start\": 5845.2}, {\"speaker\": 2, \"line\": \" Like one way they do that because I found a kind of interesting is we mentioned cpuid earlier. They actually use that instruction to as like an Oracle and they basically write like a bunch of instructions or they actually sorry They smash a jump instruction that actually isn't a function that uses cpuid so that it breaks the loop so you can use that cpuid instruction to exfil data a like any you like dick. The data that you want I thought that was pretty cool. I just wanted to ship that\", \"start\": 6142.0}, {\"speaker\": 1, \"line\": \" out. Yeah, and I mean so they also use like a side channel to track like guests execution to know where it is while executing using basically by setting the code pages to non-executable. Then obviously with the it when the VM tries to execute that page hypervisors want to know? Because I did some that would usually be hint. So they do talk about a few side channels for getting some information out that can be useful. But the gist of it is once if you're able to get some control over memory being encrypted you can do that and then move it around in memory effectively.\", \"start\": 6172.6}, {\"speaker\": 2, \"line\": \" Yeah. Now there is another issue that kind of contributes to them being able to chain them together as CD does use a yes with what's it? old\", \"start\": 6213.4}, {\"speaker\": 1, \"line\": \" well XCX we soar with that that's X or encrypt X or\", \"start\": 6225.8}, {\"speaker\": 2, \"line\": \" yeah so like you were saying earlier with the but the xor and cryptex or there are tweet constants constants now the other issue here is the Tweet constants themselves and SED he's case have a really low entropy because it's supposed to be a hundred and twenty eight bits all being random but only 32 bits are random because the constant is repeated in a four byte pattern so normally calculating The Tweak values one really feasible because of how much entropy is in that 128-bit space But because there's only actually a 32-bit space and reality calculating those tweak values it's a lot more feasible and that's why they were able to do kind of that known play text plain text type of attack there so I think that's another like important issue there's two issues that chain together to bring you you know the defeat ultimately of SED I overall it's a cool paper I like seeing stuff that's hitting hypervisors especially when the entire focus is around you know trying to secure against attackers that are in the threat model that this paper is kind of talking about AMD so talking about fixing AMD did fix that issue where the constants had a low entropy so all 128 bits are random now they didn't fix the missing Integrity protection yet I think that's probably something that's going to take more time time\", \"start\": 6230.5}, {\"speaker\": 1, \"line\": \" it's good that's a lot harder to flock speak like saying yeah design flaw\", \"start\": 6314.5}, {\"speaker\": 2, \"line\": \" it's not a simple bug yeah it's something that's going to need an overhaul in the architecture so that'll take a while but at least a constant issue is fixed so even though the memory Integrity issue is still there it's harder to hit where that you know space has been properly randomized and not just a repeated pattern - overall I thought it was cool paper it does get a little bit and so when you get to the crypto stuff you know you'll need to see those what's that computer science course has all those symbols and stuff in it you mentioned it before discrete mathematics discrete mathematics if you don't have a background in discrete mathematics it might look a little weird and you might get a little lost in that section but overall no no I mean this once\", \"start\": 6319.2}, {\"speaker\": 1, \"line\": \" the only real thing you need to know is that circle with Crossroad is X or When I guess maybe you know M Prime the prime thing there but that's you can kind of figure that out\", \"start\": 6361.4}, {\"speaker\": 2, \"line\": \" too. Oh no issues are fairly straightforward. It's just the way they calculate the constants as a little bit complicated, but you don't need to fully appreciate that to be able to understand what they're like what the overall big picture is in the paper.\", \"start\": 6377.5}, {\"speaker\": 1, \"line\": \" Yeah, and I think the crypto issue itself like like I mention I have that challenge there because When I've done some instructional stuff kind of introducing devs to crypto issues that that's always my go-to for wonderful because it's one of those things like you get to play around you get to see it's really encrypted. It's not just some week. I mean it is weak crypto, but it's really encrypted and you can still kind of do things with it when you understand how crypto works and what's missing. so I guess it's it's an issue a lot of people\", \"start\": 6391.6}, {\"speaker\": 2, \"line\": \" make yeah so I think we can move on to our last research topic of the day which is Mark us which is a drop in use after free prevention and low-level languages now this paper is a little bit old like most of the papers we try to cover are generally newer like within the last week or so this one is a little bit older which paper which this came out of a\", \"start\": 6423.5}, {\"speaker\": 1, \"line\": \" conference so yeah well so the conference hasn't happened yet the last paper is from the same conference as were the two research papers we covered last stream are all from the same security And privacy 2020. That's the IEEE security and privacy 2020 confidence of the conference isn't until May that's why I was kind of okay with the dropping are spreading these out rather than covering all of them at once and they want been accepted in February the\", \"start\": 6448.0}, {\"speaker\": 2, \"line\": \" latest. Though this one talks about everyone's favorite memory corruption use after free and try and prevent them in languages like C. And to do this their goal was to write their own memory allocator called Marcus which can mitigate use after fries with low overhead costs. That was their goal in the paper. And the way they do this. They just perform like a traversal of live memory\", \"start\": 6473.1}, {\"speaker\": 1, \"line\": \" regions. It's a garbage collector. I know they say they're not a garbage collector. It's a garbage collector. That's what they're doing. It's effectively marking well not quite markets wave like they do have some optimization specific tool but they do a live traversal finding any pointers that are making sure all of the pointers that should be free are\", \"start\": 6497.2}, {\"speaker\": 2, \"line\": \" free yeah I think the whole idea is like it's less bloated than your typical garbage collector and like you said they try to do those optimization so some of the stuff they do there to try reduce overhead as they only check objects which are allocated by the programmer so like stuff allocated by the C runtime for example is going to be checked which could be potentially a whole but you know that's kind of the performance trade-off there which that can significantly improve performance but basically what they do is when a pointer is freed they pass it to a quarantine list and then they check it before they allow memory to pass from the quarantine list to the actual free list it's kind of like an additional bucket for pointers to go into before they end up going to the actual free list\", \"start\": 6519.1}, {\"speaker\": 1, \"line\": \" yeah so one thing they do all still is they buffer it so they don't go and actually check until so kind of doing the world stopping check actually I'm not sure if this one was World stopping I think it's just live so never mind that but they don't don't do that check until there's enough memory that's going to be free to kind of make it worthwhile yeah\", \"start\": 6566.1}, {\"speaker\": 2, \"line\": \" so like you said this is very similar to a garbage collector now there are a few issues I do have with this paper for one thing like you were saying the memory is check is happening live that sounds like it's very reasonable if you if you're talking about something like this in a kernel which this is not going in Colonel I'll make that clear right now I can almost guarantee it but if it were let's say hypothetically it was in a colonel or a browser or something like that which is multi-threaded that could almost certainly be raced because it's it's in software and if you tried to make it so you could recently if you did locking and everything around it probably incur such a ridiculous performance overhead that it would negate the entire purpose of this and the other thing is I think their performance benchmarks are a little bit weird they use spec CPU 2006 with a they had a Metroid overhead of like average 2.4% but I don't think that's a good\", \"start\": 6591.0}, {\"speaker\": 1, \"line\": \" measurement this is those so first of all there's also like this is a CPU intensive Benchmark that's what spec CPU is it CPU intensive Benchmark 1 2006 has been retired there is 2017 version that said I don't care all that much about that this is per like they tested this with programs like JCC are you that concerned about use after free and your compiler like yeah it's an attack surface you could do some stuff by attacking the compiler really\", \"start\": 6647.1}, {\"speaker\": 2, \"line\": \" the problem is like you said it's for stressing CPU and this kind of solution sounds like it would not scale well when you get too many allocations because it sounds like it's an O an operation when you're traversing a list like that so if you have let's say I'll go at\", \"start\": 6683.1}, {\"speaker\": 1, \"line\": \" least a lad I mean you're\", \"start\": 6698.1}, {\"speaker\": 2, \"line\": \" doing when yeah like the problem is if you're looking at something like a personal you're going to be having a ton of allocations every second and the more allocations you have the slower this this alligator is going to be and that's where I see the problem is a lot of the stuff they're testing here I doubt many of these are doing a ton of allocations if you start looking at this in real world application or real-world applications that are doing allocations a lot I think you'll end up seeing that the overhead is far and above what they report\", \"start\": 6699.5}, {\"speaker\": 1, \"line\": \" here yeah no I completely we agree I feel like this is just the wrong benchmarks at be doing this with I mean one these things only around for like to alter runs were within 2 to 8 minutes action just under 8 minutes So even that just the runtime like I mean, what would this do on like a longer running piece of software like a network service? How would this do it on like even nginx or Apache or as you know some runtime like that? I mean anything you've mentioned the Curtis but yeah, I like it. This just feels like you know stressing the CPU is not the same as stressing I guess the allocator it's not the same as getting a real idea for those frames, especially over such a short period of\", \"start\": 6729.8}, {\"speaker\": 2, \"line\": \" time. It just feels like the data set. They chose was very convenient. It doesn't seem like it's very it was chosen to try to it wasn't even handed. I guess the best way of putting it. I\", \"start\": 6775.9}, {\"speaker\": 1, \"line\": \" don't know. I mean I would put it also just well I kind of want to say just not really knowing what the best Benchmark so using some sort of standardized Benchmark option. But at the same time they should\", \"start\": 6790.2}, {\"speaker\": 2, \"line\": \" know you would probably yeah. Well, you probably know what the right Benchmark\", \"start\": 6802.2}, {\"speaker\": 1, \"line\": \" is for that. Yeah, that was kind of my immediate thought was no no like it's are writing this. They would know what a good Benchmark would be see it does feel it feels very weird. That was the first thing I kind of noticed when I saw the results was sure. Okay, the result looks promising but the Benchmark Suite is just wrong in my opinion. Maybe they have more reason for but they didn't really give a lot of reason why why they chose spec.\", \"start\": 6806.0}, {\"speaker\": 2, \"line\": \" yeah it seems like their evaluation section was very small compared to some of the other sections but you know that's just I'm not saying the paper is bad or anything there's probably some interesting stuff in there that's worth checking out but the actual overhead I would take with a big grain of salt I don't think it's I don't think it's accurate as an accurate representation\", \"start\": 6834.6}, {\"speaker\": 1, \"line\": \" so yeah\", \"start\": 6854.5}, {\"speaker\": 2, \"line\": \" it would be cool if somebody could evaluate it in a more real-world context or something that would be something where you'd want to make sure that you don't have that overhead\", \"start\": 6856.8}, {\"speaker\": 1, \"line\": \" yeah I would completely agree on that yeah\", \"start\": 6868.9}, {\"speaker\": 2, \"line\": \" so that concludes our research section will jump into some shoutouts our first one is actually on a bug we've talked about a little bit before I can't remember the exact episode number I don't know if you have that say oh no it's a it's an Android Bluetooth 0 click rce\", \"start\": 6873.0}, {\"speaker\": 1, \"line\": \" yeah so I just want to call this one I was like Spector said we have talked about this before I believe it was episode 28 where we talked with us and we looked at what the bug was all ready for this but I think somebody link this on our Discord so I figured I would at least kind of call it out but we've already talked about the actual XY here we've looked at the patch this blog posts actually goes a little bit into the fuzzing and how they kind of discovered it I\", \"start\": 6888.4}, {\"speaker\": 2, \"line\": \" mean the fact that we built our own like emulator called Frankenstein for it which I thought was kind of cool\", \"start\": 6915.3}, {\"speaker\": 1, \"line\": \" yeah the fuzzing itself was basically just by flipping if I recall correctly and wasn't anything too crazy but it's so they kind of go into what they did there like there's a lot of extra information that is in the so figured we'd kind\", \"start\": 6920.0}, {\"speaker\": 2, \"line\": \" of Call that out. Yeah, I think the I read it and some of the cool stuff was around the mem copy mostly because if you look at the bug originally it's basically doing a negative size to mem copy which went mem copy takes a nun size onion unsigned sighs. So negative size is really just going to be a very large size which typically isn't very easy to exploit because you know, if you try to write like 2 billion bytes or something you're going to end up. Up hitting unmapped a memory and you're going to crash and that's not what you want. If you want to exploit something unless you just care about a denial of service, but they kind of talk about some weird quirks with mem copy that they found and I forget exactly like why but there was a reason where if you pass something like negative 2 it would actually only end up copying like 64 bytes. I think it was basically it wouldn't copy more than the gap between the source and the destination or something like that. It was kind of weird it wasn't that part was a bit weird to me they didn't explain it too much but it was it was just like some weird quirks and mem copy that kind of it was cut it was pretty cool because it showed a typically unexplainable issue or something that would be very hard to exploit and how they kind of forced it and worked around it to make it an exploitable issue which is something that's like really cool to see an exploitation it's why exploitation is kind of an art you got to have to take something and keep playing with it and playing with it until you manage to find a way that works and that's kind of what this blog post demonstrates that's why it's a I think it's a good shout\", \"start\": 6932.9}, {\"speaker\": 1, \"line\": \" out yeah I'd agree I think it's a good shout out like so we've already covered the bug so didn't want to go with\", \"start\": 7027.8}, {\"speaker\": 2, \"line\": \" that yeah our next Shadow is actually from Dax which is in the wall he's not in the reverse engineering server anymore but he's a friend that we've talked to a bit and the post isn't by him but it's on his Blog the post is by somebody from the anti-cheat team at Riot actually and it's about patch guard so detecting hyper-v hypervisor based introspection\", \"start\": 7035.2}, {\"speaker\": 1, \"line\": \" yeah so there's actually two posts and I believe the second post is actually by different author\", \"start\": 7059.7}, {\"speaker\": 2, \"line\": \" yes I think there's two authors listed so this one's by Nick Peterson I think the next one is by Aiden\", \"start\": 7065.2}, {\"speaker\": 1, \"line\": \" yeah who is anti cheat at ESL\", \"start\": 7070.3}, {\"speaker\": 2, \"line\": \" yeah which is pretty cool you got that collaboration between people from two different companies but um yeah I mean we like talking about hypervisor stuff it's always fun to look at it's kind of like that dark magic aspect that but it's so low level that not many people look at it but I'm not like neither zi rui are too familiar with Windows and stuff like that so I didn't I don't think we could really cover it and do it justice very well so that's why it's more of a shed out than like a research topic but I think it could be like very interesting to viewers out there so we\", \"start\": 7074.7}, {\"speaker\": 1, \"line\": \" want to make sure it's an interesting read so they talked about basically several ways that my son's patch guard is detecting introspection by the hypervisor so try to detect when the hypervisor is being loaded malicious trying to patch it trying to change things whatever it just a few tricks that are used to do that or that Microsoft's using to do that I just don't think I know enough to really be able to summarize these tricks very well that's so you can read that and kind of get that information yeah it looks that's it is two parts well have a link to both in the description but yeah it's definitely an interesting read but goes a little bit\", \"start\": 7108.9}, {\"speaker\": 2, \"line\": \" over me or less show note is where the audio came from earlier I think that\", \"start\": 7154.9}, {\"speaker\": 1, \"line\": \" yeah I'm not sure why it started playing then it did that time but later than yeah it just ran for started\", \"start\": 7160.6}, {\"speaker\": 2, \"line\": \" but yeah but basically hacking the box was supposed there were supposed to be a conference on April 26th but it was obviously canceled because of all the craziness happening around the world right now but they they ended up doing a live stream called the lockdown livestream so while the conference wasn't happy they did have some presentations going on live stream so you can still check them out they did like a virtual conference kind of so I thought that was really cool they did they did it on the 24th I think this is day one they do have two up so they have like a little playlist actually on the same page on the right side if you see there they have a playlist of all the live streams that they did so yeah I think that might be of interest to viewers out there there might be some cool Topics in there I think we'll probably be an end up seeing more conferences do this we could eat even end up seeing Defcon do like a virtual live stream for toxic would have been presented there because I don't see the stuff going away anytime soon\", \"start\": 7167.9}, {\"speaker\": 1, \"line\": \" I know there is talk about Vegas opening back up that's said yeah I kind of agree I don't through large of a\", \"start\": 7232.3}, {\"speaker\": 2, \"line\": \" gathering it's\", \"start\": 7238.8}, {\"speaker\": 1, \"line\": \" just yeah well it's so it's Vegas opening off with being able to follow the social distancing and stuff and I don't see how they're going to fake you know like 30,000 people\", \"start\": 7239.9}, {\"speaker\": 2, \"line\": \" and six feet apart no chance so just just fewer\", \"start\": 7250.6}, {\"speaker\": 1, \"line\": \" tickets but I could definitely see a virtual conference being done there is a\", \"start\": 7255.4}, {\"speaker\": 2, \"line\": \" way he just do it as a live stream online that's probably what's gonna end up happening\", \"start\": 7260.1}, {\"speaker\": 1, \"line\": \" yeah that's it did you watch any of these\", \"start\": 7264.8}, {\"speaker\": 2, \"line\": \" talks I didn't get a chance to watch them I actually just noticed the live streams being up a day or two ago I was a bit late on it but I probably will end up you know at least skimming through it and see if there's any toxic or interesting because you know some of these conferences do have some really interesting talk so I could see one here already like about five and a half hours and that's about fuzzing and it looks like it's Colonel fuzzing because they're talking about just call so that looks like it could be an interesting talk that I might want to check out but yeah I think that pretty much summarizes all of our shoutouts I will mention again that I'll be doing a live stream at some point this week looking at realize and I don't know how much I'll be comparing it to I don't want to compare it to like every decompiler at there maybe I will I don't know we'll see you on the Livescribe mean I would like\", \"start\": 7266.5}, {\"speaker\": 1, \"line\": \" to do a detailed blog post doing pretty much that if we can create a good Corpus of code and just run that against all the decompilers\", \"start\": 7318.8}, {\"speaker\": 2, \"line\": \" and\", \"start\": 7328.1}, {\"speaker\": 1, \"line\": \" comment on you know kind of overall and then comment on how it handled kind of the different piece of the Corpus like that's something I would like to do but\", \"start\": 7329.8}, {\"speaker\": 2, \"line\": \" as I put it all in like a GitHub repo to so that people could like use it and test it and back out different things that could be a really cool like open source thing we can do\", \"start\": 7337.6}, {\"speaker\": 1, \"line\": \" oh see how to chat some dude first topic actually was realized I talked about something things that we noticed kind of give The quick summary though I mean again I wasn't super disappointed by it didn't do some things that I like it did some things I liked I mean it I won't be switching to what but I mean as a free option\", \"start\": 7347.5}, {\"speaker\": 2, \"line\": \" it's the things that are ring since it's free of\", \"start\": 7376.0}, {\"speaker\": 1, \"line\": \" course I do want to jump back just talking about hacking the box and just mention that their description does include when all of the talks all the different talks started it doesn't include timestamps to them it includes the real time that they started so like you know ten am was 60 CBS in 60 days\", \"start\": 7378.3}, {\"speaker\": 2, \"line\": \" I still say those timestamps look a little weird I think the topic\", \"start\": 7399.5}, {\"speaker\": 1, \"line\": \" yeah well I don't think they were one minute yeah so those timestamps are but that's the real time so once you find one of them you know Skip another our head like you can see the relative time difference in theory between them\", \"start\": 7402.5}, {\"speaker\": 2, \"line\": \" you can also check the comments sometimes there's like Heroes who don't wear capes in the comments will make go proper\", \"start\": 7417.7}, {\"speaker\": 1, \"line\": \" time the up actually exactly that\", \"start\": 7423.0}, {\"speaker\": 2, \"line\": \" yep timestamps so there you go they're all right there for you you from that awesome dude so but yeah I think we'll wrap up the show here thanks everyone who tuned in you can catch the vods on Twitch or on YouTube 24 hours after the stream we also have previous podcasts up on Spotify Apple podcasts Google podcasts and we have an anchor link that has them all kind of collated there like I said I'll be doing a stream at some point this week probably tomorrow on looking at realize you can also join our Discord or follow us on Twitter if you want to get involved in the community but yeah we'll be back that's Monday at the same time 3:00 p.m. Eastern 4 p.m. Pacific\", \"start\": 7425.4}, {\"speaker\": 1, \"line\": \" isn't and I'll just add in an apology for the audio issues that we've had this stream is\", \"start\": 7462.7}, {\"speaker\": 2, \"line\": \" only for like a few seconds we're fine\", \"start\": 7469.8}], \"speakers\": {\"2\": \"Specter\", \"1\": \"zi\"}, \"offset\": \"8\", \"youtube\": \"__g9cH0A8sQ\"}\nTRANSCRIPT--><!--kg-card-end: html-->","authors":[{"name":"zi","slug":"zi","profile_image":"https://dayzerosec.com/content/images/2020/04/zi_head_transp.png"},{"name":"Specter","slug":"specter","profile_image":"https://dayzerosec.com/content/images/2019/11/specter-1.png"}],"tags":[{"id":"5dc68a9598d37b0001178106","title":"Podcast","url":"https://dayzerosec.com/tag/podcast/","path":"podcast"}]}},"context":{}}